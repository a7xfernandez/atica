var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.233,1,2.661]],["body/classes/AccessToken.html",[0,0.363,1,4.143,2,1.007,3,0.128,4,0.11,5,0.092,6,5.947,7,3.785,8,0.604,9,1.92,10,5.947,11,1.955,12,6.192,13,7.458,14,0.88,15,6.192,16,1.443,17,0.014,18,1.443,19,0.775,20,1.007,21,1.389,22,1.123,23,2.66,24,0.235,25,3.785,26,4.199,27,3.476,28,0.971,29,0.128,30,4.827,31,0.008,32,0.01,33,0.008]],["title/classes/Account.html",[0,0.233,34,1.751]],["body/classes/Account.html",[0,0.273,2,0.667,3,0.085,4,0.073,5,0.061,8,0.69,9,1.447,14,1.032,17,0.014,19,0.909,20,0.974,21,1.598,22,1.689,24,0.209,25,3.66,27,2.303,29,0.085,31,0.005,32,0.008,33,0.005,34,2.055,35,2.781,36,3.796,37,2.779,38,2.779,39,2.651,40,3.252,41,1.773,42,3.252,43,2.779,44,2.779,45,3.575,46,3.198,47,2.781,48,3.198,49,3.393,50,3.687,51,3.198,52,3.687,53,3.198,54,4.794,55,3.198,56,3.198,57,5.448,58,3.198,59,1.298,60,3.687,61,3.198,62,3.198,63,3.687,64,3.198,65,3.198,66,3.198,67,0.692,68,2.303,69,2.303,70,3.122,71,4.311,72,3.361,73,1.538,74,4.751,75,3.198]],["title/classes/AccountDto.html",[0,0.233,76,2.347]],["body/classes/AccountDto.html",[0,0.217,2,0.773,3,0.098,4,0.084,5,0.071,8,0.464,9,1.608,14,1.069,17,0.014,19,0.942,20,1.082,21,1.661,22,1.644,23,3.048,24,0.196,28,0.746,29,0.098,31,0.006,32,0.009,33,0.006,36,3.748,37,3.017,38,3.017,39,2.878,40,3.53,41,1.925,42,3.53,43,3.017,44,3.017,49,3.564,59,1.443,76,3.06,77,3.224,78,4.003,79,3.706,80,3.706,81,3.706,82,3.706,83,3.706,84,3.706,85,3.706,86,3.706,87,3.706,88,1.237,89,2.669,90,2.479]],["title/controllers/AccountsController.html",[91,1.379,92,2.864]],["body/controllers/AccountsController.html",[0,0.212,3,0.096,4,0.082,5,0.069,8,0.452,14,0.839,16,1.765,17,0.014,18,1.765,19,0.739,20,1.232,21,1.679,22,1.373,24,0.256,28,0.727,29,0.096,31,0.006,32,0.009,33,0.006,41,2.256,88,1.206,91,1.252,92,3.669,93,1.206,94,3.144,95,1.739,96,1.58,97,2.699,98,2.844,99,3.192,100,1.915,101,3.669,102,3.614,103,1.83,104,2.017,105,3.669,106,3.614,107,2.264,108,4.922,109,3.996,110,3.614,111,1.915,112,2.844,113,2.017,114,2.017,115,2.017,116,0.65,117,1.915,118,2.976,119,3.144,120,1.915,121,1.352,122,3.192,123,1.406,124,2.603,125,2.603,126,1.915,127,1.915,128,2.603,129,1.83,130,3.614,131,3.144,132,3.614,133,2.603,134,3.614]],["title/classes/AccountsCredential.html",[0,0.233,135,2.22]],["body/classes/AccountsCredential.html",[0,0.205,2,0.729,3,0.093,4,0.08,5,0.067,8,0.725,9,1.543,14,1.014,17,0.014,19,0.893,20,1.038,21,1.116,22,1.66,24,0.188,29,0.093,31,0.006,32,0.008,33,0.006,34,3.211,37,2.922,38,2.922,41,1.864,43,2.922,47,3.04,49,3.497,50,3.876,52,3.876,59,1.384,60,3.876,63,3.876,67,1.579,70,3.329,71,4.224,72,3.583,73,1.681,135,2.777,136,4.88,137,3.04,138,3.63,139,2.788,140,3.495,141,3.495,142,3.495,143,3.495,144,3.495,145,3.495,146,3.902,147,2.74,148,2.394,149,3.495,150,3.495,151,3.04,152,3.495,153,2.338]],["title/classes/AccountsCredentialDto.html",[0,0.233,154,3.119]],["body/classes/AccountsCredentialDto.html",[0,0.233,2,0.832,3,0.105,4,0.091,5,0.076,8,0.499,9,1.691,14,1.028,17,0.014,19,0.905,20,1.138,22,1.446,23,2.88,24,0.235,28,0.802,29,0.105,31,0.007,32,0.009,33,0.007,34,3.183,37,3.135,38,3.135,41,2,43,3.135,49,3.645,59,1.517,67,1.602,76,2.351,139,2.991,146,4.276,154,4.276,155,6.438,156,2.87,157,3.466,158,3.985,159,3.985,160,3.466,161,3.466,162,3.985,163,3.125,164,3.125]],["title/controllers/AccountsCredentialsController.html",[91,1.379,165,2.864]],["body/controllers/AccountsCredentialsController.html",[0,0.226,3,0.102,4,0.088,5,0.074,8,0.482,11,1.561,14,0.757,16,1.593,17,0.014,18,1.593,19,0.667,20,1.112,21,1.371,22,1.239,24,0.262,28,0.775,29,0.102,31,0.006,32,0.009,33,0.006,41,1.714,67,1.322,88,2.039,91,1.335,93,1.286,95,1.854,96,1.652,98,2.974,103,1.652,104,2.15,105,3.837,111,3.236,112,2.15,113,2.15,114,2.15,115,2.15,116,0.693,117,2.041,121,1.442,123,1.499,124,2.775,125,2.775,127,2.041,129,1.652,133,2.775,165,3.837,166,3.409,167,3.352,168,4.399,169,1.779,170,3.352,171,4.482,172,3.853,173,3.853,174,3.08,175,2.414,176,2.414,177,4.178,178,2.578,179,1.772,180,2.578,181,3.853,182,3.853]],["title/modules/AccountsCredentialsModule.html",[183,1.189,184,2.107]],["body/modules/AccountsCredentialsModule.html",[0,0.247,3,0.112,4,0.096,5,0.081,17,0.014,24,0.278,29,0.112,31,0.007,32,0.01,33,0.007,67,0.912,88,1.407,93,1.891,116,0.759,135,2.353,165,4.608,166,2.353,174,4.005,175,2.641,176,2.641,183,1.694,184,4.097,185,1.779,186,2.391,187,3.667,188,3.667,189,3.667,190,3.667,191,3.707,192,2.605,193,1.938,194,1.938,195,4.216,196,2.857,197,2.857,198,3.342,199,2.641,200,2.82,201,4.216,202,3.549,203,1.938,204,3.036,205,4.216]],["title/injectables/AccountsCredentialsService.html",[174,2.006,206,0.83]],["body/injectables/AccountsCredentialsService.html",[0,0.17,3,0.077,4,0.066,5,0.055,8,0.362,11,1.757,14,0.879,16,1.849,17,0.014,18,1.849,19,0.723,20,1.291,24,0.255,29,0.077,31,0.005,32,0.007,33,0.005,34,1.275,41,1.857,59,1.806,67,1.405,73,1.393,88,1.448,96,1.345,97,2.298,98,2.42,100,2.298,103,1.791,104,2.42,116,0.521,121,1.083,123,1.127,129,1.791,135,1.616,138,3.257,139,2.086,148,2.086,169,1.448,170,3.773,171,4.066,174,2.187,177,3.401,178,1.937,179,1.994,199,1.814,200,1.937,203,1.332,206,0.905,207,1.083,208,4.066,209,2.519,210,2.884,211,4.337,212,2.896,213,3.273,214,5.2,215,3.617,216,2.896,217,2.896,218,2.339,219,4.337,220,2.896,221,2.559,222,2.896,223,2.896,224,1.937,225,1.937,226,2.896,227,4.337,228,2.844,229,2.896,230,2.896,231,4.337,232,2.896,233,2.896]],["title/modules/AccountsModule.html",[183,1.189,234,2.107]],["body/modules/AccountsModule.html",[0,0.266,3,0.12,4,0.104,5,0.087,17,0.014,24,0.277,29,0.12,31,0.008,32,0.01,33,0.008,34,2.001,92,4.783,93,1.988,116,0.818,118,4.051,119,3.953,183,1.781,185,1.918,186,2.513,192,2.738,193,2.09,194,2.09,196,3.003,197,2.292,198,3.513,202,3.73,203,2.09,234,4.053,235,3.953,236,3.953,237,3.953,238,4.544,239,3.953,240,4.544,241,4.544]],["title/classes/AccountsProfile.html",[0,0.233,242,2.661]],["body/classes/AccountsProfile.html",[0,0.201,2,0.716,3,0.091,4,0.078,5,0.066,8,0.615,9,1.524,14,1.009,17,0.014,19,0.909,20,1.025,21,1.102,22,1.651,24,0.186,29,0.091,31,0.006,32,0.008,33,0.006,34,3.125,37,2.893,38,2.893,41,1.846,43,2.893,49,3.477,50,3.838,52,3.838,59,1.367,60,3.838,63,3.838,67,1.571,70,3.287,71,3.838,72,2.472,73,1.652,139,2.76,147,2.692,148,2.364,153,2.297,164,2.692,242,3.287,243,6.315,244,2.986,245,4.499,246,3.433,247,3.433,248,3.433,249,3.433,250,3.433,251,3.433,252,3.538,253,3.433,254,4.913,255,4.913,256,4.274,257,3.433,258,3.433,259,4.913,260,4.913]],["title/classes/AccountsProfileDto.html",[0,0.233,261,3.119]],["body/classes/AccountsProfileDto.html",[0,0.226,2,0.804,3,0.102,4,0.088,5,0.074,8,0.482,9,1.652,14,1.043,17,0.014,19,0.918,20,1.112,21,1.196,22,1.533,23,2.953,24,0.202,28,0.775,29,0.102,31,0.006,32,0.009,33,0.006,34,2.689,37,3.08,38,3.08,41,1.965,43,3.08,49,3.608,59,1.482,67,1.618,76,3.604,139,2.939,245,4.79,252,3.837,261,4.178,262,6.503,263,2.775,264,3.352,265,3.853,266,3.853,267,3.352,268,3.853,269,3.352,270,3.853,271,3.853]],["title/controllers/AccountsProfilesController.html",[91,1.379,272,2.864]],["body/controllers/AccountsProfilesController.html",[0,0.201,3,0.091,4,0.078,5,0.066,8,0.428,11,1.386,14,0.814,16,1.713,17,0.014,18,1.713,19,0.717,20,1.195,21,1.657,22,1.332,24,0.251,28,0.689,29,0.091,31,0.006,32,0.008,33,0.006,41,2.216,67,1.354,88,1.912,91,1.186,93,1.143,95,1.647,96,1.52,97,2.597,98,2.736,99,3.588,100,1.813,101,3.53,103,1.776,104,1.91,105,3.53,107,2.144,109,3.844,111,1.813,112,2.736,113,1.91,114,1.91,115,1.91,116,0.616,117,1.813,121,1.281,123,1.332,124,2.465,125,2.465,127,1.813,128,2.465,129,1.776,133,2.465,175,2.144,179,1.574,272,3.53,273,3.69,274,2.978,275,5.728,276,3.423,277,3.423,278,4.853,279,3.423,280,3.588,281,2.978,282,2.144,283,3.844,284,3.423,285,3.423,286,3.423,287,3.423]],["title/modules/AccountsProfilesModule.html",[183,1.189,288,2.22]],["body/modules/AccountsProfilesModule.html",[0,0.261,3,0.118,4,0.102,5,0.085,17,0.014,24,0.275,29,0.118,31,0.007,32,0.01,33,0.007,67,0.965,88,1.488,93,1.963,116,0.802,175,2.792,183,1.758,185,1.881,186,2.481,192,2.704,193,2.05,194,2.05,196,2.965,197,2.248,198,3.469,199,2.792,202,3.683,203,2.05,242,2.982,272,4.738,273,2.63,280,5.018,281,3.877,288,4.25,289,3.877,290,3.877,291,3.877,292,4.457,293,4.457,294,3.877,295,4.457]],["title/injectables/AccountsProfilesService.html",[206,0.83,280,2.492]],["body/injectables/AccountsProfilesService.html",[0,0.194,3,0.088,4,0.075,5,0.063,8,0.414,11,1.937,14,0.875,16,1.841,17,0.014,18,1.841,19,0.77,20,1.285,24,0.258,29,0.088,31,0.006,32,0.008,33,0.006,41,1.98,59,2.038,67,1.413,73,1.591,88,1.596,96,1.483,97,2.533,98,2.669,99,2.996,100,2.533,103,1.742,104,2.669,107,2.996,116,0.595,121,1.237,123,1.287,129,1.742,139,1.591,148,1.591,179,1.52,199,2.071,203,1.52,206,0.998,207,1.237,210,2.85,215,3.856,218,2.275,224,2.212,228,2.583,242,2.212,278,4.808,280,2.996,282,2.071,283,3.75,294,2.876,296,5.681,297,2.876,298,3.306,299,3.306,300,4.782,301,3.306,302,3.306,303,3.306,304,3.306,305,3.306,306,3.306,307,3.306,308,3.306]],["title/injectables/AccountsService.html",[118,2.006,206,0.83]],["body/injectables/AccountsService.html",[0,0.149,3,0.067,4,0.058,5,0.049,8,0.317,11,1.588,14,0.914,16,1.922,17,0.014,18,1.922,19,0.804,20,1.341,21,1.076,24,0.243,29,0.067,31,0.004,32,0.007,33,0.004,34,1.117,36,3.653,39,2.306,41,1.735,45,3.182,59,2.071,67,0.549,68,1.826,69,1.826,73,1.22,96,1.216,97,2.077,98,2.188,99,2.456,100,2.077,103,1.912,104,2.188,107,2.456,108,4.442,116,0.456,118,1.977,120,3.089,121,0.949,122,2.456,123,0.987,129,1.912,169,1.309,179,1.166,203,1.166,206,0.818,207,0.949,210,2.964,215,3.379,218,2.497,221,2.313,224,1.697,228,2.956,239,2.206,309,2.206,310,2.306,311,3.921,312,2.536,313,2.536,314,3.921,315,3.921,316,2.536,317,2.206,318,4.691,319,2.536,320,4.17,321,3.921,322,2.536,323,2.536,324,2.536,325,2.536,326,2.536,327,2.536,328,2.536,329,2.536,330,2.206,331,2.536,332,2.536,333,2.206,334,2.206,335,1.589,336,1.344,337,2.536,338,2.536,339,2.536,340,2.536]],["title/classes/AccountsType.html",[0,0.233,45,2.347]],["body/classes/AccountsType.html",[0,0.217,2,0.773,3,0.098,4,0.084,5,0.071,8,0.749,9,1.608,14,1.005,17,0.014,19,0.885,20,1.082,21,1.454,22,1.644,24,0.14,29,0.098,31,0.006,32,0.009,33,0.006,37,3.017,38,3.017,41,1.925,43,3.017,45,3.06,49,3.564,50,4.003,52,4.003,57,4.067,59,1.443,60,4.003,63,4.003,67,1.57,68,5.226,70,3.47,71,4.003,73,1.783,74,2.906,139,2.878,147,2.906,148,2.878,153,2.479,341,3.224,342,4.308,343,3.706,344,3.706,345,3.706,346,3.706,347,3.706,348,3.706,349,3.706,350,3.706,351,3.706]],["title/classes/AccountsTypeDto.html",[0,0.233,78,2.661]],["body/classes/AccountsTypeDto.html",[0,0.242,2,0.861,3,0.109,4,0.094,5,0.079,8,0.516,9,1.732,14,1.038,17,0.014,19,0.914,20,1.165,21,1.522,22,1.472,23,2.906,24,0.156,28,0.83,29,0.109,31,0.007,32,0.009,33,0.007,37,3.192,38,3.192,41,2.036,43,3.192,49,3.684,59,1.554,67,1.616,78,3.736,89,5.379,139,3.045,342,4.558,352,2.971,353,4.126,354,4.126,355,3.589,356,4.126,357,4.126,358,3.589]],["title/controllers/AccountsTypesController.html",[91,1.379,359,2.864]],["body/controllers/AccountsTypesController.html",[0,0.237,3,0.107,4,0.092,5,0.077,8,0.506,14,0.783,16,1.208,17,0.014,18,1.208,19,0.506,20,0.843,21,1.405,22,1.28,24,0.266,28,0.813,29,0.107,31,0.007,32,0.009,33,0.007,41,1.771,67,1.355,88,2.09,90,3.683,91,1.4,93,1.349,95,1.944,96,1.707,97,2.916,100,2.14,101,3.964,103,1.707,111,2.14,112,2.255,113,2.255,114,2.255,115,2.255,116,0.727,117,2.14,121,1.512,123,1.572,124,2.909,125,2.909,126,2.14,127,2.14,128,2.909,129,1.707,175,2.531,310,3.235,359,3.964,360,3.694,361,3.514,362,5.447,363,4.04,364,4.04,365,3.317,366,2.703,367,2.531,368,2.703,369,4.04,370,4.04]],["title/modules/AccountsTypesModule.html",[183,1.189,371,2.22]],["body/modules/AccountsTypesModule.html",[0,0.261,3,0.118,4,0.102,5,0.085,17,0.014,24,0.275,29,0.118,31,0.007,32,0.01,33,0.007,45,2.63,67,0.965,69,3.21,88,1.488,93,1.963,116,0.802,175,2.792,183,1.758,185,1.881,186,2.481,192,2.704,193,2.05,194,2.05,196,2.965,197,2.248,198,3.469,199,2.792,202,3.683,203,2.05,359,4.738,360,2.63,365,4.243,366,2.982,371,4.25,372,3.877,373,3.877,374,3.877,375,4.457,376,4.457,377,4.457]],["title/injectables/AccountsTypesService.html",[206,0.83,365,2.107]],["body/injectables/AccountsTypesService.html",[0,0.204,3,0.092,4,0.079,5,0.067,8,0.436,11,2.011,14,0.896,16,1.73,17,0.014,18,1.73,19,0.724,20,1.207,21,1.298,24,0.262,29,0.092,31,0.006,32,0.008,33,0.006,41,1.121,45,2.056,59,1.609,67,1.442,69,2.509,73,1.676,88,1.657,90,3.322,96,1.54,97,2.63,100,2.63,103,1.794,116,0.627,121,1.304,123,1.356,129,1.794,179,1.602,199,2.183,203,1.602,206,1.036,207,1.304,210,2.886,215,3.95,218,2.343,224,2.331,228,2.66,310,3.033,342,2.509,365,2.63,367,2.183,368,2.331,378,4.459,379,3.031,380,4.965,381,3.484,382,3.484,383,4.965,384,3.484,385,3.484,386,4.965,387,3.484,388,4.965,389,3.484,390,3.484,391,3.484,392,3.484]],["title/classes/Agent.html",[0,0.233,393,3.119]],["body/classes/Agent.html",[0,0.357,2,1.27,3,0.161,4,0.139,5,0.117,17,0.013,29,0.161,31,0.01,32,0.012,33,0.01,393,5.6,394,5.295]],["title/controllers/AgentsController.html",[91,1.379,395,2.864]],["body/controllers/AgentsController.html",[0,0.221,3,0.1,4,0.086,5,0.072,8,0.473,14,0.747,16,1.572,17,0.014,18,1.572,19,0.658,20,1.097,22,1.223,24,0.26,28,0.76,29,0.1,31,0.006,32,0.009,33,0.006,59,1.979,91,1.309,93,1.261,95,1.818,96,1.63,103,1.63,111,3.202,112,2.109,113,2.109,114,2.109,115,2.109,116,0.68,117,2.001,121,1.413,123,1.47,126,2.001,127,2.001,129,1.63,169,1.755,180,2.528,310,2.908,335,2.367,336,2.785,395,3.785,396,3.286,397,3.778,398,3.286,399,4.455,400,3.778,401,2.721,402,4.706,403,3.785,404,3.778,405,4.706,406,2.721,407,3.787,408,3.286,409,4.122,410,2.528,411,3.778,412,3.778,413,3.778,414,2.963,415,2.721,416,2.528,417,3.778]],["title/modules/AgentsModule.html",[183,1.189,418,2.661]],["body/modules/AgentsModule.html",[0,0.217,3,0.098,4,0.084,5,0.071,17,0.014,24,0.285,29,0.098,31,0.006,32,0.009,33,0.006,67,1.295,93,1.731,116,0.667,166,2.068,183,1.551,184,3.745,185,1.564,186,2.189,191,3.564,192,2.385,193,1.704,194,1.704,196,2.615,197,2.615,204,2.669,234,3.745,273,2.186,288,3.945,360,2.186,371,3.945,395,4.308,407,4.428,408,3.224,418,5.334,419,3.224,420,3.224,421,3.706,422,3.706,423,3.706,424,3.06,425,2.479,426,2.906,427,2.479,428,2.669,429,2.669]],["title/injectables/AgentsService.html",[206,0.83,407,2.492]],["body/injectables/AgentsService.html",[0,0.171,3,0.077,4,0.066,5,0.056,8,0.365,11,1.767,14,0.742,16,1.562,17,0.014,18,1.562,19,0.654,20,1.09,24,0.269,29,0.077,31,0.005,32,0.007,33,0.005,36,2.732,59,1.811,67,1.13,96,1.352,103,1.352,116,0.525,118,2.923,120,2.31,121,1.091,122,1.828,123,1.135,129,1.352,135,2.434,136,1.952,138,1.828,148,1.403,168,2.101,169,1.456,174,2.923,176,1.828,179,2.665,200,1.952,206,0.91,207,1.091,208,1.828,210,2.533,213,3.402,218,1.767,225,1.952,228,2.853,310,2.098,336,3.07,365,3.07,366,1.952,378,1.952,398,3.794,399,3.886,407,2.732,409,3.42,410,1.952,430,2.538,431,2.101,432,3.761,433,4.096,434,2.917,435,3.141,436,2.917,437,3.42,438,2.917,439,2.288,440,2.101,441,2.101,442,4.361,443,2.288,444,2.573,445,2.288,446,2.288,447,2.917,448,2.288,449,2.917,450,2.288,451,2.917,452,2.288,453,2.917,454,4.096,455,2.288,456,2.288,457,2.288,458,2.917,459,2.288,460,2.288,461,3.42,462,3.141,463,2.538]],["title/injectables/ApiKeyAuthGuard.html",[206,0.83,464,2.864]],["body/injectables/ApiKeyAuthGuard.html",[0,0.332,3,0.15,4,0.129,5,0.109,17,0.014,24,0.259,29,0.15,31,0.01,32,0.012,33,0.01,116,1.021,206,1.429,207,2.122,464,4.931,465,4.934,466,4.085,467,4.085,468,3.005,469,2.394,470,5.673]],["title/injectables/ApiKeyStrategy.html",[206,0.83,471,2.661]],["body/injectables/ApiKeyStrategy.html",[0,0.214,3,0.097,4,0.083,5,0.07,8,0.458,11,1.482,14,0.731,16,1.537,17,0.014,18,1.537,19,0.643,20,1.073,21,1.333,24,0.244,29,0.097,31,0.006,32,0.009,33,0.006,95,1.761,96,1.594,103,1.135,116,0.659,126,1.939,129,1.843,148,1.761,206,1.073,207,1.369,210,2.508,218,1.482,228,1.683,444,3.033,468,1.939,469,1.544,471,3.439,472,5.169,473,3.183,474,5.942,475,3.702,476,3.183,477,3.929,478,3.659,479,5.141,480,7.04,481,5.169,482,3.659,483,3.659,484,3.659,485,5.942,486,3.183,487,3.659,488,2.635,489,3.183,490,2.87,491,5.169,492,2.635,493,3.659,494,2.87,495,3.659,496,3.183,497,3.183,498,2.87,499,2.87,500,3.183,501,3.659,502,3.659,503,2.635,504,5.141,505,3.659,506,3.183,507,3.183,508,3.659]],["title/modules/AppModule.html",[183,1.189,509,2.864]],["body/modules/AppModule.html",[0,0.182,3,0.082,4,0.071,5,0.059,17,0.014,19,0.388,24,0.288,29,0.082,31,0.005,32,0.008,33,0.005,88,1.808,93,1.036,116,0.559,148,2.197,166,1.732,183,1.365,184,3.527,185,1.31,186,1.927,191,3.357,192,2.1,193,1.427,194,1.427,197,2.303,198,1.831,202,1.944,203,1.427,234,3.527,273,1.831,288,3.716,360,1.831,371,3.716,418,4.454,424,2.694,425,2.076,427,2.076,428,2.235,429,2.235,509,5.789,510,2.7,511,2.7,512,4.454,513,4.454,514,4.454,515,4.454,516,3.104,517,3.104,518,2.7,519,2.7,520,3.104,521,3.104,522,3.104,523,3.104,524,3.104,525,3.104,526,3.104,527,3.104,528,3.104,529,3.104,530,3.104]],["title/controllers/AuthController.html",[91,1.379,531,2.864]],["body/controllers/AuthController.html",[0,0.2,1,3.273,3,0.09,4,0.078,5,0.065,8,0.427,14,0.485,16,1.021,17,0.014,18,1.463,19,0.716,20,0.712,22,0.794,24,0.28,28,0.687,29,0.09,31,0.006,32,0.008,33,0.006,91,1.183,93,1.139,95,1.642,96,1.517,103,1.058,111,2.592,116,0.614,117,1.808,121,1.277,126,1.808,129,1.058,183,1.463,210,2.225,218,1.382,362,4.256,406,2.458,464,2.458,467,2.458,468,1.808,477,3.192,492,2.458,496,2.969,497,2.969,498,2.676,499,2.676,500,4.974,531,3.523,532,2.969,533,5.719,534,3.413,535,3.413,536,3.413,537,4.892,538,3.413,539,3.413,540,3.523,541,2.676,542,4.256,543,3.413,544,4.892,545,4.892,546,4.892,547,4.892,548,3.413,549,2.969,550,2.458,551,3.413,552,5.719,553,2.458,554,3.413,555,3.413,556,3.413,557,3.413,558,4.892,559,4.892,560,4.892,561,4.892,562,4.256,563,4.892,564,4.892,565,3.413,566,2.138,567,3.413,568,3.413,569,3.413,570,3.413,571,3.413,572,3.413,573,3.413,574,3.413,575,3.413]],["title/modules/AuthModule.html",[183,1.189,512,2.661]],["body/modules/AuthModule.html",[0,0.196,3,0.089,4,0.076,5,0.064,17,0.014,24,0.289,29,0.089,31,0.006,32,0.008,33,0.006,88,1.116,93,1.609,116,0.602,166,1.866,183,1.442,184,3.62,185,1.411,186,2.035,191,3.446,192,2.217,193,1.538,194,1.538,196,2.431,197,2.431,234,3.62,424,2.845,425,2.237,427,2.237,468,1.772,471,4.572,477,3.814,492,2.408,512,5.31,518,2.909,519,2.909,531,4.071,576,2.909,577,3.344,578,2.909,579,4.572,580,4.572,581,3.344,582,3.344,583,3.344,584,4.822,585,3.344,586,2.622,587,3.344,588,3.344,589,3.344,590,3.344,591,2.909,592,2.909,593,3.344,594,3.344,595,3.344,596,3.344,597,3.344,598,3.344,599,3.344]],["title/injectables/AuthService.html",[206,0.83,477,2.22]],["body/injectables/AuthService.html",[0,0.164,1,2.823,3,0.074,4,0.064,5,0.053,8,0.349,10,2.428,11,1.709,14,0.806,16,1.695,17,0.014,18,1.695,19,0.637,20,1.183,21,1.602,24,0.252,29,0.074,31,0.005,32,0.007,33,0.005,39,2.03,44,1.408,67,0.604,96,1.308,103,1.577,116,0.502,118,2.859,129,1.758,174,2.859,176,1.749,179,2.607,206,0.881,207,1.044,208,1.749,210,2.726,213,3.352,218,1.131,221,3.344,225,1.868,228,2.339,330,3.67,431,2.01,432,3.663,435,3.038,441,2.01,444,1.647,475,3.663,477,2.355,481,2.428,499,3.308,503,4.082,506,2.428,542,2.428,549,2.428,586,2.189,591,2.428,600,2.428,601,4.219,602,4.219,603,6.648,604,2.792,605,4.219,606,2.792,607,4.445,608,2.792,609,3.164,610,2.792,611,4.219,612,2.792,613,2.792,614,4.219,615,2.792,616,2.792,617,4.931,618,2.792,619,2.792,620,2.792,621,2.792,622,2.792,623,2.792,624,2.792,625,4.219,626,2.792,627,2.428,628,2.792,629,2.792,630,2.792,631,2.792,632,2.792,633,2.792]],["title/modules/CommonModule.html",[183,1.189,191,2.006]],["body/modules/CommonModule.html",[0,0.291,3,0.132,4,0.113,5,0.095,17,0.014,24,0.239,29,0.132,31,0.008,32,0.011,33,0.008,116,0.895,183,1.887,185,2.098,186,2.663,191,3.94,192,2.901,193,2.286,194,2.286,196,3.182,198,3.723,213,4.103,634,4.324,635,4.324,636,4.324,637,4.971,638,4.971]],["title/injectables/CommonService.html",[206,0.83,213,2.006]],["body/injectables/CommonService.html",[0,0.233,3,0.105,4,0.091,5,0.076,8,0.499,9,1.691,14,0.884,16,1.631,17,0.014,18,1.631,19,0.778,20,1.138,21,1.715,24,0.207,29,0.105,31,0.007,32,0.009,33,0.007,59,1.109,96,1.691,103,1.691,116,0.717,127,3.293,129,1.691,153,2.666,179,2.859,206,1.138,207,1.491,210,2.813,213,2.75,218,1.614,228,2.859,503,2.87,607,4.276,609,3.043,617,5.815,639,3.466,640,6.217,641,5.453,642,5.453,643,5.453,644,3.985,645,5.453,646,3.985,647,3.466,648,5.453,649,3.985,650,4.744,651,3.985,652,5.453,653,3.985,654,3.985]],["title/classes/CreateAccessToken.html",[0,0.233,540,2.864]],["body/classes/CreateAccessToken.html",[0,0.362,2,1.003,3,0.127,4,0.109,5,0.092,7,3.769,8,0.602,9,1.915,14,0.878,17,0.014,19,0.773,21,1.616,22,1.436,23,2.655,24,0.234,25,4.843,26,5.936,27,3.461,28,0.967,29,0.127,31,0.008,32,0.01,33,0.008,39,3.283,540,4.447,541,5.351,609,3.808,655,5.936,656,4.807,657,4.807,658,4.807,659,4.807]],["title/classes/CreateAccountDto.html",[0,0.233,120,2.107]],["body/classes/CreateAccountDto.html",[0,0.245,2,0.873,3,0.111,4,0.095,5,0.08,8,0.524,9,1.748,14,1.012,17,0.014,19,0.891,21,1.71,22,1.656,23,3.064,24,0.214,28,0.842,29,0.111,31,0.007,32,0.009,33,0.007,39,3.067,40,3.762,42,3.762,44,3.215,67,0.906,78,4.265,89,3.014,90,2.8,120,2.987,440,5.282,660,3.282,661,6.376,662,4.185,663,4.185,664,4.185,665,4.185,666,4.185]],["title/classes/CreateAccountsCredentialDto.html",[0,0.233,171,2.492]],["body/classes/CreateAccountsCredentialDto.html",[0,0.261,2,0.93,3,0.118,4,0.102,5,0.085,8,0.558,9,1.823,14,0.935,17,0.014,19,0.824,21,1.319,22,1.53,23,2.963,24,0.249,28,0.897,29,0.118,31,0.007,32,0.01,33,0.007,34,3.08,67,1.514,76,3.882,88,2.335,138,4.122,139,3.165,146,4.611,156,3.21,157,3.877,160,3.877,161,3.877,163,3.495,164,3.495,171,3.683,667,6.086]],["title/classes/CreateAccountsProfileDto.html",[0,0.233,282,2.492]],["body/classes/CreateAccountsProfileDto.html",[0,0.266,2,0.948,3,0.12,4,0.104,5,0.087,8,0.569,9,1.847,14,0.944,17,0.014,19,0.831,21,1.336,22,1.545,23,2.977,24,0.226,28,0.914,29,0.12,31,0.008,32,0.01,33,0.008,34,2.924,67,1.526,76,3.919,88,2.353,139,3.195,163,3.563,245,5.208,252,4.288,263,3.272,264,3.953,267,3.953,269,3.953,282,3.73,668,6.132]],["title/classes/CreateAccountsTypeDto.html",[0,0.233,367,2.492]],["body/classes/CreateAccountsTypeDto.html",[0,0.29,2,1.033,3,0.131,4,0.113,5,0.095,8,0.619,9,1.951,14,0.894,17,0.014,19,0.788,21,1.634,22,1.464,23,2.925,24,0.187,28,0.996,29,0.131,31,0.008,32,0.011,33,0.008,67,1.497,88,2.309,139,3.328,342,4.982,352,3.564,355,4.306,358,4.306,367,3.942,669,6.018]],["title/classes/CreateAgentDto.html",[0,0.233,399,2.492]],["body/classes/CreateAgentDto.html",[0,0.239,2,0.852,3,0.108,4,0.093,5,0.078,8,0.511,9,1.719,14,1.035,17,0.014,19,0.911,21,1.773,22,1.694,23,3.095,24,0.155,28,0.821,29,0.108,31,0.007,32,0.009,33,0.007,39,3.029,40,3.714,42,3.714,44,3.175,399,3.473,609,3.513,670,6.479,671,3.201,672,5.476,673,4.083,674,4.083,675,4.083,676,4.083,677,4.083,678,4.083]],["title/classes/CreateCustomerDto.html",[0,0.233,679,2.492]],["body/classes/CreateCustomerDto.html",[0,0.228,2,0.812,3,0.103,4,0.089,5,0.074,8,0.487,9,1.664,14,1.045,17,0.014,19,0.921,21,1.782,22,1.711,23,3.108,24,0.147,28,0.783,29,0.103,31,0.007,32,0.009,33,0.007,39,2.954,40,3.623,42,3.623,44,3.096,609,3.427,672,5.341,679,3.361,680,6.519,681,3.052,682,6.141,683,3.892,684,3.892,685,3.892,686,3.892,687,3.892,688,3.892,689,3.892]],["title/classes/CreatePackageDto.html",[0,0.233,690,2.22]],["body/classes/CreatePackageDto.html",[0,0.218,2,0.776,3,0.098,4,0.085,5,0.071,8,0.465,9,1.612,14,1.053,17,0.014,19,0.927,21,1.588,22,1.724,23,3.118,24,0.141,28,0.748,29,0.098,31,0.006,32,0.009,33,0.006,59,2.122,566,3.754,690,2.901,691,6.549,692,2.915,693,4.699,694,4.699,695,4.699,696,4.699,697,4.699,698,4.699,699,4.699,700,3.718,701,3.718,702,3.718,703,3.718,704,3.718,705,3.718,706,3.718,707,3.718]],["title/classes/CreatePackageDto-1.html",[0,0.194,416,2.216,690,1.849]],["body/classes/CreatePackageDto-1.html",[0,0.19,2,0.678,3,0.086,4,0.074,5,0.062,8,0.407,9,1.465,14,1.079,17,0.014,19,0.95,20,0.986,21,1.518,22,1.765,23,3.151,24,0.123,28,0.654,29,0.086,31,0.005,32,0.008,33,0.005,37,2.806,38,2.806,41,1.79,43,2.806,49,3.413,59,2.111,566,3.485,690,2.636,693,4.363,694,4.363,695,4.363,696,4.363,697,4.363,698,4.363,699,4.363,708,2.828,709,3.251,710,3.251,711,3.251,712,3.251,713,3.251,714,3.251,715,3.251,716,3.251,717,3.251,718,3.251,719,3.251,720,3.251]],["title/classes/CreateUserDto.html",[0,0.233,721,2.492]],["body/classes/CreateUserDto.html",[0,0.252,2,0.896,3,0.114,4,0.098,5,0.082,8,0.537,9,1.778,14,1.021,17,0.014,19,0.899,21,1.76,22,1.671,23,3.077,24,0.163,28,0.864,29,0.114,31,0.007,32,0.01,33,0.007,39,3.107,40,3.81,42,3.81,44,3.257,609,3.604,721,3.593,722,6.428,723,3.366,724,4.293,725,4.293,726,4.293,727,4.293,728,4.293]],["title/classes/Customer.html",[0,0.233,729,3.119]],["body/classes/Customer.html",[0,0.357,2,1.27,3,0.161,4,0.139,5,0.117,17,0.013,29,0.161,31,0.01,32,0.012,33,0.01,729,5.6,730,5.295]],["title/controllers/CustomersController.html",[91,1.379,731,2.864]],["body/controllers/CustomersController.html",[0,0.221,3,0.1,4,0.086,5,0.072,8,0.473,14,0.747,16,1.572,17,0.014,18,1.572,19,0.658,20,1.097,22,1.223,24,0.26,28,0.76,29,0.1,31,0.006,32,0.009,33,0.006,59,1.979,91,1.309,93,1.261,95,1.818,96,1.63,103,1.63,111,3.202,112,2.109,113,2.109,114,2.109,115,2.109,116,0.68,117,2.001,121,1.413,123,1.47,126,2.001,127,2.001,129,1.63,169,1.755,180,2.528,310,2.908,335,2.367,336,2.785,401,2.721,402,4.706,403,3.785,405,4.706,406,2.721,414,2.963,415,2.721,416,2.528,679,4.455,731,3.785,732,3.286,733,3.778,734,3.286,735,3.778,736,3.778,737,3.787,738,3.286,739,4.122,740,2.528,741,3.778,742,3.778,743,3.778,744,3.778]],["title/modules/CustomersModule.html",[183,1.189,513,2.661]],["body/modules/CustomersModule.html",[0,0.217,3,0.098,4,0.084,5,0.071,17,0.014,24,0.285,29,0.098,31,0.006,32,0.009,33,0.006,67,1.295,93,1.731,116,0.667,166,2.068,183,1.551,184,3.745,185,1.564,186,2.189,191,3.564,192,2.385,193,1.704,194,1.704,196,2.615,197,2.615,204,2.669,234,3.745,273,2.186,288,3.945,360,2.186,371,3.945,424,3.06,425,2.479,426,2.906,427,2.479,428,2.669,429,2.669,513,5.334,731,4.308,737,4.428,738,3.224,745,3.224,746,3.224,747,3.706,748,3.706,749,3.706]],["title/injectables/CustomersService.html",[206,0.83,737,2.492]],["body/injectables/CustomersService.html",[0,0.171,3,0.077,4,0.066,5,0.056,8,0.365,11,1.767,14,0.742,16,1.562,17,0.014,18,1.562,19,0.654,20,1.09,24,0.269,29,0.077,31,0.005,32,0.007,33,0.005,36,2.732,59,1.811,67,1.13,96,1.352,103,1.352,116,0.525,118,2.923,120,2.31,121,1.091,122,1.828,123,1.135,129,1.352,135,2.434,136,1.952,138,1.828,148,1.403,168,2.101,169,1.456,174,2.923,176,1.828,179,2.665,200,1.952,206,0.91,207,1.091,208,1.828,210,2.533,213,3.402,218,1.767,225,1.952,228,2.853,310,2.098,336,3.07,365,3.07,366,1.952,378,1.952,431,2.101,432,3.761,433,4.096,435,3.141,437,3.42,439,2.288,440,2.101,441,2.101,443,2.288,444,2.573,445,2.288,446,2.288,448,2.288,450,2.288,452,2.288,454,4.096,455,2.288,456,2.288,457,2.288,459,2.288,460,2.288,461,3.42,462,3.141,463,2.538,679,3.886,734,3.794,737,2.732,739,3.42,740,1.952,750,2.538,751,2.917,752,2.917,753,2.917,754,4.361,755,2.917,756,2.917,757,2.917,758,2.917,759,2.917]],["title/injectables/JwtAuthGuard.html",[206,0.83,553,2.864]],["body/injectables/JwtAuthGuard.html",[0,0.332,3,0.15,4,0.129,5,0.109,17,0.014,24,0.259,29,0.15,31,0.01,32,0.012,33,0.01,116,1.021,206,1.429,207,2.122,466,4.085,467,4.085,468,3.005,469,2.394,553,4.931,760,4.934,761,5.673]],["title/injectables/JwtStrategy.html",[206,0.83,579,2.661]],["body/injectables/JwtStrategy.html",[0,0.265,3,0.12,4,0.103,5,0.087,8,0.567,11,2.685,14,0.844,16,1.354,17,0.014,18,1.354,19,0.567,20,0.945,24,0.251,29,0.12,31,0.008,32,0.01,33,0.008,44,2.283,96,1.842,103,1.404,116,0.815,129,1.404,206,1.24,207,1.694,210,2.58,218,1.833,256,3.938,468,2.398,469,1.91,475,4.277,488,3.26,490,3.55,494,3.55,579,3.974,592,3.938,627,3.938,762,3.938,763,4.527,764,5.94,765,4.527,766,4.527,767,3.938,768,3.938,769,3.938,770,4.527,771,4.527,772,4.527,773,4.527,774,4.527,775,4.527,776,4.527]],["title/injectables/LocalAuthGuard.html",[206,0.83,550,2.864]],["body/injectables/LocalAuthGuard.html",[0,0.332,3,0.15,4,0.129,5,0.109,17,0.014,24,0.259,29,0.15,31,0.01,32,0.012,33,0.01,116,1.021,206,1.429,207,2.122,466,4.085,467,4.085,468,3.005,469,2.394,550,4.931,777,4.934,778,5.673]],["title/injectables/LocalStrategy.html",[206,0.83,580,2.661]],["body/injectables/LocalStrategy.html",[0,0.238,3,0.107,4,0.092,5,0.078,8,0.507,11,1.642,14,0.784,16,1.65,17,0.014,18,1.65,19,0.691,20,1.152,21,1.631,24,0.255,29,0.107,31,0.007,32,0.009,33,0.007,39,1.95,44,2.044,96,1.711,103,1.257,116,0.73,126,2.148,129,1.257,206,1.152,207,1.517,210,2.441,221,3.701,228,1.864,444,2.392,468,2.148,469,1.711,475,3.974,476,3.527,477,4.056,488,2.919,490,3.179,491,4.8,492,2.919,494,3.179,503,2.919,507,3.527,580,3.691,607,4.327,609,3.931,767,3.527,769,3.527,779,3.527,780,4.054,781,5.518,782,4.054,783,3.527,784,4.054,785,4.054,786,4.054]],["title/classes/Package.html",[0,0.233,787,2.492]],["body/classes/Package.html",[0,0.183,2,0.651,3,0.083,4,0.071,5,0.06,8,0.391,9,1.422,14,1.07,17,0.014,19,0.942,20,0.957,21,1.497,22,1.751,24,0.118,29,0.083,31,0.005,32,0.008,33,0.005,37,2.74,38,2.74,41,1.748,43,2.74,49,3.364,50,3.635,52,3.635,54,3.988,57,3.595,59,2.094,60,3.635,63,3.635,70,3.067,71,5.168,72,2.247,73,1.501,74,3.595,566,3.404,693,4.261,694,4.261,695,4.261,696,4.261,697,4.261,698,4.261,699,4.261,787,2.872,788,2.714,789,3.12,790,3.12,791,3.12,792,3.12,793,3.12,794,3.12,795,4.584,796,3.12,797,3.12,798,3.12,799,3.12,800,3.12,801,3.12]],["title/controllers/PackagesController.html",[91,1.379,802,2.864]],["body/controllers/PackagesController.html",[0,0.173,3,0.078,4,0.067,5,0.056,8,0.369,14,0.886,16,1.863,17,0.014,18,1.863,19,0.78,20,1.3,21,1.595,22,1.449,24,0.236,28,0.593,29,0.078,31,0.005,32,0.007,33,0.005,41,2.102,59,1.818,91,1.021,93,0.984,95,1.418,96,1.363,97,2.328,98,2.452,99,2.753,100,1.561,101,3.164,103,1.932,104,1.645,105,3.164,107,1.846,109,3.446,111,2.784,112,2.452,113,1.645,114,1.645,115,1.645,116,0.53,117,1.561,121,1.102,123,1.147,126,1.561,127,1.561,128,2.122,129,1.932,131,2.563,133,2.122,169,1.467,180,1.971,210,2.045,218,1.194,310,2.114,335,1.846,336,2.328,401,2.122,402,4.194,403,3.164,405,4.194,415,2.122,416,1.971,690,3.646,802,3.164,803,2.563,804,2.947,805,2.563,806,2.947,807,2.947,808,2.947,809,2.947,810,4.654,811,2.947,812,3.292,813,2.563,814,3.446,815,2.947,816,2.947,817,2.947,818,2.947,819,2.947,820,2.947,821,2.947,822,2.947]],["title/modules/PackagesModule.html",[183,1.189,514,2.661]],["body/modules/PackagesModule.html",[0,0.266,3,0.12,4,0.104,5,0.087,17,0.014,24,0.277,29,0.12,31,0.008,32,0.01,33,0.008,93,1.988,116,0.818,183,1.781,185,1.918,186,2.513,192,2.738,193,2.09,194,2.09,196,3.003,197,2.292,198,3.513,202,3.73,203,2.09,514,5.119,787,2.847,802,4.783,812,5.032,813,3.953,823,3.953,824,3.953,825,3.953,826,4.544,827,4.544,828,3.953,829,4.544]],["title/injectables/PackagesService.html",[206,0.83,812,2.492]],["body/injectables/PackagesService.html",[0,0.17,3,0.077,4,0.066,5,0.056,8,0.364,11,1.763,14,0.924,16,1.945,17,0.014,18,1.945,19,0.814,20,1.357,24,0.246,29,0.077,31,0.005,32,0.007,33,0.005,41,1.862,59,2.124,73,1.4,96,1.35,97,2.306,98,2.429,99,2.727,100,2.306,103,1.922,104,2.429,107,2.727,116,0.524,121,1.089,123,1.132,129,1.922,169,1.453,179,1.338,203,1.338,206,0.908,207,1.089,210,2.971,215,3.626,218,2.51,224,1.947,228,2.85,310,2.094,317,3.787,318,5.035,320,3.787,333,2.531,334,2.531,335,1.823,336,1.542,690,3.459,787,1.823,805,3.787,810,4.637,812,2.727,814,3.414,828,2.531,830,2.531,831,2.91,832,2.91,833,4.353,834,2.91,835,2.91,836,2.91,837,2.91,838,2.91,839,2.91,840,2.91,841,2.91,842,2.91,843,2.91,844,2.91]],["title/classes/UpdateAccountDto.html",[0,0.233,108,2.661]],["body/classes/UpdateAccountDto.html",[0,0.331,2,1.178,3,0.149,4,0.129,5,0.108,17,0.014,24,0.259,28,1.136,29,0.149,31,0.009,32,0.011,33,0.009,108,4.567,120,2.991,122,3.536,169,1.884,469,2.382,660,4.427,845,4.91,846,3.151,847,5.645]],["title/classes/UpdateAccountsCredentialDto.html",[0,0.233,178,2.661]],["body/classes/UpdateAccountsCredentialDto.html",[0,0.326,2,1.161,3,0.147,4,0.127,5,0.106,17,0.014,24,0.256,28,1.12,29,0.147,31,0.009,32,0.011,33,0.009,67,1.204,88,2.259,156,4.007,169,1.857,171,3.486,177,4.363,178,4.528,469,2.348,846,3.105,848,4.84,849,5.564]],["title/classes/UpdateAccountsProfileDto.html",[0,0.233,278,2.661]],["body/classes/UpdateAccountsProfileDto.html",[0,0.326,2,1.161,3,0.147,4,0.127,5,0.106,17,0.014,24,0.256,28,1.12,29,0.147,31,0.009,32,0.011,33,0.009,67,1.204,88,2.259,169,1.857,263,4.007,278,4.528,282,3.486,283,4.363,469,2.348,846,3.105,850,4.84,851,5.564]],["title/classes/UpdateAccountsTypeDto.html",[0,0.233,368,2.661]],["body/classes/UpdateAccountsTypeDto.html",[0,0.328,2,1.167,3,0.148,4,0.127,5,0.107,17,0.013,24,0.257,28,1.125,29,0.148,31,0.009,32,0.011,33,0.009,67,1.21,88,2.266,90,3.74,169,1.866,352,4.026,367,3.502,368,4.541,469,2.36,846,3.12,852,4.863,853,5.591]],["title/classes/UpdateAgentDto.html",[0,0.233,410,2.661]],["body/classes/UpdateAgentDto.html",[0,0.332,2,1.184,3,0.15,4,0.129,5,0.109,17,0.014,24,0.259,28,1.141,29,0.15,31,0.01,32,0.012,33,0.01,169,1.894,399,3.554,409,4.448,410,4.581,469,2.394,671,4.448,846,3.166,854,4.934,855,5.673]],["title/classes/UpdateCustomerDto.html",[0,0.233,740,2.661]],["body/classes/UpdateCustomerDto.html",[0,0.332,2,1.184,3,0.15,4,0.129,5,0.109,17,0.014,24,0.259,28,1.141,29,0.15,31,0.01,32,0.012,33,0.01,169,1.894,469,2.394,679,3.554,681,4.448,739,4.448,740,4.581,846,3.166,856,4.934,857,5.673]],["title/classes/UpdatePackageDto.html",[0,0.233,810,2.661]],["body/classes/UpdatePackageDto.html",[0,0.332,2,1.184,3,0.15,4,0.129,5,0.109,17,0.014,24,0.259,28,1.141,29,0.15,31,0.01,32,0.012,33,0.01,169,1.894,469,2.394,690,3.166,692,4.448,810,4.581,814,4.448,846,3.166,858,4.934,859,5.673]],["title/classes/UpdateUserDto.html",[0,0.233,860,2.661]],["body/classes/UpdateUserDto.html",[0,0.332,2,1.184,3,0.15,4,0.129,5,0.109,17,0.014,24,0.259,28,1.141,29,0.15,31,0.01,32,0.012,33,0.01,169,1.894,469,2.394,721,3.554,723,4.448,846,3.166,860,4.581,861,4.934,862,4.448,863,5.673]],["title/classes/User.html",[0,0.233,221,2.347]],["body/classes/User.html",[0,0.357,2,1.27,3,0.161,4,0.139,5,0.117,17,0.013,29,0.161,31,0.01,32,0.012,33,0.01,221,4.213,864,5.295]],["title/classes/UserDto.html",[0,0.233,865,3.119]],["body/classes/UserDto.html",[0,0.245,2,0.873,3,0.111,4,0.095,5,0.08,8,0.524,9,1.748,14,1.043,17,0.014,19,0.918,21,1.751,22,1.706,23,3.106,24,0.159,28,0.842,29,0.111,31,0.007,32,0.009,33,0.007,39,3.067,40,3.762,41,2.051,42,3.762,44,3.215,59,1.569,609,3.558,865,4.421,866,3.641,867,4.185,868,4.185,869,4.185,870,4.185,871,4.185,872,4.185]],["title/controllers/UsersController.html",[91,1.379,873,2.864]],["body/controllers/UsersController.html",[0,0.218,3,0.099,4,0.085,5,0.071,8,0.467,14,0.741,16,1.558,17,0.014,18,1.558,19,0.652,20,1.087,22,1.212,24,0.259,28,0.75,29,0.099,31,0.006,32,0.009,33,0.006,59,1.971,91,1.293,93,1.245,95,1.794,96,1.615,103,1.615,111,3.18,112,2.082,113,2.082,114,2.082,115,2.082,116,0.671,117,1.976,121,1.395,123,1.451,126,1.976,127,1.976,129,1.615,169,1.739,180,2.495,210,2.336,218,1.511,310,2.888,335,2.336,336,2.76,401,2.686,402,4.68,403,3.751,405,4.68,406,2.686,414,2.925,415,2.686,416,2.495,462,2.686,721,4.437,860,2.495,862,4.085,873,3.751,874,3.244,875,3.244,876,3.73,877,3.73,878,3.761,879,3.244,880,3.73,881,3.73,882,3.73,883,3.73]],["title/modules/UsersModule.html",[183,1.189,515,2.661]],["body/modules/UsersModule.html",[0,0.217,3,0.098,4,0.084,5,0.071,17,0.014,24,0.285,29,0.098,31,0.006,32,0.009,33,0.006,67,1.295,93,1.731,116,0.667,166,2.068,183,1.551,184,3.745,185,1.564,186,2.189,191,3.564,192,2.385,193,1.704,194,1.704,196,2.615,197,2.615,204,2.669,234,3.745,273,2.186,288,3.945,360,2.186,371,3.945,424,3.06,425,2.479,426,2.906,427,2.479,428,2.669,429,2.669,515,5.334,873,4.308,878,4.428,879,3.224,884,3.224,885,3.706,886,3.224,887,3.706,888,3.706]],["title/injectables/UsersService.html",[206,0.83,878,2.492]],["body/injectables/UsersService.html",[0,0.169,3,0.076,4,0.066,5,0.055,8,0.361,11,1.75,14,0.737,16,1.55,17,0.014,18,1.55,19,0.649,20,1.082,24,0.273,29,0.076,31,0.005,32,0.007,33,0.005,34,1.268,36,2.707,59,1.803,67,1.122,96,1.34,103,1.34,116,0.519,118,2.904,120,2.289,121,1.078,122,1.805,123,1.121,129,1.34,135,2.411,136,1.928,138,1.805,148,1.386,151,2.506,168,2.075,169,1.442,174,2.904,176,1.805,179,2.649,200,1.928,206,0.902,207,1.078,208,1.805,210,2.521,213,3.388,218,1.75,225,1.928,228,2.838,310,2.079,336,2.746,365,3.051,366,1.928,378,1.928,431,2.075,432,3.733,433,4.065,435,3.112,437,3.388,439,2.259,441,2.075,443,2.259,444,2.549,445,2.259,446,2.259,448,2.259,450,2.259,452,2.259,454,4.065,455,2.259,456,2.259,457,2.259,459,2.259,460,2.259,461,3.388,462,3.112,721,3.866,860,1.928,862,3.388,875,3.759,878,2.707,889,2.506,890,2.881,891,2.881,892,2.881,893,2.881,894,4.321,895,2.881,896,2.881,897,2.881,898,2.881,899,2.881,900,2.881,901,2.881]],["title/coverage.html",[902,4.271]],["body/coverage.html",[0,0.455,1,1.267,5,0.036,6,1.647,7,2.435,17,0.014,19,0.237,31,0.003,32,0.005,33,0.003,34,0.834,35,1.647,45,1.117,67,1.56,68,1.363,76,1.117,77,1.647,78,1.267,88,1.809,89,1.363,91,2.144,92,1.363,94,1.647,108,1.267,118,0.955,120,1.003,135,1.057,136,1.267,137,1.647,154,1.485,155,1.647,156,2.844,165,1.363,166,1.057,167,1.647,171,1.186,174,0.955,178,1.267,206,1.474,208,1.186,209,1.647,213,0.955,221,1.117,242,1.267,243,1.647,244,1.647,261,1.485,262,1.647,263,2.844,272,1.363,273,1.117,274,1.647,278,1.267,280,1.186,282,1.186,296,1.647,297,1.647,309,1.647,341,1.647,352,2.844,359,1.363,360,1.117,361,1.647,365,1.003,367,1.186,368,1.267,378,1.267,379,1.647,393,1.485,394,1.647,395,1.363,396,1.647,399,1.186,407,1.186,410,1.267,424,1.117,430,1.647,440,1.363,444,1.117,464,1.363,465,1.647,466,2.844,471,1.267,472,1.647,473,1.647,477,1.057,486,1.647,531,1.363,532,1.647,540,1.363,541,1.485,550,1.363,553,1.363,579,1.267,580,1.267,600,1.647,639,1.647,655,1.647,660,2.435,667,1.647,668,1.647,669,1.647,670,1.647,671,2.435,679,1.186,680,1.647,681,2.435,690,1.733,691,1.647,692,2.435,708,1.647,721,1.186,722,1.647,723,2.435,729,1.485,730,1.647,731,1.363,732,1.647,737,1.186,740,1.267,750,1.647,760,1.647,762,1.647,777,1.647,779,1.647,787,1.186,788,1.647,802,1.363,803,1.647,810,1.267,812,1.186,830,1.647,845,1.647,848,1.647,850,1.647,852,1.647,854,1.647,856,1.647,858,1.647,860,1.267,861,1.647,864,1.647,865,1.485,866,1.647,873,1.363,874,1.647,878,1.186,889,1.647,902,1.485,903,1.893,904,1.893,905,1.893,906,1.647,907,3.949,908,1.647,909,8.159,910,7.209,911,1.647,912,1.647,913,1.647,914,6.524,915,5.419,916,5.976,917,5.044,918,4.569,919,3.949,920,3.106,921,1.893,922,1.647,923,1.647,924,1.893,925,3.106,926,1.893,927,1.893]],["title/dependencies.html",[186,2.021,787,2.075]],["body/dependencies.html",[0,0.264,17,0.014,27,3.247,28,0.907,31,0.008,32,0.01,33,0.008,73,2.169,116,0.811,186,1.903,203,2.074,468,2.389,488,5.061,489,3.922,586,3.536,650,3.922,768,3.922,783,3.922,928,5.925,929,4.509,930,5.925,931,4.509,932,6.617,933,4.509,934,4.509,935,4.509,936,5.925,937,4.509,938,5.925,939,4.509,940,4.509,941,4.509,942,4.509,943,4.509,944,4.509,945,4.509,946,3.922,947,4.509,948,4.509,949,4.509,950,4.509,951,4.509,952,4.509,953,4.509,954,4.509,955,4.509,956,4.509,957,4.509,958,4.509,959,4.509]],["title/miscellaneous/functions.html",[960,2.386,961,4.166]],["body/miscellaneous/functions.html",[8,0.77,17,0.012,31,0.01,32,0.012,33,0.01,922,5.351,923,6.621,960,4.43,961,5.351,962,6.152]],["title/index.html",[8,0.415,963,3.313,964,3.313]],["body/index.html",[4,0.086,5,0.072,17,0.014,31,0.006,32,0.009,33,0.006,95,1.818,169,1.261,215,2.367,498,2.963,562,3.286,566,2.367,902,2.963,965,3.778,966,3.778,967,5.257,968,3.778,969,3.778,970,3.778,971,3.778,972,3.778,973,3.778,974,6.045,975,3.778,976,3.778,977,7.296,978,3.778,979,5.257,980,4.572,981,7.112,982,3.778,983,3.778,984,6.045,985,3.778,986,3.778,987,3.778,988,6.045,989,6.045,990,5.257,991,3.778,992,3.778,993,3.778,994,6.045,995,3.778,996,5.257,997,3.778,998,3.778,999,3.778,1000,3.778,1001,3.778,1002,3.778,1003,3.778,1004,3.778,1005,3.778,1006,3.778,1007,3.286,1008,3.286,1009,3.778,1010,3.778,1011,3.778,1012,5.257,1013,5.257,1014,3.778,1015,3.778,1016,3.778,1017,3.778,1018,3.778,1019,3.286,1020,3.778,1021,3.778,1022,3.778,1023,3.778,1024,3.778,1025,3.778,1026,3.778,1027,3.778,1028,3.778,1029,3.778,1030,3.778,1031,3.778,1032,3.778,1033,3.778,1034,3.778,1035,3.778,1036,3.778,1037,3.778]],["title/modules.html",[185,2.299]],["body/modules.html",[17,0.011,31,0.008,32,0.011,33,0.008,184,2.6,185,2.071,191,2.475,234,2.6,288,2.739,371,2.739,418,3.283,509,3.534,512,3.283,513,3.283,514,3.283,515,3.283,1019,7.027,1038,8.078,1039,8.078,1040,8.078]],["title/overview.html",[1041,4.738]],["body/overview.html",[2,0.509,17,0.014,31,0.004,32,0.006,33,0.004,93,0.815,118,3.196,174,3.196,184,3.776,185,1.03,186,1.606,187,2.123,188,2.123,189,2.123,190,2.123,191,3.538,192,1.75,193,1.122,194,1.122,207,0.913,213,3.196,234,3.649,235,2.123,236,2.123,237,2.123,280,3.97,288,3.759,289,2.123,290,2.123,291,2.123,365,3.357,371,3.759,372,2.123,373,2.123,374,2.123,407,2.93,418,4.941,419,2.123,420,2.123,471,3.129,477,2.611,509,5.575,510,2.123,511,2.123,512,5.027,513,4.941,514,4.06,515,4.941,576,2.123,578,2.123,579,3.129,580,3.129,634,2.123,635,2.123,636,2.123,737,2.93,745,2.123,746,2.123,812,3.97,823,2.123,824,2.123,825,2.123,878,2.93,884,2.123,886,2.123,1041,2.123,1042,2.441,1043,2.441,1044,2.441,1045,2.441]],["title/miscellaneous/variables.html",[960,2.386,1046,4.166]],["body/miscellaneous/variables.html",[8,0.622,17,0.014,19,0.79,31,0.008,32,0.011,33,0.008,148,2.391,153,4.637,252,4.544,424,3.723,566,3.114,647,6.03,906,4.324,908,5.489,911,4.324,912,4.324,913,5.489,946,4.324,960,3.58,980,4.324,1007,4.324,1008,4.324,1046,4.324,1047,4.971,1048,4.971,1049,4.971,1050,4.971,1051,4.971,1052,4.971,1053,4.971,1054,4.971,1055,4.971,1056,4.971,1057,4.971,1058,4.971,1059,4.971]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":416,"title":{"classes/CreatePackageDto-1.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":946,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["1.2.2",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":648,"title":{},"body":{"injectables/CommonService.html":{}}}],["11",{"_index":1042,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1044,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":595,"title":{},"body":{"modules/AuthModule.html":{}}}],["200",{"_index":537,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":795,"title":{},"body":{"classes/Package.html":{}}}],["3.0.2",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1045,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":57,"title":{},"body":{"classes/Account.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["45})@isemail",{"_index":55,"title":{},"body":{"classes/Account.html":{}}}],["5.0.1",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["8.6.0",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1043,"title":{},"body":{"overview.html":{}}}],["access",{"_index":541,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["accesstoken})@apiunauthorizedresponse()@useguards(localauthguard)@post",{"_index":538,"title":{},"body":{"controllers/AuthController.html":{}}}],["account",{"_index":34,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["account.dto",{"_index":122,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"classes/UpdateAccountDto.html":{},"injectables/UsersService.html":{}}}],["account.dto.ts",{"_index":660,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/UpdateAccountDto.html":{},"coverage.html":{}}}],["account.dto.ts:10",{"_index":666,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:12",{"_index":663,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:14",{"_index":662,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:6",{"_index":664,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:8",{"_index":665,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.id",{"_index":152,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["accountdto",{"_index":76,"title":{"classes/AccountDto.html":{}},"body":{"classes/AccountDto.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfileDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"coverage.html":{}}}],["accountid",{"_index":306,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["accounts",{"_index":88,"title":{},"body":{"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["accounts.controller",{"_index":240,"title":{},"body":{"modules/AccountsModule.html":{}}}],["accounts/accounts.module",{"_index":519,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["accounts/dto/account.dto",{"_index":271,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["accounts/dto/create",{"_index":893,"title":{},"body":{"injectables/UsersService.html":{}}}],["accounts/entities/account.entity",{"_index":151,"title":{},"body":{"classes/AccountsCredential.html":{},"injectables/UsersService.html":{}}}],["accountscontroller",{"_index":92,"title":{"controllers/AccountsController.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"coverage.html":{}}}],["accountscredential",{"_index":135,"title":{"classes/AccountsCredential.html":{}},"body":{"classes/AccountsCredential.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["accountscredentialdto",{"_index":154,"title":{"classes/AccountsCredentialDto.html":{}},"body":{"classes/AccountsCredentialDto.html":{},"coverage.html":{}}}],["accountscredentialscontroller",{"_index":165,"title":{"controllers/AccountsCredentialsController.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"coverage.html":{}}}],["accountscredentialsmodule",{"_index":184,"title":{"modules/AccountsCredentialsModule.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountscredentialsservice",{"_index":174,"title":{"injectables/AccountsCredentialsService.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accountservice",{"_index":435,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["accountsmodule",{"_index":234,"title":{"modules/AccountsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsprofile",{"_index":242,"title":{"classes/AccountsProfile.html":{}},"body":{"classes/AccountsProfile.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"coverage.html":{}}}],["accountsprofiledto",{"_index":261,"title":{"classes/AccountsProfileDto.html":{}},"body":{"classes/AccountsProfileDto.html":{},"coverage.html":{}}}],["accountsprofilescontroller",{"_index":272,"title":{"controllers/AccountsProfilesController.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"coverage.html":{}}}],["accountsprofilesmodule",{"_index":288,"title":{"modules/AccountsProfilesModule.html":{}},"body":{"modules/AccountsProfilesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsprofilesservice",{"_index":280,"title":{"injectables/AccountsProfilesService.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["accountsservice",{"_index":118,"title":{"injectables/AccountsService.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accountstype",{"_index":45,"title":{"classes/AccountsType.html":{}},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"coverage.html":{}}}],["accountstypedto",{"_index":78,"title":{"classes/AccountsTypeDto.html":{}},"body":{"classes/AccountDto.html":{},"classes/AccountsTypeDto.html":{},"classes/CreateAccountDto.html":{},"coverage.html":{}}}],["accountstypescontroller",{"_index":359,"title":{"controllers/AccountsTypesController.html":{}},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"coverage.html":{}}}],["accountstypesmodule",{"_index":371,"title":{"modules/AccountsTypesModule.html":{}},"body":{"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountstypesservice",{"_index":365,"title":{"injectables/AccountsTypesService.html":{}},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accounttype",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["accounttype.id",{"_index":75,"title":{},"body":{"classes/Account.html":{}}}],["accounttypeid",{"_index":661,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["accounttypeservice",{"_index":433,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["agent",{"_index":393,"title":{"classes/Agent.html":{}},"body":{"classes/Agent.html":{},"coverage.html":{}}}],["agent.dto",{"_index":409,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/UpdateAgentDto.html":{}}}],["agent.dto.ts",{"_index":671,"title":{},"body":{"classes/CreateAgentDto.html":{},"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["agent.dto.ts:11",{"_index":675,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:14",{"_index":678,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:17",{"_index":677,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:20",{"_index":676,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:5",{"_index":673,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:8",{"_index":674,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agents",{"_index":397,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agents.controller",{"_index":423,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents/agents.module",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["agentscontroller",{"_index":395,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"coverage.html":{}}}],["agentsmodule",{"_index":418,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsservice",{"_index":407,"title":{"injectables/AgentsService.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"coverage.html":{},"overview.html":{}}}],["amazing",{"_index":1020,"title":{},"body":{"index.html":{}}}],["api",{"_index":498,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"index.html":{}}}],["api.tracking.services",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{}}}],["api_key=eab0a38835eba59230ef98d8879dc2c198df96af",{"_index":1004,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":544,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody({type",{"_index":535,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiheader",{"_index":547,"title":{},"body":{"controllers/AuthController.html":{}}}],["apikey",{"_index":485,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["apikeyauthguard",{"_index":464,"title":{"injectables/ApiKeyAuthGuard.html":{}},"body":{"injectables/ApiKeyAuthGuard.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["apikeystrategy",{"_index":471,"title":{"injectables/ApiKeyStrategy.html":{}},"body":{"injectables/ApiKeyStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["apiproperty",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountDto.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsTypeDto.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["apiresponse",{"_index":545,"title":{},"body":{"controllers/AuthController.html":{}}}],["apisecurity",{"_index":548,"title":{},"body":{"controllers/AuthController.html":{}}}],["apisecurity('api_key",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":117,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apitags('accounts",{"_index":124,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{}}}],["apitags('agents",{"_index":411,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apitags('auth",{"_index":556,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('customers",{"_index":741,"title":{},"body":{"controllers/CustomersController.html":{}}}],["apitags('packages",{"_index":815,"title":{},"body":{"controllers/PackagesController.html":{}}}],["apitags('users",{"_index":880,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":546,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":979,"title":{},"body":{"index.html":{}}}],["app_iss",{"_index":1006,"title":{},"body":{"index.html":{}}}],["app_url=https://app.parking.com",{"_index":1005,"title":{},"body":{"index.html":{}}}],["applicationconfigs",{"_index":908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":973,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":509,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":210,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["audience",{"_index":596,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller",{"_index":582,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":552,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":466,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":531,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":533,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(req",{"_index":534,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":467,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('headerapikey",{"_index":470,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{}}}],["authguard('jwt",{"_index":761,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":778,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":512,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1030,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":477,"title":{"injectables/AuthService.html":{}},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":530,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":228,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1021,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":650,"title":{},"body":{"injectables/CommonService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":651,"title":{},"body":{"injectables/CommonService.html":{}}}],["bcrypt.gensalt(this.saltrounds",{"_index":653,"title":{},"body":{"injectables/CommonService.html":{}}}],["bcrypt.hash(password",{"_index":654,"title":{},"body":{"injectables/CommonService.html":{}}}],["body",{"_index":112,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":146,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["bootstrap",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":564,"title":{},"body":{"controllers/AuthController.html":{}}}],["browse",{"_index":1040,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1038,"title":{},"body":{"modules.html":{}}}],["build",{"_index":993,"title":{},"body":{"index.html":{}}}],["building",{"_index":968,"title":{},"body":{"index.html":{}}}],["catalog",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":504,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/Agent.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"classes/Package.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/Agent.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"classes/Package.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule",{"_index":187,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule_exports",{"_index":189,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule_imports",{"_index":188,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule_providers",{"_index":190,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule",{"_index":235,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_exports",{"_index":237,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_providers",{"_index":236,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsprofilesmodule",{"_index":289,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"overview.html":{}}}],["cluster_accountsprofilesmodule_exports",{"_index":290,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"overview.html":{}}}],["cluster_accountsprofilesmodule_providers",{"_index":291,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"overview.html":{}}}],["cluster_accountstypesmodule",{"_index":372,"title":{},"body":{"modules/AccountsTypesModule.html":{},"overview.html":{}}}],["cluster_accountstypesmodule_exports",{"_index":374,"title":{},"body":{"modules/AccountsTypesModule.html":{},"overview.html":{}}}],["cluster_accountstypesmodule_providers",{"_index":373,"title":{},"body":{"modules/AccountsTypesModule.html":{},"overview.html":{}}}],["cluster_agentsmodule",{"_index":419,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_imports",{"_index":421,"title":{},"body":{"modules/AgentsModule.html":{}}}],["cluster_agentsmodule_providers",{"_index":420,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":576,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":577,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":578,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":634,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":636,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":635,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_customersmodule",{"_index":745,"title":{},"body":{"modules/CustomersModule.html":{},"overview.html":{}}}],["cluster_customersmodule_imports",{"_index":747,"title":{},"body":{"modules/CustomersModule.html":{}}}],["cluster_customersmodule_providers",{"_index":746,"title":{},"body":{"modules/CustomersModule.html":{},"overview.html":{}}}],["cluster_packagesmodule",{"_index":823,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_packagesmodule_exports",{"_index":825,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_packagesmodule_providers",{"_index":824,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":884,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":885,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":886,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["column({default",{"_index":147,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{}}}],["column({length",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/Package.html":{}}}],["column({type",{"_index":253,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["common/common.module",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["commonmodule",{"_index":191,"title":{"modules/CommonModule.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":213,"title":{"injectables/CommonService.html":{}},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["companyname",{"_index":682,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["compare",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{}}}],["compose",{"_index":989,"title":{},"body":{"index.html":{}}}],["config/.../application.properties.settings.ts",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../enviroment.properties.setting.ts",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../openapi.properties.setting.ts",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/application.properties.settings.ts",{"_index":906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/enviroment.properties.setting",{"_index":425,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["config/enviroment.properties.setting.ts",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/openapi.properties.setting.ts",{"_index":912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configdefaultmodule",{"_index":424,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(compare",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(secret",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(user",{"_index":330,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/AuthService.html":{}}}],["const",{"_index":503,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}}}],["constructor(accountservice",{"_index":431,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":476,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(commonservice",{"_index":212,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["constructor(packagerepository",{"_index":831,"title":{},"body":{"injectables/PackagesService.html":{}}}],["constructor(partial",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{}}}],["constructor(private",{"_index":126,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["constructor(profilerepository",{"_index":298,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["constructor(typesrepository",{"_index":381,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["constructor(usersrepository",{"_index":312,"title":{},"body":{"injectables/AccountsService.html":{}}}],["controller",{"_index":91,"title":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('accounts",{"_index":125,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{}}}],["controller('agents",{"_index":412,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('authenticate",{"_index":557,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('customers",{"_index":742,"title":{},"body":{"controllers/CustomersController.html":{}}}],["controller('packages",{"_index":816,"title":{},"body":{"controllers/PackagesController.html":{}}}],["controller('users",{"_index":881,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":93,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":902,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":169,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AccountsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(@body",{"_index":180,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["create(createaccountdto",{"_index":315,"title":{},"body":{"injectables/AccountsService.html":{}}}],["create(createaccountscredentialdto",{"_index":170,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{}}}],["create(createagentdto",{"_index":398,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{}}}],["create(createcustomerdto",{"_index":734,"title":{},"body":{"controllers/CustomersController.html":{},"injectables/CustomersService.html":{}}}],["create(createpackagedto",{"_index":805,"title":{},"body":{"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["create(createuserdto",{"_index":875,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createaccesstoken",{"_index":540,"title":{"classes/CreateAccessToken.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["createaccesstoken})@apiresponse({status",{"_index":536,"title":{},"body":{"controllers/AuthController.html":{}}}],["createaccountdto",{"_index":120,"title":{"classes/CreateAccountDto.html":{}},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"classes/CreateAccountDto.html":{},"injectables/CustomersService.html":{},"classes/UpdateAccountDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createaccountdto.accounttypeid",{"_index":329,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountscredentialdto",{"_index":171,"title":{"classes/CreateAccountsCredentialDto.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["createaccountscredentialdto.credential",{"_index":227,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["createaccountsprofiledto",{"_index":282,"title":{"classes/CreateAccountsProfileDto.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["createaccountstypedto",{"_index":367,"title":{"classes/CreateAccountsTypeDto.html":{}},"body":{"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["createagentdto",{"_index":399,"title":{"classes/CreateAgentDto.html":{}},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/CreateAgentDto.html":{},"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["createagentdto.email",{"_index":453,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.firstname",{"_index":447,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.lastname",{"_index":449,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.password",{"_index":458,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.username",{"_index":451,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createcustomerdto",{"_index":679,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["createcustomerdto.email",{"_index":758,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.firstname",{"_index":755,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.lastname",{"_index":756,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.password",{"_index":759,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.username",{"_index":757,"title":{},"body":{"injectables/CustomersService.html":{}}}],["created",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["createdatecolumn",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["createpackagedto",{"_index":690,"title":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{}},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":721,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":898,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.firstname",{"_index":895,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.lastname",{"_index":896,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":899,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.username",{"_index":897,"title":{},"body":{"injectables/UsersService.html":{}}}],["credential",{"_index":138,"title":{},"body":{"classes/AccountsCredential.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"classes/CreateAccountsCredentialDto.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.account",{"_index":456,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.credential",{"_index":457,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.dto",{"_index":177,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/UpdateAccountsCredentialDto.html":{}}}],["credential.dto.ts",{"_index":156,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["credential.dto.ts:11",{"_index":161,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["credential.dto.ts:13",{"_index":158,"title":{},"body":{"classes/AccountsCredentialDto.html":{}}}],["credential.dto.ts:15",{"_index":162,"title":{},"body":{"classes/AccountsCredentialDto.html":{}}}],["credential.dto.ts:17",{"_index":159,"title":{},"body":{"classes/AccountsCredentialDto.html":{}}}],["credential.dto.ts:7",{"_index":160,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["credential.dto.ts:9",{"_index":157,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["credential.entity",{"_index":200,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.entity.ts",{"_index":137,"title":{},"body":{"classes/AccountsCredential.html":{},"coverage.html":{}}}],["credential.entity.ts:16",{"_index":145,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:19",{"_index":143,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:23",{"_index":141,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:26",{"_index":149,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:29",{"_index":142,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:32",{"_index":150,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:35",{"_index":144,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.isactive",{"_index":459,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credentialrepository",{"_index":214,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials",{"_index":168,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credentials.controller",{"_index":201,"title":{},"body":{"modules/AccountsCredentialsModule.html":{}}}],["credentials.controller.ts",{"_index":167,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"coverage.html":{}}}],["credentials.controller.ts:15",{"_index":172,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["credentials.controller.ts:20",{"_index":173,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["credentials.module",{"_index":427,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["credentials.module.ts",{"_index":195,"title":{},"body":{"modules/AccountsCredentialsModule.html":{}}}],["credentials.service",{"_index":176,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credentials.service.ts",{"_index":209,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"coverage.html":{}}}],["credentials.service.ts:10",{"_index":216,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:17",{"_index":217,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:28",{"_index":220,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:34",{"_index":222,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:40",{"_index":223,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials/accounts",{"_index":166,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["credentials/dto/accounts",{"_index":155,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"coverage.html":{}}}],["credentials/dto/create",{"_index":667,"title":{},"body":{"classes/CreateAccountsCredentialDto.html":{},"coverage.html":{}}}],["credentials/dto/update",{"_index":848,"title":{},"body":{"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["credentials/entities/accounts",{"_index":136,"title":{},"body":{"classes/AccountsCredential.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentials/services/accounts",{"_index":208,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentialservice",{"_index":432,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["customer",{"_index":729,"title":{"classes/Customer.html":{}},"body":{"classes/Customer.html":{},"coverage.html":{}}}],["customer.dto",{"_index":739,"title":{},"body":{"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts",{"_index":681,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["customer.dto.ts:11",{"_index":686,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:14",{"_index":689,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:17",{"_index":688,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:20",{"_index":683,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:23",{"_index":687,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:5",{"_index":684,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:8",{"_index":685,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customers",{"_index":733,"title":{},"body":{"controllers/CustomersController.html":{}}}],["customers.controller",{"_index":749,"title":{},"body":{"modules/CustomersModule.html":{}}}],["customers/customers.module",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["customerscontroller",{"_index":731,"title":{"controllers/CustomersController.html":{}},"body":{"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"coverage.html":{}}}],["customersmodule",{"_index":513,"title":{"modules/CustomersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules.html":{},"overview.html":{}}}],["customersservice",{"_index":737,"title":{"injectables/CustomersService.html":{}},"body":{"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":502,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["date",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["de",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":153,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":115,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":105,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/PackagesController.html":{}}}],["deletedat",{"_index":38,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["deletedatecolumn",{"_index":52,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["dependencies",{"_index":186,"title":{"dependencies.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":334,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["description",{"_index":566,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":980,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developmentsupport",{"_index":1011,"title":{},"body":{"index.html":{}}}],["disable",{"_index":559,"title":{},"body":{"controllers/AuthController.html":{}}}],["docker",{"_index":988,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":480,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["done(null",{"_index":508,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["dto/access",{"_index":549,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":121,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":123,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":997,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":969,"title":{},"body":{"index.html":{}}}],["email",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"injectables/AccountsService.html":{},"injectables/AuthService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/UserDto.html":{}}}],["entities",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["entities/account.entity",{"_index":239,"title":{},"body":{"modules/AccountsModule.html":{},"injectables/AccountsService.html":{}}}],["entities/accounts",{"_index":199,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{}}}],["entities/package.entity",{"_index":828,"title":{},"body":{"modules/PackagesModule.html":{},"injectables/PackagesService.html":{}}}],["entity",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["env",{"_index":1010,"title":{},"body":{"index.html":{}}}],["env.${process.env.node_env",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.development",{"_index":1000,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":481,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{}}}],["error,undefined",{"_index":482,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["eslint",{"_index":558,"title":{},"body":{"controllers/AuthController.html":{}}}],["eslint/explicit",{"_index":563,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":594,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":198,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{}}}],["express",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":469,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":766,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":771,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":256,"title":{},"body":{"classes/AccountsProfile.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":310,"title":{},"body":{"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@param('limit",{"_index":818,"title":{},"body":{"controllers/PackagesController.html":{}}}],["findall(limit",{"_index":401,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["findall(limitskip",{"_index":317,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["findall(offset",{"_index":437,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["findbyaccount",{"_index":211,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["findbyaccount(user",{"_index":219,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["findbyemail",{"_index":311,"title":{},"body":{"injectables/AccountsService.html":{}}}],["findbyemail(email",{"_index":321,"title":{},"body":{"injectables/AccountsService.html":{}}}],["findone",{"_index":97,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["findone(@param('id",{"_index":128,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/PackagesController.html":{}}}],["findone(id",{"_index":100,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["findonebyusertype",{"_index":380,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["findonebyusertype(typeuser",{"_index":386,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["firstname",{"_index":40,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["framework",{"_index":967,"title":{},"body":{"index.html":{}}}],["function",{"_index":486,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"coverage.html":{}}}],["functions",{"_index":961,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatetoken",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:page/:limit",{"_index":403,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["get(':id",{"_index":101,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/PackagesController.html":{}}}],["getting",{"_index":963,"title":{"index.html":{}},"body":{}}],["grow",{"_index":1016,"title":{},"body":{"index.html":{}}}],["guards/apikey",{"_index":555,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":554,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":551,"title":{},"body":{"controllers/AuthController.html":{}}}],["hashpassword",{"_index":641,"title":{},"body":{"injectables/CommonService.html":{}}}],["hashpassword(password",{"_index":643,"title":{},"body":{"injectables/CommonService.html":{}}}],["header",{"_index":495,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["headerapikey",{"_index":489,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"dependencies.html":{}}}],["headerapikeystrategy",{"_index":487,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["heigth",{"_index":693,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["here",{"_index":1027,"title":{},"body":{"index.html":{}}}],["http",{"_index":496,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":1034,"title":{},"body":{"index.html":{}}}],["id",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":772,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["images",{"_index":992,"title":{},"body":{"index.html":{}}}],["import",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":197,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index()@column({length",{"_index":65,"title":{},"body":{"classes/Account.html":{}}}],["index()@manytoone(undefined",{"_index":140,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["index({unique",{"_index":348,"title":{},"body":{"classes/AccountsType.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":206,"title":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":207,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":224,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/PackagesService.html":{}}}],["injectrepository(account",{"_index":326,"title":{},"body":{"injectables/AccountsService.html":{}}}],["injectrepository(accountscredential",{"_index":226,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["injectrepository(accountsprofile",{"_index":304,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["injectrepository(accountstype",{"_index":389,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["injectrepository(package",{"_index":839,"title":{},"body":{"injectables/PackagesService.html":{}}}],["installation",{"_index":976,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":978,"title":{},"body":{"index.html":{}}}],["isactive",{"_index":139,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"injectables/AccountsProfilesService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["isemail",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/CreateAccessToken.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":656,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["isglobal",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"classes/CreateAccessToken.html":{}}}],["isnotempty()@apiproperty",{"_index":658,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["issuer",{"_index":598,"title":{},"body":{"modules/AuthModule.html":{}}}],["join",{"_index":1023,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":260,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["jsonb",{"_index":254,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["jwt",{"_index":768,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_secret=b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79",{"_index":1003,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":553,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":770,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":585,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":590,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":579,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1031,"title":{},"body":{"index.html":{}}}],["key",{"_index":499,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["key.strategy",{"_index":589,"title":{},"body":{"modules/AuthModule.html":{}}}],["key.strategy.ts",{"_index":473,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"coverage.html":{}}}],["key.strategy.ts:15",{"_index":484,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["key.strategy.ts:7",{"_index":478,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["large",{"_index":694,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["lastname",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["length",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["license",{"_index":1037,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1013,"title":{},"body":{"index.html":{}}}],["limit",{"_index":405,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["limitskip",{"_index":320,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["limittake",{"_index":318,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["line",{"_index":561,"title":{},"body":{"controllers/AuthController.html":{}}}],["llave",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{}}}],["local",{"_index":783,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":550,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":580,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["manytoone",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/Package.html":{}}}],["manytoone(undefined",{"_index":46,"title":{},"body":{"classes/Account.html":{}}}],["matching",{"_index":32,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":96,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mikro",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":960,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1012,"title":{},"body":{"index.html":{}}}],["mode",{"_index":984,"title":{},"body":{"index.html":{}}}],["module",{"_index":183,"title":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":185,"title":{"modules.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1026,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1032,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":974,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1036,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":116,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":586,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":468,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":203,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"modules/AppModule.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"dependencies.html":{}}}],["new",{"_index":444,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":560,"title":{},"body":{"controllers/AuthController.html":{}}}],["node.js",{"_index":966,"title":{},"body":{"index.html":{}}}],["npm",{"_index":977,"title":{},"body":{"index.html":{}}}],["null",{"_index":506,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{}}}],["nullable",{"_index":255,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["number",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/CommonService.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":252,"title":{},"body":{"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{}}}],["offset",{"_index":439,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["offset,take",{"_index":901,"title":{},"body":{"injectables/UsersService.html":{}}}],["onetoone",{"_index":259,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":246,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["open",{"_index":1014,"title":{},"body":{"index.html":{}}}],["openapi",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreatePackageDto-1.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":333,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["orm/core",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["orm/postgresql",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":194,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1041,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":787,"title":{"classes/Package.html":{},"dependencies.html":{}},"body":{"classes/Package.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"coverage.html":{}}}],["package.dto",{"_index":814,"title":{},"body":{"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdatePackageDto.html":{}}}],["package.dto.ts",{"_index":692,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["package.dto.ts:11",{"_index":704,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:13",{"_index":703,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:15",{"_index":702,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:17",{"_index":701,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:19",{"_index":706,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:5",{"_index":700,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:7",{"_index":705,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:9",{"_index":707,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["packagerepository",{"_index":833,"title":{},"body":{"injectables/PackagesService.html":{}}}],["packages",{"_index":804,"title":{},"body":{"controllers/PackagesController.html":{}}}],["packages.controller",{"_index":827,"title":{},"body":{"modules/PackagesModule.html":{}}}],["packages/packages.module",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["packagescontroller",{"_index":802,"title":{"controllers/PackagesController.html":{}},"body":{"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"coverage.html":{}}}],["packagesmodule",{"_index":514,"title":{"modules/PackagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PackagesModule.html":{},"modules.html":{},"overview.html":{}}}],["packagesservice",{"_index":812,"title":{"injectables/PackagesService.html":{}},"body":{"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"coverage.html":{},"overview.html":{}}}],["page",{"_index":402,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["param",{"_index":114,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":285,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["param('limit",{"_index":414,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{}}}],["param('page",{"_index":415,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{}}}],["partialtype",{"_index":846,"title":{},"body":{"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaccountdto",{"_index":847,"title":{},"body":{"classes/UpdateAccountDto.html":{}}}],["partialtype(createaccountscredentialdto",{"_index":849,"title":{},"body":{"classes/UpdateAccountsCredentialDto.html":{}}}],["partialtype(createaccountsprofiledto",{"_index":851,"title":{},"body":{"classes/UpdateAccountsProfileDto.html":{}}}],["partialtype(createaccountstypedto",{"_index":853,"title":{},"body":{"classes/UpdateAccountsTypeDto.html":{}}}],["partialtype(createagentdto",{"_index":855,"title":{},"body":{"classes/UpdateAgentDto.html":{}}}],["partialtype(createcustomerdto",{"_index":857,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["partialtype(createpackagedto",{"_index":859,"title":{},"body":{"classes/UpdatePackageDto.html":{}}}],["partialtype(createuserdto",{"_index":863,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":488,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":584,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":490,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(headerapikeystrategy",{"_index":493,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["passportstrategy(strategy",{"_index":769,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/UserDto.html":{}}}],["passwordfield",{"_index":785,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":113,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":109,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/PackagesController.html":{}}}],["payload",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":775,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":776,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["pg_uri",{"_index":1001,"title":{},"body":{"index.html":{}}}],["please",{"_index":1024,"title":{},"body":{"index.html":{}}}],["post",{"_index":111,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["postgres",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres://user:password@localhost:5432/db",{"_index":1002,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":95,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["primarygeneratedcolumn",{"_index":60,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["private",{"_index":179,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}}}],["process.env.api_key",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.app_iss",{"_index":599,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.app_url",{"_index":597,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":592,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.pg_uri",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.prefix}/${process.env.version",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":986,"title":{},"body":{"index.html":{}}}],["profile",{"_index":245,"title":{},"body":{"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.dto",{"_index":283,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"classes/UpdateAccountsProfileDto.html":{}}}],["profile.dto.ts",{"_index":263,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":264,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.dto.ts:12",{"_index":268,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:14",{"_index":265,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:16",{"_index":270,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:18",{"_index":266,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":267,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.dto.ts:8",{"_index":269,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.entity",{"_index":294,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{}}}],["profile.entity.ts",{"_index":244,"title":{},"body":{"classes/AccountsProfile.html":{},"coverage.html":{}}}],["profile.entity.ts:18",{"_index":250,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:21",{"_index":257,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:25",{"_index":247,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:28",{"_index":251,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:31",{"_index":248,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:34",{"_index":258,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:37",{"_index":249,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profilerepository",{"_index":300,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles",{"_index":275,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.controller",{"_index":293,"title":{},"body":{"modules/AccountsProfilesModule.html":{}}}],["profiles.controller.ts",{"_index":274,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"coverage.html":{}}}],["profiles.controller.ts:15",{"_index":276,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.controller.ts:20",{"_index":279,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.controller.ts:28",{"_index":277,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.module",{"_index":428,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["profiles.module.ts",{"_index":292,"title":{},"body":{"modules/AccountsProfilesModule.html":{}}}],["profiles.service",{"_index":281,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{}}}],["profiles.service.ts",{"_index":297,"title":{},"body":{"injectables/AccountsProfilesService.html":{},"coverage.html":{}}}],["profiles.service.ts:15",{"_index":301,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles.service.ts:21",{"_index":303,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles.service.ts:25",{"_index":302,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles.service.ts:9",{"_index":299,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles/accounts",{"_index":273,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["profiles/dto/accounts",{"_index":262,"title":{},"body":{"classes/AccountsProfileDto.html":{},"coverage.html":{}}}],["profiles/dto/create",{"_index":668,"title":{},"body":{"classes/CreateAccountsProfileDto.html":{},"coverage.html":{}}}],["profiles/dto/update",{"_index":850,"title":{},"body":{"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["profiles/entities/accounts",{"_index":243,"title":{},"body":{"classes/AccountsProfile.html":{},"coverage.html":{}}}],["profiles/services/accounts",{"_index":296,"title":{},"body":{"injectables/AccountsProfilesService.html":{},"coverage.html":{}}}],["progressive",{"_index":965,"title":{},"body":{"index.html":{}}}],["project",{"_index":1015,"title":{},"body":{"index.html":{}}}],["promise",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/LocalStrategy.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Package.html":{},"classes/UserDto.html":{}}}],["providers",{"_index":196,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":474,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["read",{"_index":1025,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":127,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["rebuild",{"_index":991,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":98,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["remove(@param('id",{"_index":133,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/PackagesController.html":{}}}],["remove(id",{"_index":104,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["repository",{"_index":215,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/PackagesService.html":{},"index.html":{}}}],["req",{"_index":500,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{}}}],["res",{"_index":406,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":193,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":129,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":103,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["router",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":981,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":652,"title":{},"body":{"injectables/CommonService.html":{}}}],["saltrounds",{"_index":640,"title":{},"body":{"injectables/CommonService.html":{}}}],["scalable",{"_index":970,"title":{},"body":{"index.html":{}}}],["secret",{"_index":591,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secret.credential",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":773,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":971,"title":{},"body":{"index.html":{}}}],["services",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/accounts",{"_index":175,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{}}}],["services/accounts.service",{"_index":119,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{}}}],["services/agents.service",{"_index":408,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["services/auth.service",{"_index":492,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["services/common.service",{"_index":638,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/customers.service",{"_index":738,"title":{},"body":{"controllers/CustomersController.html":{},"modules/CustomersModule.html":{}}}],["services/packages.service",{"_index":813,"title":{},"body":{"controllers/PackagesController.html":{},"modules/PackagesModule.html":{}}}],["services/users.service",{"_index":879,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["servicio",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{}}}],["side",{"_index":972,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":593,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip",{"_index":335,"title":{},"body":{"injectables/AccountsService.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1018,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/accounts",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/accounts/accounts.controller.ts",{"_index":94,"title":{},"body":{"controllers/AccountsController.html":{},"coverage.html":{}}}],["src/accounts/accounts.controller.ts:13",{"_index":102,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:18",{"_index":110,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:23",{"_index":106,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.module",{"_index":426,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["src/accounts/accounts.module.ts",{"_index":238,"title":{},"body":{"modules/AccountsModule.html":{}}}],["src/accounts/dto/account.dto",{"_index":163,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["src/accounts/dto/account.dto.ts",{"_index":77,"title":{},"body":{"classes/AccountDto.html":{},"coverage.html":{}}}],["src/accounts/dto/account.dto.ts:10",{"_index":85,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:12",{"_index":87,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:14",{"_index":82,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:16",{"_index":79,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:18",{"_index":80,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:19",{"_index":86,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:20",{"_index":81,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:6",{"_index":84,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:8",{"_index":83,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/create",{"_index":440,"title":{},"body":{"injectables/AgentsService.html":{},"classes/CreateAccountDto.html":{},"injectables/CustomersService.html":{},"coverage.html":{}}}],["src/accounts/dto/update",{"_index":845,"title":{},"body":{"classes/UpdateAccountDto.html":{},"coverage.html":{}}}],["src/accounts/entities/account.entity",{"_index":164,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["src/accounts/entities/account.entity.ts",{"_index":35,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/accounts/entities/account.entity.ts:17",{"_index":61,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:20",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:23",{"_index":62,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:27",{"_index":66,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:31",{"_index":56,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:34",{"_index":48,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:37",{"_index":51,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:40",{"_index":64,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:43",{"_index":53,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/services/accounts.service",{"_index":441,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["src/accounts/services/accounts.service.ts",{"_index":309,"title":{},"body":{"injectables/AccountsService.html":{},"coverage.html":{}}}],["src/accounts/services/accounts.service.ts:10",{"_index":313,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:16",{"_index":316,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:25",{"_index":319,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:40",{"_index":323,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:44",{"_index":322,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:50",{"_index":325,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:54",{"_index":324,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/agents/agents.controller.ts",{"_index":396,"title":{},"body":{"controllers/AgentsController.html":{},"coverage.html":{}}}],["src/agents/agents.controller.ts:13",{"_index":400,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/agents/agents.controller.ts:18",{"_index":404,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/agents/agents.module.ts",{"_index":422,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/agents/dto/create",{"_index":670,"title":{},"body":{"classes/CreateAgentDto.html":{},"coverage.html":{}}}],["src/agents/dto/update",{"_index":854,"title":{},"body":{"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["src/agents/entities/agent.entity.ts",{"_index":394,"title":{},"body":{"classes/Agent.html":{},"coverage.html":{}}}],["src/agents/services/agents.service.ts",{"_index":430,"title":{},"body":{"injectables/AgentsService.html":{},"coverage.html":{}}}],["src/agents/services/agents.service.ts:12",{"_index":434,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/agents/services/agents.service.ts:20",{"_index":436,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/agents/services/agents.service.ts:42",{"_index":438,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/app.module.ts",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":532,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":539,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":581,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dto/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["src/auth/dto/create",{"_index":655,"title":{},"body":{"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["src/auth/guards/apikey",{"_index":465,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":760,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":777,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:10",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:18",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:48",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:56",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/api",{"_index":472,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":762,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:16",{"_index":765,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:7",{"_index":763,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":779,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:16",{"_index":782,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:8",{"_index":780,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/common.module",{"_index":204,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["src/common/common.module.ts",{"_index":637,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/services/common.service",{"_index":225,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["src/common/services/common.service.ts",{"_index":639,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/common/services/common.service.ts:12",{"_index":644,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/common/services/common.service.ts:6",{"_index":649,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/common/services/common.service.ts:8",{"_index":646,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/customers/customers.controller.ts",{"_index":732,"title":{},"body":{"controllers/CustomersController.html":{},"coverage.html":{}}}],["src/customers/customers.controller.ts:13",{"_index":735,"title":{},"body":{"controllers/CustomersController.html":{}}}],["src/customers/customers.controller.ts:18",{"_index":736,"title":{},"body":{"controllers/CustomersController.html":{}}}],["src/customers/customers.module.ts",{"_index":748,"title":{},"body":{"modules/CustomersModule.html":{}}}],["src/customers/dto/create",{"_index":680,"title":{},"body":{"classes/CreateCustomerDto.html":{},"coverage.html":{}}}],["src/customers/dto/update",{"_index":856,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["src/customers/entities/customer.entity.ts",{"_index":730,"title":{},"body":{"classes/Customer.html":{},"coverage.html":{}}}],["src/customers/services/customers.service.ts",{"_index":750,"title":{},"body":{"injectables/CustomersService.html":{},"coverage.html":{}}}],["src/customers/services/customers.service.ts:12",{"_index":751,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/customers/services/customers.service.ts:20",{"_index":752,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/customers/services/customers.service.ts:43",{"_index":753,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/main.ts",{"_index":922,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/packages/dto/create",{"_index":691,"title":{},"body":{"classes/CreatePackageDto.html":{},"coverage.html":{}}}],["src/packages/dto/package.dto.ts",{"_index":708,"title":{},"body":{"classes/CreatePackageDto-1.html":{},"coverage.html":{}}}],["src/packages/dto/package.dto.ts:11",{"_index":720,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:13",{"_index":717,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:15",{"_index":715,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:17",{"_index":714,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:19",{"_index":712,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:21",{"_index":719,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:23",{"_index":709,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:25",{"_index":716,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:27",{"_index":710,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:5",{"_index":713,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:7",{"_index":711,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/package.dto.ts:9",{"_index":718,"title":{},"body":{"classes/CreatePackageDto-1.html":{}}}],["src/packages/dto/update",{"_index":858,"title":{},"body":{"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["src/packages/entities/package.entity.ts",{"_index":788,"title":{},"body":{"classes/Package.html":{},"coverage.html":{}}}],["src/packages/entities/package.entity.ts:12",{"_index":799,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:15",{"_index":801,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:18",{"_index":798,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:21",{"_index":796,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:24",{"_index":794,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:27",{"_index":792,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:30",{"_index":800,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:33",{"_index":789,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:36",{"_index":797,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:39",{"_index":790,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:6",{"_index":793,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:9",{"_index":791,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/packages.controller.ts",{"_index":803,"title":{},"body":{"controllers/PackagesController.html":{},"coverage.html":{}}}],["src/packages/packages.controller.ts:13",{"_index":806,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:18",{"_index":807,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:25",{"_index":808,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:30",{"_index":811,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:35",{"_index":809,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.module.ts",{"_index":826,"title":{},"body":{"modules/PackagesModule.html":{}}}],["src/packages/services/packages.service.ts",{"_index":830,"title":{},"body":{"injectables/PackagesService.html":{},"coverage.html":{}}}],["src/packages/services/packages.service.ts:15",{"_index":834,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:19",{"_index":835,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:29",{"_index":836,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:33",{"_index":838,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:37",{"_index":837,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:9",{"_index":832,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/users/dto/create",{"_index":722,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":861,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts",{"_index":866,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts:11",{"_index":870,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:13",{"_index":872,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:15",{"_index":871,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:5",{"_index":869,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:7",{"_index":867,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:9",{"_index":868,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/entities/user.entity.ts",{"_index":864,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts",{"_index":889,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts:13",{"_index":890,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:21",{"_index":891,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:44",{"_index":892,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":874,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:13",{"_index":876,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:18",{"_index":877,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":887,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":982,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":985,"title":{},"body":{"index.html":{}}}],["start:prodrunning",{"_index":987,"title":{},"body":{"index.html":{}}}],["started",{"_index":964,"title":{"index.html":{}},"body":{}}],["starter",{"_index":975,"title":{},"body":{"index.html":{}}}],["statements",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["statepassword",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["status",{"_index":565,"title":{},"body":{"controllers/AuthController.html":{}}}],["stay",{"_index":1028,"title":{},"body":{"index.html":{}}}],["strategies/api",{"_index":588,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/jwt.strategy",{"_index":587,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":583,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":767,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"controllers/AccountsCredentialsController.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"classes/UserDto.html":{}}}],["sub",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":494,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1019,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1039,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":336,"title":{},"body":{"injectables/AccountsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["telephone",{"_index":672,"title":{},"body":{"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{}}}],["test",{"_index":994,"title":{},"body":{"index.html":{}}}],["test:covenviroment",{"_index":999,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":998,"title":{},"body":{"index.html":{}}}],["tests",{"_index":996,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1017,"title":{},"body":{"index.html":{}}}],["this.accountscredentialsservice.create(createaccountscredentialdto",{"_index":181,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["this.accountscredentialsservice.remove(+id",{"_index":182,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["this.accountservice.create(usernew",{"_index":455,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["this.accountservice.findall",{"_index":900,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.accountservice.findall(offset",{"_index":463,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{}}}],["this.accountservice.findbyemail(email",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.accountsprofilesservice.findone(+id",{"_index":284,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["this.accountsprofilesservice.remove(+id",{"_index":287,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["this.accountsprofilesservice.update(+id",{"_index":286,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["this.accountsservice.findone(+id",{"_index":130,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.remove(+id",{"_index":134,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.update(+id",{"_index":132,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountstypesservice.findall",{"_index":369,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["this.accountstypesservice.findone(+id",{"_index":370,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["this.accounttypeservice.findonebyusertype('agent",{"_index":442,"title":{},"body":{"injectables/AgentsService.html":{}}}],["this.accounttypeservice.findonebyusertype('client",{"_index":754,"title":{},"body":{"injectables/CustomersService.html":{}}}],["this.accounttypeservice.findonebyusertype('user",{"_index":894,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.agentsservice.create(createagentdto",{"_index":413,"title":{},"body":{"controllers/AgentsController.html":{}}}],["this.agentsservice.findall(skip",{"_index":417,"title":{},"body":{"controllers/AgentsController.html":{}}}],["this.authservice.generatetoken(req.user",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(username",{"_index":786,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.validateapikey(apikey",{"_index":505,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["this.commonservice.hashpassword",{"_index":229,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.commonservice.verifypassword",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.credentialrepository.findone",{"_index":231,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.credentialrepository.save",{"_index":230,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.credentialrepository.softdelete(id",{"_index":233,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.credentialservice.create(credential",{"_index":460,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["this.credentialservice.findbyaccount(user",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.customersservice.create(createcustomerdto",{"_index":743,"title":{},"body":{"controllers/CustomersController.html":{}}}],["this.customersservice.findall(skip",{"_index":744,"title":{},"body":{"controllers/CustomersController.html":{}}}],["this.findone(id",{"_index":232,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.jwtservice.sign(payload",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.packagerepository.find",{"_index":841,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.findone(id",{"_index":842,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.save(createpackagedto",{"_index":840,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.softdelete(id",{"_index":844,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.update(id",{"_index":843,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagesservice.create(createpackagedto",{"_index":817,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.findall(skip",{"_index":819,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.findone(+id",{"_index":820,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.remove(+id",{"_index":822,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.update(+id",{"_index":821,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.profilerepository.findone",{"_index":305,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["this.profilerepository.softdelete(id",{"_index":308,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["this.profilerepository.update(id",{"_index":307,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["this.typesrepository.find",{"_index":390,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["this.typesrepository.findone",{"_index":392,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["this.typesrepository.findone(id",{"_index":391,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["this.usersrepository.create(createaccountdto",{"_index":327,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.find",{"_index":332,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.findone",{"_index":338,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.findone(id",{"_index":337,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.save(user",{"_index":331,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.softdelete(id",{"_index":340,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.update(id",{"_index":339,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":882,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(skip",{"_index":883,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validate(apikey",{"_index":501,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["throw",{"_index":507,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["title",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token.dto",{"_index":542,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token.dto.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["token.dto.ts:11",{"_index":659,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["token.dto.ts:6",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.dto.ts:8",{"_index":657,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["touch",{"_index":1029,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1007,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":148,"title":{},"body":{"classes/AccountsCredential.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"injectables/AccountsProfilesService.html":{},"classes/AccountsType.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["true})@column({length",{"_index":349,"title":{},"body":{"classes/AccountsType.html":{}}}],["try",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":1035,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.dto",{"_index":90,"title":{},"body":{"classes/AccountDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/CreateAccountDto.html":{},"classes/UpdateAccountsTypeDto.html":{}}}],["type.dto.ts",{"_index":352,"title":{},"body":{"classes/AccountsTypeDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:11",{"_index":353,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.dto.ts:12",{"_index":357,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.dto.ts:13",{"_index":354,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.dto.ts:5",{"_index":355,"title":{},"body":{"classes/AccountsTypeDto.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["type.dto.ts:7",{"_index":358,"title":{},"body":{"classes/AccountsTypeDto.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["type.dto.ts:9",{"_index":356,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.entity",{"_index":69,"title":{},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{}}}],["type.entity.ts",{"_index":341,"title":{},"body":{"classes/AccountsType.html":{},"coverage.html":{}}}],["type.entity.ts:10",{"_index":350,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:13",{"_index":346,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:16",{"_index":343,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:19",{"_index":347,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:22",{"_index":344,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:6",{"_index":345,"title":{},"body":{"classes/AccountsType.html":{}}}],["typeentity",{"_index":461,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["typeorm",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"injectables/AccountsTypesService.html":{},"classes/Package.html":{},"injectables/PackagesService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":202,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AppModule.html":{},"modules/PackagesModule.html":{}}}],["typeormmodule.forfeature([account",{"_index":241,"title":{},"body":{"modules/AccountsModule.html":{}}}],["typeormmodule.forfeature([accountscredential",{"_index":205,"title":{},"body":{"modules/AccountsCredentialsModule.html":{}}}],["typeormmodule.forfeature([accountsprofile",{"_index":295,"title":{},"body":{"modules/AccountsProfilesModule.html":{}}}],["typeormmodule.forfeature([accountstype",{"_index":377,"title":{},"body":{"modules/AccountsTypesModule.html":{}}}],["typeormmodule.forfeature([package",{"_index":829,"title":{},"body":{"modules/PackagesModule.html":{}}}],["typeormmodule.forroot",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":362,"title":{},"body":{"controllers/AccountsTypesController.html":{},"controllers/AuthController.html":{}}}],["types.controller",{"_index":376,"title":{},"body":{"modules/AccountsTypesModule.html":{}}}],["types.controller.ts",{"_index":361,"title":{},"body":{"controllers/AccountsTypesController.html":{},"coverage.html":{}}}],["types.controller.ts:13",{"_index":363,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["types.controller.ts:18",{"_index":364,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["types.module",{"_index":429,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["types.module.ts",{"_index":375,"title":{},"body":{"modules/AccountsTypesModule.html":{}}}],["types.service",{"_index":366,"title":{},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["types.service.ts",{"_index":379,"title":{},"body":{"injectables/AccountsTypesService.html":{},"coverage.html":{}}}],["types.service.ts:15",{"_index":384,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types.service.ts:19",{"_index":385,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types.service.ts:23",{"_index":387,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types.service.ts:9",{"_index":382,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types/accounts",{"_index":360,"title":{},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["types/dto/accounts",{"_index":89,"title":{},"body":{"classes/AccountDto.html":{},"classes/AccountsTypeDto.html":{},"classes/CreateAccountDto.html":{},"coverage.html":{}}}],["types/dto/create",{"_index":669,"title":{},"body":{"classes/CreateAccountsTypeDto.html":{},"coverage.html":{}}}],["types/dto/update",{"_index":852,"title":{},"body":{"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["types/entities/accounts",{"_index":68,"title":{},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"coverage.html":{}}}],["types/services/accounts",{"_index":378,"title":{},"body":{"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":562,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["typesrepository",{"_index":383,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["typeuser",{"_index":388,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["ui",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":491,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{}}}],["unique",{"_index":351,"title":{},"body":{"classes/AccountsType.html":{}}}],["unit",{"_index":995,"title":{},"body":{"index.html":{}}}],["units",{"_index":695,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["unknown",{"_index":218,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["up",{"_index":990,"title":{},"body":{"index.html":{}}}],["update",{"_index":99,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["update(@param('id",{"_index":131,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/PackagesController.html":{}}}],["update(id",{"_index":107,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["updateaccountdto",{"_index":108,"title":{"classes/UpdateAccountDto.html":{}},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/UpdateAccountDto.html":{},"coverage.html":{}}}],["updateaccountscredentialdto",{"_index":178,"title":{"classes/UpdateAccountsCredentialDto.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["updateaccountsprofiledto",{"_index":278,"title":{"classes/UpdateAccountsProfileDto.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["updateaccountstypedto",{"_index":368,"title":{"classes/UpdateAccountsTypeDto.html":{}},"body":{"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["updateagentdto",{"_index":410,"title":{"classes/UpdateAgentDto.html":{}},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["updatecustomerdto",{"_index":740,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["updated",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["updatedatecolumn",{"_index":63,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["updatepackagedto",{"_index":810,"title":{"classes/UpdatePackageDto.html":{}},"body":{"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":860,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":543,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(apikeyauthguard",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":221,"title":{"classes/User.html":{}},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"coverage.html":{}}}],["user.accounttype",{"_index":328,"title":{},"body":{"injectables/AccountsService.html":{}}}],["user.dto",{"_index":862,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":723,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":728,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:13",{"_index":727,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":724,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":725,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":726,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":865,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["userentity",{"_index":454,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":774,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserDto.html":{}}}],["usernamefield",{"_index":784,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernew",{"_index":443,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.accounttypeid",{"_index":445,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.email",{"_index":452,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.firstname",{"_index":446,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.lastname",{"_index":448,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.username",{"_index":450,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":462,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":888,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":873,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":515,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":314,"title":{},"body":{"injectables/AccountsService.html":{}}}],["usersservice",{"_index":878,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertype",{"_index":342,"title":{},"body":{"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"injectables/AccountsTypesService.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["uuid",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["uuidv4",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["v1",{"_index":1009,"title":{},"body":{"index.html":{}}}],["v4",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":475,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(apikey",{"_index":479,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["validate(email",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(payload",{"_index":764,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":781,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateapikey",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey(key",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/CreateAccessToken.html":{},"dependencies.html":{}}}],["value",{"_index":647,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1046,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifypassword",{"_index":642,"title":{},"body":{"injectables/CommonService.html":{}}}],["verifypassword(password",{"_index":645,"title":{},"body":{"injectables/CommonService.html":{}}}],["version",{"_index":1008,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":483,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["volumen",{"_index":696,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["watch",{"_index":983,"title":{},"body":{"index.html":{}}}],["website",{"_index":1033,"title":{},"body":{"index.html":{}}}],["weigth",{"_index":697,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["width",{"_index":698,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["wightunits",{"_index":699,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/CreatePackageDto-1.html":{},"classes/Package.html":{}}}],["x",{"_index":497,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{}}}],["you'd",{"_index":1022,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":192,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/access-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/auth/dto/access-token.dto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/access-token.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AccessToken {\n  @ApiProperty()\n  access_token: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/entities/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                updated\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { AccountsType } from 'src/accounts-types/entities/accounts-type.entity';\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  Index,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Account {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 45 })\n  firstName: string;\n\n  @Column({ length: 45 })\n  lastName: string;\n\n  @Index()\n  @Column({ length: 45 })\n  userName: string;\n\n  @Column({ length: 45 })\n  @IsEmail()\n  email: string;\n\n  @ManyToOne(() => AccountsType, (accountType) => accountType.id)\n  accountType: AccountsType;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountDto.html":{"url":"classes/AccountDto.html","title":"class - AccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                updated\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsTypeDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AccountsTypeDto } from './../../accounts-types/dto/accounts-type.dto';\n\nexport class AccountDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  accountType: AccountsTypeDto;\n\n  created!: Date;\n  updated!: Date;\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsController.html":{"url":"controllers/AccountsController.html","title":"controller - AccountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/accounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts/accounts.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts/accounts.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAccountDto: UpdateAccountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts/accounts.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountDto\n                                    \n                                                UpdateAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AccountsService } from './services/accounts.service';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { UpdateAccountDto } from './dto/update-account.dto';\n\n@ApiTags('accounts')\n@Controller('accounts')\nexport class AccountsController {\n  constructor(private readonly accountsService: AccountsService) {}\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.accountsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAccountDto: UpdateAccountDto) {\n    return this.accountsService.update(+id, updateAccountDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.accountsService.remove(+id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsCredential.html":{"url":"classes/AccountsCredential.html","title":"class - AccountsCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/entities/accounts-credential.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                credential\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credential\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  Index,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n} from 'typeorm';\nimport { Account } from './../../accounts/entities/account.entity';\n\n@Entity()\nexport class AccountsCredential {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  credential: string;\n\n  @Index()\n  @ManyToOne(() => Account, (account) => account.id)\n  account: Account;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsCredentialDto.html":{"url":"classes/AccountsCredentialDto.html","title":"class - AccountsCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/dto/accounts-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountDto } from \"src/accounts/dto/account.dto\";\nimport { Account } from \"src/accounts/entities/account.entity\";\n\nexport class AccountsCredentialDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  account: Account;\n  @ApiProperty()\n  isActive: boolean;\n\n  created!: Date;\n\n  updated!: Date;\n\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsCredentialsController.html":{"url":"controllers/AccountsCredentialsController.html","title":"controller - AccountsCredentialsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsCredentialsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/accounts-credentials.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts-credentials\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAccountsCredentialDto: CreateAccountsCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/accounts-credentials/accounts-credentials.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAccountsCredentialDto\n                                    \n                                                CreateAccountsCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-credentials/accounts-credentials.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AccountsCredentialsService } from './services/accounts-credentials.service';\nimport { CreateAccountsCredentialDto } from './dto/create-accounts-credential.dto';\nimport { UpdateAccountsCredentialDto } from './dto/update-accounts-credential.dto';\n\n@ApiTags('accounts-credentials')\n@Controller('accounts-credentials')\nexport class AccountsCredentialsController {\n  constructor(\n    private readonly accountsCredentialsService: AccountsCredentialsService,\n  ) {}\n\n  @Post()\n  create(@Body() createAccountsCredentialDto: CreateAccountsCredentialDto) {\n    return this.accountsCredentialsService.create(createAccountsCredentialDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.accountsCredentialsService.remove(+id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsCredentialsModule.html":{"url":"modules/AccountsCredentialsModule.html","title":"module - AccountsCredentialsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsCredentialsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsCredentialsModule\n\n\n\ncluster_AccountsCredentialsModule_imports\n\n\n\ncluster_AccountsCredentialsModule_exports\n\n\n\ncluster_AccountsCredentialsModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule -->\n\nCommonModule->AccountsCredentialsModule\n\n\n\n\n\nAccountsCredentialsService \n\nAccountsCredentialsService \n\nAccountsCredentialsService  -->\n\nAccountsCredentialsModule->AccountsCredentialsService \n\n\n\n\n\nAccountsCredentialsService\n\nAccountsCredentialsService\n\nAccountsCredentialsModule -->\n\nAccountsCredentialsService->AccountsCredentialsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts-credentials/accounts-credentials.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsCredentialsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsCredentialsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsCredentialsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AccountsCredential } from './entities/accounts-credential.entity';\nimport { Module } from '@nestjs/common';\nimport { AccountsCredentialsService } from './services/accounts-credentials.service';\nimport { AccountsCredentialsController } from './accounts-credentials.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CommonModule } from 'src/common/common.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountsCredential]), CommonModule],\n  exports: [TypeOrmModule, AccountsCredentialsService],\n  controllers: [AccountsCredentialsController],\n  providers: [AccountsCredentialsService],\n})\nexport class AccountsCredentialsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsCredentialsService.html":{"url":"injectables/AccountsCredentialsService.html","title":"injectable - AccountsCredentialsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsCredentialsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/services/accounts-credentials.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByAccount\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService, credentialRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts-credentials/services/accounts-credentials.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAccountsCredentialDto: CreateAccountsCredentialDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAccountsCredentialDto\n                                    \n                                                CreateAccountsCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByAccount(user)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CommonService } from 'src/common/services/common.service';\nimport { Repository } from 'typeorm';\nimport { CreateAccountsCredentialDto } from '../dto/create-accounts-credential.dto';\nimport { UpdateAccountsCredentialDto } from '../dto/update-accounts-credential.dto';\nimport { AccountsCredential } from '../entities/accounts-credential.entity';\n\n@Injectable()\nexport class AccountsCredentialsService {\n  constructor(\n    private commonService: CommonService,\n    @InjectRepository(AccountsCredential)\n    private credentialRepository: Repository,\n  ) {}\n\n  async create(createAccountsCredentialDto: CreateAccountsCredentialDto) {\n    createAccountsCredentialDto.credential =\n      await this.commonService.hashPassword(\n        createAccountsCredentialDto.credential,\n      );\n    let credential = await this.credentialRepository.save(\n      createAccountsCredentialDto,\n    );\n    return credential;\n  }\n\n  async findByAccount(user) {\n    return await this.credentialRepository.findOne({\n      where: { account: user, isActive: true },\n    });\n  }\n\n  async findOne(id: number) {\n    return await this.credentialRepository.findOne({\n      where: { id: id, isActive: true },\n    });\n  }\n\n  async remove(id: number) {\n    let credential = await this.findOne(id);\n    return this.credentialRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsModule.html":{"url":"modules/AccountsModule.html","title":"module - AccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_providers\n\n\n\ncluster_AccountsModule_exports\n\n\n\n\nAccountsService \n\nAccountsService \n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsService  -->\n\nAccountsModule->AccountsService \n\n\n\n\n\nAccountsService\n\nAccountsService\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts/accounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Account } from './entities/account.entity';\nimport { Module } from '@nestjs/common';\nimport { AccountsService } from './services/accounts.service';\nimport { AccountsController } from './accounts.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Account])],\n  exports: [TypeOrmModule, AccountsService],\n  controllers: [AccountsController],\n  providers: [AccountsService],\n})\nexport class AccountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsProfile.html":{"url":"classes/AccountsProfile.html","title":"class - AccountsProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/entities/accounts-profile.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                profile\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from 'src/accounts/entities/account.entity';\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  Index,\n  OneToOne,\n  JoinColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class AccountsProfile {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'jsonb', nullable: false })\n  profile: object;\n\n  @OneToOne(() => Account)\n  @JoinColumn()\n  account: Account;\n\n  @Column({ default: true })\n  isActive: string;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsProfileDto.html":{"url":"classes/AccountsProfileDto.html","title":"class - AccountsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/dto/accounts-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                profile\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AccountDto } from './../../accounts/dto/account.dto';\n\nexport class AccountsProfileDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  profile: object;\n  @ApiProperty()\n  account: AccountDto;\n  @ApiProperty()\n  isActive: string;\n\n  created!: Date;\n\n  updated!: Date;\n\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsProfilesController.html":{"url":"controllers/AccountsProfilesController.html","title":"controller - AccountsProfilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsProfilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/accounts-profiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts-profiles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-profiles/accounts-profiles.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-profiles/accounts-profiles.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAccountsProfileDto: UpdateAccountsProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-profiles/accounts-profiles.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountsProfileDto\n                                    \n                                                UpdateAccountsProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AccountsProfilesService } from './services/accounts-profiles.service';\nimport { CreateAccountsProfileDto } from './dto/create-accounts-profile.dto';\nimport { UpdateAccountsProfileDto } from './dto/update-accounts-profile.dto';\n\n@ApiTags('accounts-profiles')\n@Controller('accounts-profiles')\nexport class AccountsProfilesController {\n  constructor(\n    private readonly accountsProfilesService: AccountsProfilesService,\n  ) {}\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.accountsProfilesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateAccountsProfileDto: UpdateAccountsProfileDto,\n  ) {\n    return this.accountsProfilesService.update(+id, updateAccountsProfileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.accountsProfilesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsProfilesModule.html":{"url":"modules/AccountsProfilesModule.html","title":"module - AccountsProfilesModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsProfilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsProfilesModule\n\n\n\ncluster_AccountsProfilesModule_exports\n\n\n\ncluster_AccountsProfilesModule_providers\n\n\n\n\nAccountsProfilesService \n\nAccountsProfilesService \n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAccountsProfilesService  -->\n\nAccountsProfilesModule->AccountsProfilesService \n\n\n\n\n\nAccountsProfilesService\n\nAccountsProfilesService\n\nAccountsProfilesModule -->\n\nAccountsProfilesService->AccountsProfilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts-profiles/accounts-profiles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsProfilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsProfilesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsProfilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountsProfilesService } from './services/accounts-profiles.service';\nimport { AccountsProfilesController } from './accounts-profiles.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountsProfile } from './entities/accounts-profile.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountsProfile])],\n  exports: [TypeOrmModule, AccountsProfilesService],\n  controllers: [AccountsProfilesController],\n  providers: [AccountsProfilesService],\n})\nexport class AccountsProfilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsProfilesService.html":{"url":"injectables/AccountsProfilesService.html","title":"injectable - AccountsProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/services/accounts-profiles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts-profiles/services/accounts-profiles.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-profiles/services/accounts-profiles.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-profiles/services/accounts-profiles.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateAccountsProfileDto: UpdateAccountsProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-profiles/services/accounts-profiles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountsProfileDto\n                                    \n                                                UpdateAccountsProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAccountsProfileDto } from '../dto/create-accounts-profile.dto';\nimport { UpdateAccountsProfileDto } from '../dto/update-accounts-profile.dto';\nimport { AccountsProfile } from '../entities/accounts-profile.entity';\n\n@Injectable()\nexport class AccountsProfilesService {\n  constructor(\n    @InjectRepository(AccountsProfile)\n    private profileRepository: Repository,\n  ) {}\n\n  async findOne(id: number) {\n    return await this.profileRepository.findOne({\n      where: { accountId: id, isActive: true },\n    });\n  }\n\n  async update(id: number, updateAccountsProfileDto: UpdateAccountsProfileDto) {\n    return await this.profileRepository.update(id, updateAccountsProfileDto);\n  }\n\n  async remove(id: number) {\n     return await this.profileRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsService.html":{"url":"injectables/AccountsService.html","title":"injectable - AccountsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/services/accounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts/services/accounts.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAccountDto: CreateAccountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAccountDto\n                                    \n                                                CreateAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limitSkip: number, limitTake: number, accountType: AccountsType)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitSkip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limitTake\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountType\n                                    \n                                                AccountsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateAccountDto: UpdateAccountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountDto\n                                    \n                                                UpdateAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Account } from './../entities/account.entity';\nimport { Injectable } from '@nestjs/common';\nimport { CreateAccountDto } from '../dto/create-account.dto';\nimport { UpdateAccountDto } from '../dto/update-account.dto';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AccountsType } from 'src/accounts-types/entities/accounts-type.entity';\n\n@Injectable()\nexport class AccountsService {\n  constructor(\n    @InjectRepository(Account)\n    private usersRepository: Repository,\n  ) {}\n\n  async create(createAccountDto: CreateAccountDto) {\n    let user = await this.usersRepository.create(createAccountDto);\n    user.accountType = createAccountDto.accountTypeId;\n    console.log(user);\n    await this.usersRepository.save(user);\n\n    return user;\n  }\n\n  async findAll(\n    limitSkip: number,\n    limitTake: number,\n    accountType: AccountsType,\n  ) {\n    return await this.usersRepository.find({\n      where: { accountType: accountType },\n      order: {\n        id: 'DESC',\n      },\n      skip: limitSkip,\n      take: limitTake,\n    });\n  }\n\n  async findOne(id: number) {\n    return await this.usersRepository.findOne(id);\n  }\n\n  async findByEmail(email: string) {\n    return await this.usersRepository.findOne({\n      where: { email: email },\n    });\n  }\n\n  async update(id: number, updateAccountDto: UpdateAccountDto) {\n    return await this.usersRepository.update(id, updateAccountDto);\n  }\n\n  async remove(id: number) {\n    return await this.usersRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsType.html":{"url":"classes/AccountsType.html","title":"class - AccountsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/entities/accounts-type.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, Index, DeleteDateColumn, UpdateDateColumn, CreateDateColumn } from 'typeorm';\n\n@Entity()\nexport class AccountsType {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Index({ unique: true })\n  @Column({ length: 45 })\n  userType: string;\n\n  @Column({ default: true })\n  isActive: string;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsTypeDto.html":{"url":"classes/AccountsTypeDto.html","title":"class - AccountsTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/dto/accounts-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AccountsTypeDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  userType: string;\n  @ApiProperty()\n  isActive: string;\n \n  created!: Date;\n  updated!: Date;\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsTypesController.html":{"url":"controllers/AccountsTypesController.html","title":"controller - AccountsTypesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsTypesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/accounts-types.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts-types\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/accounts-types/accounts-types.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-types/accounts-types.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { AccountsTypesService } from './services/accounts-types.service';\nimport { CreateAccountsTypeDto } from './dto/create-accounts-type.dto';\nimport { UpdateAccountsTypeDto } from './dto/update-accounts-type.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('accounts-types')\n@Controller('accounts-types')\nexport class AccountsTypesController {\n  constructor(private readonly accountsTypesService: AccountsTypesService) {}\n\n  @Get()\n  findAll() {\n    return this.accountsTypesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.accountsTypesService.findOne(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsTypesModule.html":{"url":"modules/AccountsTypesModule.html","title":"module - AccountsTypesModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsTypesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsTypesModule\n\n\n\ncluster_AccountsTypesModule_providers\n\n\n\ncluster_AccountsTypesModule_exports\n\n\n\n\nAccountsTypesService \n\nAccountsTypesService \n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAccountsTypesService  -->\n\nAccountsTypesModule->AccountsTypesService \n\n\n\n\n\nAccountsTypesService\n\nAccountsTypesService\n\nAccountsTypesModule -->\n\nAccountsTypesService->AccountsTypesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts-types/accounts-types.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsTypesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsTypesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsTypesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountsTypesService } from './services/accounts-types.service';\nimport { AccountsTypesController } from './accounts-types.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountsType } from './entities/accounts-type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountsType])],\n  exports: [TypeOrmModule, AccountsTypesService],\n  controllers: [AccountsTypesController],\n  providers: [AccountsTypesService],\n})\nexport class AccountsTypesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsTypesService.html":{"url":"injectables/AccountsTypesService.html","title":"injectable - AccountsTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsTypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/services/accounts-types.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByUserType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts-types/services/accounts-types.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typesRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-types/services/accounts-types.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-types/services/accounts-types.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByUserType\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByUserType(typeUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-types/services/accounts-types.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAccountsTypeDto } from '../dto/create-accounts-type.dto';\nimport { UpdateAccountsTypeDto } from '../dto/update-accounts-type.dto';\nimport { AccountsType } from '../entities/accounts-type.entity';\n\n@Injectable()\nexport class AccountsTypesService {\n  constructor(\n    @InjectRepository(AccountsType)\n    private typesRepository: Repository,\n  ) {}\n\n  async findAll() {\n    return await this.typesRepository.find();\n  }\n\n  async findOne(id: number) {\n    return await this.typesRepository.findOne(id);\n  }\n\n  async findOneByUserType(typeUser: string) {\n    return await this.typesRepository.findOne({\n      where: { userType: typeUser },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agent.html":{"url":"classes/Agent.html","title":"class - Agent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/entities/agent.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Agent {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAgentDto: CreateAgentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/agents/agents.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAgentDto\n                                    \n                                                CreateAgentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/agents/agents.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AgentsService } from './services/agents.service';\nimport { CreateAgentDto } from './dto/create-agent.dto';\nimport { UpdateAgentDto } from './dto/update-agent.dto';\n\n@ApiTags('agents')\n@Controller('agents')\nexport class AgentsController {\n  constructor(private readonly agentsService: AgentsService) {}\n\n  @Post()\n  create(@Body() createAgentDto: CreateAgentDto) {\n    return this.agentsService.create(createAgentDto);\n  }\n\n  @Get('/:page/:limit')\n  findAll(\n    @Param('limit') limit: number,\n    @Param('page') page: number,\n  ) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.agentsService.findAll(skip, take);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AgentsModule_imports\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsModule -->\n\nAccountsCredentialsModule->AgentsModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nAgentsModule -->\n\nAccountsModule->AgentsModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAgentsModule -->\n\nAccountsProfilesModule->AgentsModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAgentsModule -->\n\nAccountsTypesModule->AgentsModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAgentsModule -->\n\nCommonModule->AgentsModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentsService } from './services/agents.service';\nimport { AgentsController } from './agents.controller';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AccountsModule } from 'src/accounts/accounts.module';\nimport { AccountsCredentialsModule } from 'src/accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from 'src/accounts-profiles/accounts-profiles.module';\nimport { AccountsTypesModule } from 'src/accounts-types/accounts-types.module';\nimport { CommonModule } from 'src/common/common.module';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AccountsTypesModule,\n    CommonModule,\n  ],\n  controllers: [AgentsController],\n  providers: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/services/agents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, accountTypeService: AccountsTypesService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/agents/services/agents.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountTypeService\n                                                  \n                                                        \n                                                                        AccountsTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAgentDto: CreateAgentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/agents/services/agents.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAgentDto\n                                    \n                                                CreateAgentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(offset: number, take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/agents/services/agents.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AccountsCredential } from 'src/accounts-credentials/entities/accounts-credential.entity';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { AccountsTypesService } from 'src/accounts-types/services/accounts-types.service';\nimport { CreateAccountDto } from 'src/accounts/dto/create-account.dto';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { CommonService } from 'src/common/services/common.service';\nimport { CreateAgentDto } from '../dto/create-agent.dto';\nimport { UpdateAgentDto } from '../dto/update-agent.dto';\n\n@Injectable()\nexport class AgentsService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private accountTypeService: AccountsTypesService,\n    private commonService: CommonService,\n  ) {}\n  \n  async create(createAgentDto: CreateAgentDto) {\n    let accountType = await this.accountTypeService.findOneByUserType('Agent');\n    let userNew = new CreateAccountDto();\n\n    userNew.accountTypeId = accountType;\n    userNew.firstName = createAgentDto.firstName;\n    userNew.lastName = createAgentDto.lastName;\n    userNew.userName = createAgentDto.userName;\n    userNew.email = createAgentDto.email;\n\n    let userEntity = await this.accountService.create(userNew);\n    let credential = new AccountsCredential();\n\n    credential.account = userEntity;\n    credential.credential = createAgentDto.password;\n    credential.isActive = true;\n\n    let credentials = await this.credentialService.create(credential);\n\n    return userEntity;\n  }\n\n  async findAll(offset: number, take: number) {\n    let typeEntity = await this.accountTypeService.findOneByUserType('Agent');\n    let users = await this.accountService.findAll(offset, take, typeEntity);\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiKeyAuthGuard.html":{"url":"injectables/ApiKeyAuthGuard.html","title":"injectable - ApiKeyAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiKeyAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/apikey-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class ApiKeyAuthGuard extends AuthGuard('headerapikey') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiKeyStrategy.html":{"url":"injectables/ApiKeyStrategy.html","title":"injectable - ApiKeyStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiKeyStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/api-key.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/api-key.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(apiKey: string, done: (error: Error,undefined) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/api-key.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HeaderAPIKeyStrategy } from 'passport-headerapikey';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class ApiKeyStrategy extends PassportStrategy(HeaderAPIKeyStrategy) {\n    constructor(private authService: AuthService) {\n        super(\n            { header: 'HTTP-X-API-KEY', prefix: '' },true,\n            async (apikey, done, req) => {\n             return this.validate(apikey, done);\n          });\n    }\n    public async validate(apiKey: string, done: (error: Error, data) => {}) {\n        const check = await this.authService.validateApiKey(apiKey);\n        if (!check) {\n          return done( new UnauthorizedException(), null);\n          //throw new UnauthorizedException();\n        }\n        return done(null, apiKey);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountsCredentialsModule->AppModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAppModule -->\n\nAccountsProfilesModule->AppModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAppModule -->\n\nAccountsTypesModule->AppModule\n\n\n\n\n\nAgentsModule\n\nAgentsModule\n\nAppModule -->\n\nAgentsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCustomersModule\n\nCustomersModule\n\nAppModule -->\n\nCustomersModule->AppModule\n\n\n\n\n\nPackagesModule\n\nPackagesModule\n\nAppModule -->\n\nPackagesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            CustomersModule\n                        \n                        \n                            PackagesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthModule } from './auth/auth.module';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { CommonModule } from './common/common.module';\nimport { AccountsModule } from './accounts/accounts.module';\nimport { AccountsCredentialsModule } from './accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from './accounts-profiles/accounts-profiles.module';\nimport { AgentsModule } from './agents/agents.module';\nimport { UsersModule } from './users/users.module';\nimport { CustomersModule } from './customers/customers.module';\nimport { PackagesModule } from './packages/packages.module';\nimport { AccountsTypesModule } from './accounts-types/accounts-types.module';\n\n\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      url: process.env.PG_URI,\n      entities: [],\n      synchronize: true,\n      autoLoadEntities: true,\n    }),\n    CommonModule,\n    AccountsTypesModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AgentsModule,\n    UsersModule,\n    CustomersModule,\n    PackagesModule,\n    AuthModule,\n  ],\n  exports: [],\n  controllers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                authenticate\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateAccessToken})@ApiResponse({status: 200, type: AccessToken})@ApiUnauthorizedResponse()@UseGuards(LocalAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateAccessToken } from \"./dto/create-access-token.dto\";\nimport { Controller, Req, Res, Post, UseGuards, Get } from \"@nestjs/common\";\nimport { ApiTags, ApiBody, ApiResponse, ApiUnauthorizedResponse, ApiHeader, ApiSecurity } from \"@nestjs/swagger\";\nimport { AccessToken } from \"./dto/access-token.dto\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { LocalAuthGuard } from \"./guards/local-auth.guard\";\nimport { AuthService } from \"./services/auth.service\";\nimport { JwtAuthGuard } from \"./guards/jwt-auth.guard\";\nimport { ApiKeyAuthGuard } from \"./guards/apikey-auth.guard\";\n\n@ApiTags('auth')\n@Controller('authenticate')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  @ApiBody({ type: CreateAccessToken })\n  @ApiResponse({ status: 200, type: AccessToken })\n  @ApiUnauthorizedResponse()\n  //@ApiHeader({\n  //   name: 'HTTP-X-API-KEY',\n  //  description: 'Llave de servicio',\n  //})\n  @UseGuards(LocalAuthGuard)\n  //@ApiSecurity('api_key', ['api_key'])\n  //@UseGuards(ApiKeyAuthGuard)\n  @Post()\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  async authenticate(@Req() req) {\n    return this.authService.generateToken(req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccountsCredentialsModule->AuthModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nAuthModule -->\n\nAccountsModule->AuthModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nApiKeyStrategy\n\nApiKeyStrategy\n\nAuthModule -->\n\nApiKeyStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiKeyStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from './../common/common.module';\nimport { AccountsCredentialsModule } from './../accounts-credentials/accounts-credentials.module';\nimport { AccountsModule } from './../accounts/accounts.module';\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\nimport { AuthController } from './auth.controller';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { ApiKeyStrategy } from './strategies/api-key.strategy';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    CommonModule,\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: '1d',\n        audience: process.env.APP_URL,\n        issuer: process.env.APP_ISS,\n      },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, ApiKeyStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateApiKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, commonService: CommonService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateApiKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateApiKey(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { v4 as uuidv4 } from 'uuid';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { AccessToken } from '../dto/access-token.dto';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { CommonService } from 'src/common/services/common.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private commonService: CommonService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validate(\n    email: string,\n    password: string\n  ) {\n    const user = await this.accountService.findByEmail(email);\n    \n    let compare: string;\n    try {\n      console.log(user);\n      const secret = await this.credentialService.findByAccount(user);\n      console.log(secret);\n      compare = secret.credential;\n    } catch (error) {\n      compare = '';\n      console.log(error);;\n    }\n     console.log(compare);\n   \n   const statePassword = await this.commonService.VerifyPassword(\n      password,\n      compare,\n    );\n\n    if (user && statePassword) {\n      return user;\n    }\n    \n    return null;\n  }\n\n  async generateToken(user): Promise {\n    console.log(user)\n    const payload = { jwtid: uuidv4(), username: user.userName, sub: user.id };\n    return new AccessToken({\n      access_token: this.jwtService.sign(payload),\n    });\n  }\n\n  async validateApiKey(key: string): Promise {\n    return key === process.env.API_KEY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nCommonService \n\nCommonService \n\n\n\nCommonModule\n\nCommonModule\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './services/common.service';\n\n@Module({\n  exports: [CommonService],\n  providers: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                VerifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/common.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        VerifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifyPassword(password: string, compare: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/common.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    compare\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        saltRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/common/services/common.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class CommonService {\n  private readonly saltRounds = 10;\n\n  async VerifyPassword(password: string, compare: string): Promise {\n    return await bcrypt.compare(password, compare);\n  }\n\n  async hashPassword(password: string){\n    const salt = await  bcrypt.genSalt(this.saltRounds);\n    return await bcrypt.hash(password, salt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessToken.html":{"url":"classes/CreateAccessToken.html","title":"class - CreateAccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-access-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-access-token.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-access-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAccessToken {\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n  @IsNotEmpty()\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto.html":{"url":"classes/CreateAccountDto.html","title":"class - CreateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/create-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountTypeId\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountTypeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsTypeDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountsTypeDto } from \"src/accounts-types/dto/accounts-type.dto\";\n\nexport class CreateAccountDto {\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  accountTypeId: AccountsTypeDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountsCredentialDto.html":{"url":"classes/CreateAccountsCredentialDto.html","title":"class - CreateAccountsCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountsCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/dto/create-accounts-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                credential\n                            \n                            \n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/create-accounts-credential.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credential\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/create-accounts-credential.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/create-accounts-credential.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountDto } from \"src/accounts/dto/account.dto\";\nimport { Account } from \"src/accounts/entities/account.entity\";\n\nexport class CreateAccountsCredentialDto {\n  @ApiProperty()\n  credential: string;\n  @ApiProperty()\n  account: AccountDto;\n  @ApiProperty()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountsProfileDto.html":{"url":"classes/CreateAccountsProfileDto.html","title":"class - CreateAccountsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/dto/create-accounts-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                isActive\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/create-accounts-profile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/create-accounts-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/create-accounts-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountDto } from \"src/accounts/dto/account.dto\";\n\nexport class CreateAccountsProfileDto {\n  @ApiProperty()\n  profile: object;\n  @ApiProperty()\n  account: AccountDto;\n  @ApiProperty()\n  isActive: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountsTypeDto.html":{"url":"classes/CreateAccountsTypeDto.html","title":"class - CreateAccountsTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountsTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/dto/create-accounts-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/create-accounts-type.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/create-accounts-type.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateAccountsTypeDto {\n  @ApiProperty()\n  userType: string;\n  @ApiProperty()\n  isActive: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAgentDto.html":{"url":"classes/CreateAgentDto.html","title":"class - CreateAgentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAgentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/dto/create-agent.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateAgentDto {\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  telephone: string;\n\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/dto/create-customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyName\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateCustomerDto {\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  telephone: string;\n\n  @ApiProperty()\n  companyName: string;\n\n  @ApiProperty()\n  password: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePackageDto.html":{"url":"classes/CreatePackageDto.html","title":"class - CreatePackageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePackageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/dto/create-package.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                heigth\n                            \n                            \n                                large\n                            \n                            \n                                units\n                            \n                            \n                                volumen\n                            \n                            \n                                weigth\n                            \n                            \n                                width\n                            \n                            \n                                wightUnits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wightUnits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreatePackageDto {\n  @ApiProperty()\n  description: string;\n  @ApiProperty()\n  weigth: number;\n  @ApiProperty()\n  wightUnits: string;\n  @ApiProperty()\n  volumen: number;\n  @ApiProperty()\n  units: string;\n  @ApiProperty()\n  large: number;\n  @ApiProperty()\n  heigth: number;\n  @ApiProperty()\n  width: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePackageDto-1.html":{"url":"classes/CreatePackageDto-1.html","title":"class - CreatePackageDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePackageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/dto/package.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                heigth\n                            \n                            \n                                id\n                            \n                            \n                                large\n                            \n                            \n                                units\n                            \n                            \n                                updated\n                            \n                            \n                                volumen\n                            \n                            \n                                weigth\n                            \n                            \n                                width\n                            \n                            \n                                wightUnits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wightUnits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreatePackageDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  description: string;\n  @ApiProperty()\n  weigth: number;\n  @ApiProperty()\n  wightUnits: string;\n  @ApiProperty()\n  volumen: number;\n  @ApiProperty()\n  units: string;\n  @ApiProperty()\n  large: number;\n  @ApiProperty()\n  heigth: number;\n  @ApiProperty()\n  width: number;\n  @ApiProperty()\n  created!: Date;\n  @ApiProperty()\n  updated!: Date;\n  @ApiProperty()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customer.html":{"url":"classes/Customer.html","title":"class - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/entities/customer.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Customer {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomersController.html":{"url":"controllers/CustomersController.html","title":"controller - CustomersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/customers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCustomerDto: CreateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/customers/customers.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/customers/customers.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CustomersService } from './services/customers.service';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\n\n@ApiTags('customers')\n@Controller('customers')\nexport class CustomersController {\n  constructor(private readonly customersService: CustomersService) {}\n\n  @Post()\n  create(@Body() createCustomerDto: CreateCustomerDto) {\n    return this.customersService.create(createCustomerDto);\n  }\n  \n  @Get('/:page/:limit')\n  findAll(\n    @Param('limit') limit: number,\n    @Param('page') page: number,\n  ) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.customersService.findAll(skip, take);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomersModule.html":{"url":"modules/CustomersModule.html","title":"module - CustomersModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CustomersModule\n\n\n\ncluster_CustomersModule_providers\n\n\n\ncluster_CustomersModule_imports\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nCustomersModule\n\nCustomersModule\n\nCustomersModule -->\n\nAccountsCredentialsModule->CustomersModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nCustomersModule -->\n\nAccountsModule->CustomersModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nCustomersModule -->\n\nAccountsProfilesModule->CustomersModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nCustomersModule -->\n\nAccountsTypesModule->CustomersModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nCustomersModule -->\n\nCommonModule->CustomersModule\n\n\n\n\n\nCustomersService\n\nCustomersService\n\nCustomersModule -->\n\nCustomersService->CustomersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customers/customers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CustomersService } from './services/customers.service';\nimport { CustomersController } from './customers.controller';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AccountsModule } from 'src/accounts/accounts.module';\nimport { AccountsCredentialsModule } from 'src/accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from 'src/accounts-profiles/accounts-profiles.module';\nimport { AccountsTypesModule } from 'src/accounts-types/accounts-types.module';\nimport { CommonModule } from 'src/common/common.module';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AccountsTypesModule,\n    CommonModule,\n  ],\n  controllers: [CustomersController],\n  providers: [CustomersService],\n})\nexport class CustomersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomersService.html":{"url":"injectables/CustomersService.html","title":"injectable - CustomersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/services/customers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, accountTypeService: AccountsTypesService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/customers/services/customers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountTypeService\n                                                  \n                                                        \n                                                                        AccountsTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customers/services/customers.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(offset: number, take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/customers/services/customers.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AccountsCredential } from 'src/accounts-credentials/entities/accounts-credential.entity';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { AccountsTypesService } from 'src/accounts-types/services/accounts-types.service';\nimport { CreateAccountDto } from 'src/accounts/dto/create-account.dto';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { CommonService } from 'src/common/services/common.service';\nimport { CreateCustomerDto } from '../dto/create-customer.dto';\nimport { UpdateCustomerDto } from '../dto/update-customer.dto';\n\n@Injectable()\nexport class CustomersService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private accountTypeService: AccountsTypesService,\n    private commonService: CommonService,\n  ) {}\n\n  async create(createCustomerDto: CreateCustomerDto) {\n\n    let accountType = await this.accountTypeService.findOneByUserType('Client');\n    let userNew = new CreateAccountDto();\n\n    userNew.accountTypeId = accountType;\n    userNew.firstName = createCustomerDto.firstName;\n    userNew.lastName = createCustomerDto.lastName;\n    userNew.userName = createCustomerDto.userName;\n    userNew.email = createCustomerDto.email;\n\n    let userEntity = await this.accountService.create(userNew);\n    let credential = new AccountsCredential();\n\n    credential.account = userEntity;\n    credential.credential = createCustomerDto.password;\n    credential.isActive = true;\n\n    let credentials = await this.credentialService.create(credential);\n\n    return userEntity;\n  }\n\n  async findAll(offset: number, take: number) {\n    let typeEntity = await this.accountTypeService.findOneByUserType('Client');\n    let users = await this.accountService.findAll(offset, take, typeEntity);\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    });\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validate(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Package.html":{"url":"classes/Package.html","title":"class - Package","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Package\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/entities/package.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                heigth\n                            \n                            \n                                id\n                            \n                            \n                                large\n                            \n                            \n                                units\n                            \n                            \n                                updated\n                            \n                            \n                                volumen\n                            \n                            \n                                weigth\n                            \n                            \n                                width\n                            \n                            \n                                wightUnits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wightUnits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne, CreateDateColumn, UpdateDateColumn, DeleteDateColumn } from 'typeorm';\n\n@Entity()\nexport class Package {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 45 })\n  description: string;\n\n  @Column()\n  weigth: number;\n\n  @Column()\n  wightUnits: string;\n\n  @Column()\n  volumen: number;\n\n  @Column({ length: 25 })\n  units: string;\n\n  @Column()\n  large: number;\n\n  @Column()\n  heigth: number;\n\n  @Column()\n  width: number;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PackagesController.html":{"url":"controllers/PackagesController.html","title":"controller - PackagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PackagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/packages.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                packages\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPackageDto: CreatePackageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPackageDto\n                                    \n                                                CreatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePackageDto: UpdatePackageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePackageDto\n                                    \n                                                UpdatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { PackagesService } from './services/packages.service';\nimport { CreatePackageDto } from './dto/create-package.dto';\nimport { UpdatePackageDto } from './dto/update-package.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('packages')\n@Controller('packages')\nexport class PackagesController {\n  constructor(private readonly packagesService: PackagesService) {}\n\n  @Post()\n  create(@Body() createPackageDto: CreatePackageDto) {\n    return this.packagesService.create(createPackageDto);\n  }\n\n  @Get('/:page/:limit')\n  async findAll(@Param('limit') limit: number, @Param('page') page: number) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.packagesService.findAll(skip, take);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.packagesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePackageDto: UpdatePackageDto) {\n    return this.packagesService.update(+id, updatePackageDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.packagesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PackagesModule.html":{"url":"modules/PackagesModule.html","title":"module - PackagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PackagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PackagesModule\n\n\n\ncluster_PackagesModule_providers\n\n\n\ncluster_PackagesModule_exports\n\n\n\n\nPackagesService \n\nPackagesService \n\n\n\nPackagesModule\n\nPackagesModule\n\nPackagesService  -->\n\nPackagesModule->PackagesService \n\n\n\n\n\nPackagesService\n\nPackagesService\n\nPackagesModule -->\n\nPackagesService->PackagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/packages/packages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PackagesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PackagesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PackagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PackagesService } from './services/packages.service';\nimport { PackagesController } from './packages.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Package } from './entities/package.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Package])],\n  exports: [TypeOrmModule, PackagesService],\n  controllers: [PackagesController],\n  providers: [PackagesService],\n})\nexport class PackagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PackagesService.html":{"url":"injectables/PackagesService.html","title":"injectable - PackagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PackagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/services/packages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(packageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/packages/services/packages.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        packageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPackageDto: CreatePackageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPackageDto\n                                    \n                                                CreatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limitSkip: number, limitTake: number)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitSkip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limitTake\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatePackageDto: UpdatePackageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePackageDto\n                                    \n                                                UpdatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreatePackageDto } from '../dto/create-package.dto';\nimport { UpdatePackageDto } from '../dto/update-package.dto';\nimport { Package } from '../entities/package.entity';\n\n@Injectable()\nexport class PackagesService {\n  constructor(\n    @InjectRepository(Package)\n    private packageRepository: Repository,\n  ) {}\n\n  async create(createPackageDto: CreatePackageDto) {\n    return await this.packageRepository.save(createPackageDto);\n  }\n\n  async findAll(limitSkip: number, limitTake: number) {\n    return await this.packageRepository.find({\n      order: {\n        id: 'DESC',\n      },\n      skip: limitSkip,\n      take: limitTake,\n    });\n  }\n\n  async findOne(id: number) {\n    return await this.packageRepository.findOne(id);\n  }\n\n  async update(id: number, updatePackageDto: UpdatePackageDto) {\n    return await this.packageRepository.update(id, updatePackageDto);\n  }\n\n  async remove(id: number) {\n    return await this.packageRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountDto.html":{"url":"classes/UpdateAccountDto.html","title":"class - UpdateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/update-account.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountDto } from './create-account.dto';\n\nexport class UpdateAccountDto extends PartialType(CreateAccountDto) {\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountsCredentialDto.html":{"url":"classes/UpdateAccountsCredentialDto.html","title":"class - UpdateAccountsCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountsCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/dto/update-accounts-credential.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountsCredentialDto } from './create-accounts-credential.dto';\n\nexport class UpdateAccountsCredentialDto extends PartialType(CreateAccountsCredentialDto) {\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountsProfileDto.html":{"url":"classes/UpdateAccountsProfileDto.html","title":"class - UpdateAccountsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/dto/update-accounts-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountsProfileDto } from './create-accounts-profile.dto';\n\nexport class UpdateAccountsProfileDto extends PartialType(CreateAccountsProfileDto) {\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountsTypeDto.html":{"url":"classes/UpdateAccountsTypeDto.html","title":"class - UpdateAccountsTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountsTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/dto/update-accounts-type.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountsTypeDto } from './create-accounts-type.dto';\n\nexport class UpdateAccountsTypeDto extends PartialType(CreateAccountsTypeDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAgentDto.html":{"url":"classes/UpdateAgentDto.html","title":"class - UpdateAgentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAgentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/dto/update-agent.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAgentDto } from './create-agent.dto';\n\nexport class UpdateAgentDto extends PartialType(CreateAgentDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/dto/update-customer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCustomerDto } from './create-customer.dto';\n\nexport class UpdateCustomerDto extends PartialType(CreateCustomerDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePackageDto.html":{"url":"classes/UpdatePackageDto.html","title":"class - UpdatePackageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePackageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/dto/update-package.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePackageDto } from './create-package.dto';\n\nexport class UpdatePackageDto extends PartialType(CreatePackageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UserDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res } from '@nestjs/common';\nimport { UsersService } from './services/users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get('/:page/:limit')\n  async findAll(\n    @Param('limit') limit: number,\n    @Param('page') page: number,\n  ) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.usersService.findAll(skip, take);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAccountsCredentialsModule->UsersModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nUsersModule -->\n\nAccountsModule->UsersModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nUsersModule -->\n\nAccountsProfilesModule->UsersModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nUsersModule -->\n\nAccountsTypesModule->UsersModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AccountsCredentialsModule } from 'src/accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from 'src/accounts-profiles/accounts-profiles.module';\nimport { AccountsTypesModule } from 'src/accounts-types/accounts-types.module';\nimport { AccountsModule } from 'src/accounts/accounts.module';\nimport { CommonModule } from 'src/common/common.module';\nimport { UsersService } from './services/users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AccountsTypesModule,\n    CommonModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, accountTypeService: AccountsTypesService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountTypeService\n                                                  \n                                                        \n                                                                        AccountsTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(offset: number, take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateAccountDto } from './../../accounts/dto/create-account.dto';\nimport { Account } from './../../accounts/entities/account.entity';\nimport { Injectable } from '@nestjs/common';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { AccountsTypesService } from 'src/accounts-types/services/accounts-types.service';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { CommonService } from 'src/common/services/common.service';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { AccountsCredential } from 'src/accounts-credentials/entities/accounts-credential.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private accountTypeService: AccountsTypesService,\n    private commonService: CommonService,\n  ) {}\n\n  async create(createUserDto: CreateUserDto) {\n\n    let accountType = await this.accountTypeService.findOneByUserType('User');\n    let userNew = new CreateAccountDto(); \n\n    userNew.accountTypeId = accountType; \n    userNew.firstName = createUserDto.firstName;\n    userNew.lastName = createUserDto.lastName;\n    userNew.userName = createUserDto.userName;\n    userNew.email = createUserDto.email;\n \n    let userEntity = await this.accountService.create(userNew);\n    let credential = new AccountsCredential();\n\n    credential.account = userEntity;\n    credential.credential = createUserDto.password;\n    credential.isActive = true;\n\n    let credentials = await this.credentialService.create(credential);\n\n    return userEntity;\n  }\n\n  async findAll(offset: number, take: number) {\n\n    let typeEntity = await this.accountTypeService.findOneByUserType('User');\n    let users = await this.accountService.findAll( offset,take, typeEntity);\n    return users; \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config/application.properties.settings.ts\n            \n            variable\n            ApplicationConfigs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/enviroment.properties.setting.ts\n            \n            variable\n            ConfigDefaultModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/openapi.properties.setting.ts\n            \n            variable\n            OPENAPI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-credentials/accounts-credentials.controller.ts\n            \n            controller\n            AccountsCredentialsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/accounts-credentials/dto/accounts-credential.dto.ts\n            \n            class\n            AccountsCredentialDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/accounts-credentials/dto/create-accounts-credential.dto.ts\n            \n            class\n            CreateAccountsCredentialDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts-credentials/dto/update-accounts-credential.dto.ts\n            \n            class\n            UpdateAccountsCredentialDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-credentials/entities/accounts-credential.entity.ts\n            \n            class\n            AccountsCredential\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/accounts-credentials/services/accounts-credentials.service.ts\n            \n            injectable\n            AccountsCredentialsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/accounts-profiles/accounts-profiles.controller.ts\n            \n            controller\n            AccountsProfilesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts-profiles/dto/accounts-profile.dto.ts\n            \n            class\n            AccountsProfileDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/accounts-profiles/dto/create-accounts-profile.dto.ts\n            \n            class\n            CreateAccountsProfileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts-profiles/dto/update-accounts-profile.dto.ts\n            \n            class\n            UpdateAccountsProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-profiles/entities/accounts-profile.entity.ts\n            \n            class\n            AccountsProfile\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/accounts-profiles/services/accounts-profiles.service.ts\n            \n            injectable\n            AccountsProfilesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/accounts-types/accounts-types.controller.ts\n            \n            controller\n            AccountsTypesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/accounts-types/dto/accounts-type.dto.ts\n            \n            class\n            AccountsTypeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/accounts-types/dto/create-accounts-type.dto.ts\n            \n            class\n            CreateAccountsTypeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/accounts-types/dto/update-accounts-type.dto.ts\n            \n            class\n            UpdateAccountsTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-types/entities/accounts-type.entity.ts\n            \n            class\n            AccountsType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/accounts-types/services/accounts-types.service.ts\n            \n            injectable\n            AccountsTypesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/accounts/accounts.controller.ts\n            \n            controller\n            AccountsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts/dto/account.dto.ts\n            \n            class\n            AccountDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/accounts/dto/create-account.dto.ts\n            \n            class\n            CreateAccountDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/accounts/dto/update-account.dto.ts\n            \n            class\n            UpdateAccountDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts/entities/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/accounts/services/accounts.service.ts\n            \n            injectable\n            AccountsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/agents/agents.controller.ts\n            \n            controller\n            AgentsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/agents/dto/create-agent.dto.ts\n            \n            class\n            CreateAgentDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/agents/dto/update-agent.dto.ts\n            \n            class\n            UpdateAgentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/agents/entities/agent.entity.ts\n            \n            class\n            Agent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/agents/services/agents.service.ts\n            \n            injectable\n            AgentsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/access-token.dto.ts\n            \n            class\n            AccessToken\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-access-token.dto.ts\n            \n            class\n            CreateAccessToken\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/apikey-auth.guard.ts\n            \n            injectable\n            ApiKeyAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/strategies/api-key.strategy.ts\n            \n            injectable\n            ApiKeyStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/customers/customers.controller.ts\n            \n            controller\n            CustomersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/customers/dto/create-customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/customers/dto/update-customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customers/entities/customer.entity.ts\n            \n            class\n            Customer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customers/services/customers.service.ts\n            \n            injectable\n            CustomersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/packages/dto/create-package.dto.ts\n            \n            class\n            CreatePackageDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/packages/dto/package.dto.ts\n            \n            class\n            CreatePackageDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/packages/dto/update-package.dto.ts\n            \n            class\n            UpdatePackageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/packages/entities/package.entity.ts\n            \n            class\n            Package\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/packages/packages.controller.ts\n            \n            controller\n            PackagesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/packages/services/packages.service.ts\n            \n            injectable\n            PackagesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mikro-orm/core : ^4.5.6\n        \n            @mikro-orm/postgresql : ^4.5.6\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.0\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-validator : ^0.13.1\n        \n            passport : ^0.4.1\n        \n            passport-headerapikey : ^1.2.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.6.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRunning the app docker-compose\n# development\n$ docker-compose up\n\n# rebuild images mode\n$ docker-compose up --build\nTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covEnviroment\ncreate file .env.development\nPG_URI= postgres://user:password@localhost:5432/db\nJWT_SECRET=b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79\nAPI_KEY=EAB0A38835EBA59230EF98D8879DC2C198DF96AF\nAPP_URL=https://app.parking.com\nAPP_ISS= tracking\nPREFIX= api\nVERSION= v1\nENV= developmentSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountsCredentialsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsProfilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsTypesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PackagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsCredentialsModule\n\n\n\ncluster_AccountsCredentialsModule_imports\n\n\n\ncluster_AccountsCredentialsModule_exports\n\n\n\ncluster_AccountsCredentialsModule_providers\n\n\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_exports\n\n\n\ncluster_AccountsModule_providers\n\n\n\ncluster_AccountsProfilesModule\n\n\n\ncluster_AccountsProfilesModule_exports\n\n\n\ncluster_AccountsProfilesModule_providers\n\n\n\ncluster_AccountsTypesModule\n\n\n\ncluster_AccountsTypesModule_exports\n\n\n\ncluster_AccountsTypesModule_providers\n\n\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CustomersModule\n\n\n\ncluster_CustomersModule_providers\n\n\n\ncluster_PackagesModule\n\n\n\ncluster_PackagesModule_exports\n\n\n\ncluster_PackagesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule -->\n\nCommonModule->AccountsCredentialsModule\n\n\n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsModule -->\n\nCommonModule->AgentsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCustomersModule\n\nCustomersModule\n\nCustomersModule -->\n\nCommonModule->CustomersModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nAccountsCredentialsService \n\nAccountsCredentialsService \n\nAccountsCredentialsService  -->\n\nAccountsCredentialsModule->AccountsCredentialsService \n\n\n\nAgentsModule -->\n\nAccountsCredentialsModule->AgentsModule\n\n\n\nAuthModule -->\n\nAccountsCredentialsModule->AuthModule\n\n\n\nCustomersModule -->\n\nAccountsCredentialsModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsCredentialsModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsCredentialsModule->AppModule\n\n\n\n\n\nAccountsCredentialsService\n\nAccountsCredentialsService\n\nAccountsCredentialsModule -->\n\nAccountsCredentialsService->AccountsCredentialsModule\n\n\n\n\n\nAccountsService \n\nAccountsService \n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsService  -->\n\nAccountsModule->AccountsService \n\n\n\nAgentsModule -->\n\nAccountsModule->AgentsModule\n\n\n\nAuthModule -->\n\nAccountsModule->AuthModule\n\n\n\nCustomersModule -->\n\nAccountsModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAccountsService\n\nAccountsService\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\nAccountsProfilesService \n\nAccountsProfilesService \n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAccountsProfilesService  -->\n\nAccountsProfilesModule->AccountsProfilesService \n\n\n\nAgentsModule -->\n\nAccountsProfilesModule->AgentsModule\n\n\n\nCustomersModule -->\n\nAccountsProfilesModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsProfilesModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsProfilesModule->AppModule\n\n\n\n\n\nAccountsProfilesService\n\nAccountsProfilesService\n\nAccountsProfilesModule -->\n\nAccountsProfilesService->AccountsProfilesModule\n\n\n\n\n\nAccountsTypesService \n\nAccountsTypesService \n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAccountsTypesService  -->\n\nAccountsTypesModule->AccountsTypesService \n\n\n\nAgentsModule -->\n\nAccountsTypesModule->AgentsModule\n\n\n\nCustomersModule -->\n\nAccountsTypesModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsTypesModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsTypesModule->AppModule\n\n\n\n\n\nAccountsTypesService\n\nAccountsTypesService\n\nAccountsTypesModule -->\n\nAccountsTypesService->AccountsTypesModule\n\n\n\nAppModule -->\n\nAgentsModule->AppModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nCustomersModule->AppModule\n\n\n\n\n\nPackagesModule\n\nPackagesModule\n\nAppModule -->\n\nPackagesModule->AppModule\n\n\n\n\n\nPackagesService \n\nPackagesService \n\nPackagesService  -->\n\nPackagesModule->PackagesService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nApiKeyStrategy\n\nApiKeyStrategy\n\nAuthModule -->\n\nApiKeyStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nCustomersService\n\nCustomersService\n\nCustomersModule -->\n\nCustomersService->CustomersModule\n\n\n\n\n\nPackagesService\n\nPackagesService\n\nPackagesModule -->\n\nPackagesService->PackagesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationConfigs   (config/.../application.properties.settings.ts)\n                        \n                        \n                            ConfigDefaultModule   (config/.../enviroment.properties.setting.ts)\n                        \n                        \n                            OPENAPI   (config/.../openapi.properties.setting.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/application.properties.settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApplicationConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  router: `${process.env.PREFIX}/${process.env.VERSION}`,\n}\n                    \n                \n\n\n        \n    \n\n    config/enviroment.properties.setting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaultModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ConfigModule.forRoot({\n  envFilePath: `.env.${process.env.NODE_ENV || 'development'}`,\n  isGlobal: true,\n})\n                    \n                \n\n\n        \n    \n\n    config/openapi.properties.setting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OPENAPI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: \"api.tracking.services\",\n  description: \"catalog of tracking services\" ,\n  version: \"1.0.0\"\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
