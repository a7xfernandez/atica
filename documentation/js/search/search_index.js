var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.236,1,2.667]],["body/classes/AccessToken.html",[0,0.373,1,4.212,2,1.005,3,0.128,4,0.11,5,0.093,6,6.021,7,3.871,8,0.605,9,1.894,10,6.021,11,2.007,12,6.286,13,7.525,14,0.875,15,6.286,16,1.486,17,0.014,18,1.486,19,0.771,20,1.042,21,1.427,22,1.119,23,2.603,24,0.234,25,3.871,26,4.292,27,3.556,28,0.97,29,0.128,30,4.932,31,0.008,32,0.01,33,0.008]],["title/classes/Account.html",[0,0.236,34,1.687]],["body/classes/Account.html",[0,0.274,2,0.641,3,0.082,4,0.07,5,0.059,8,0.739,9,1.391,14,1.01,17,0.014,19,0.889,20,0.976,21,1.613,22,1.646,24,0.204,25,3.623,27,2.269,29,0.082,31,0.005,32,0.008,33,0.005,34,1.957,35,2.738,36,3.781,37,2.766,38,2.766,39,2.64,40,3.233,41,1.771,42,3.233,43,2.766,44,2.766,45,3.562,46,3.146,47,1.861,48,3.146,49,3.392,50,3.664,51,3.146,52,3.664,53,3.146,54,3.146,55,5.578,56,4.018,57,2.131,58,6.185,59,5.124,60,3.146,61,4.018,62,3.146,63,1.25,64,3.664,65,3.146,66,3.146,67,3.664,68,3.146,69,3.146,70,3.146,71,0.689,72,2.269,73,2.269,74,3.093,75,4.298,76,3.329,77,1.519,78,4.728,79,3.146]],["title/classes/AccountDto.html",[0,0.236,80,1.922]],["body/classes/AccountDto.html",[0,0.227,2,0.781,3,0.1,4,0.086,5,0.072,8,0.47,9,1.601,14,1.058,17,0.014,19,0.932,20,1.123,21,1.698,22,1.625,23,2.971,24,0.198,28,0.753,29,0.1,31,0.006,32,0.009,33,0.006,36,3.828,37,3.085,38,3.085,39,2.944,40,3.606,41,1.975,42,3.606,43,3.085,44,3.085,49,3.621,63,1.439,80,2.565,81,3.333,82,3.828,83,3.83,84,3.83,85,3.83,86,3.83,87,3.83,88,3.83,89,3.83,90,3.83,91,3.83,92,1.287,93,2.762,94,2.566]],["title/controllers/AccountsController.html",[95,1.388,96,2.87]],["body/controllers/AccountsController.html",[0,0.176,3,0.077,4,0.066,5,0.056,8,0.364,14,0.736,16,1.592,17,0.014,18,1.592,19,0.892,20,1.116,21,1.621,22,1.199,24,0.266,28,0.583,29,0.077,31,0.005,32,0.007,33,0.005,34,1.258,41,2.126,80,2.551,92,0.997,95,1.035,96,3.188,97,0.997,98,2.583,99,1.433,100,1.381,101,2.349,102,2.474,103,2.775,104,1.577,105,2.967,106,3.488,107,2.783,108,3.673,109,2.329,110,2.967,111,1.65,112,1.66,113,1.66,114,3.702,115,2.329,116,2.967,117,1.863,118,4.785,119,1.66,120,2.967,121,2.967,122,2.967,123,2.14,124,1.577,125,2.474,126,1.66,127,1.66,128,1.66,129,1.577,130,0.542,131,3.276,132,2.807,133,3.111,134,1.577,135,3.111,136,2.673,137,2.583,138,1.577,139,1.116,140,2.775,141,1.161,142,1.37,143,1.501,144,1.577,145,2.967,146,1.988,147,2.14,148,2.14,149,2.14,150,1.577,151,1.577,152,2.807,153,2.956,154,3.124,155,2.14,156,2.14,157,1.65,158,2.967,159,2.329,160,2.583,161,2.967,162,2.14,163,2.14,164,2.967]],["title/classes/AccountsCredential.html",[0,0.236,165,2.227]],["body/classes/AccountsCredential.html",[0,0.215,2,0.738,3,0.094,4,0.081,5,0.068,8,0.726,9,1.539,14,1.006,17,0.014,19,0.886,20,1.079,21,1.159,22,1.64,24,0.19,29,0.094,31,0.006,32,0.008,33,0.006,34,3.128,37,2.993,38,2.993,41,1.916,43,2.993,47,2.14,49,3.557,50,3.964,52,3.964,57,2.357,63,1.383,64,3.964,67,3.964,71,1.616,74,3.422,75,4.306,76,3.682,77,1.748,165,2.857,166,4.945,167,3.15,168,3.713,169,2.856,170,3.62,171,3.62,172,3.62,173,3.62,174,3.62,175,3.62,176,4.008,177,2.841,178,3.62,179,3.62,180,3.15,181,3.62,182,2.425]],["title/classes/AccountsCredentialDto.html",[0,0.236,183,2.87]],["body/classes/AccountsCredentialDto.html",[0,0.244,2,0.837,3,0.107,4,0.092,5,0.077,8,0.504,9,1.679,14,1.018,17,0.014,19,0.897,20,1.178,22,1.435,23,2.813,24,0.235,28,0.807,29,0.107,31,0.007,32,0.009,33,0.007,34,2.875,37,3.2,38,3.2,41,2.049,43,3.2,49,3.699,63,1.509,71,1.638,80,3.053,123,2.961,169,3.053,176,4.373,183,4.018,184,6.509,185,2.961,186,3.574,187,4.106,188,4.106,189,3.574,190,4.106,191,4.106,192,2.578]],["title/controllers/AccountsCredentialsController.html",[95,1.388,193,2.87]],["body/controllers/AccountsCredentialsController.html",[0,0.196,3,0.086,4,0.074,5,0.062,8,0.405,11,1.345,14,0.666,16,1.442,17,0.014,18,1.442,19,0.863,20,1.011,21,1.276,22,1.086,24,0.268,28,0.65,29,0.086,31,0.005,32,0.008,33,0.005,41,1.55,71,1.232,92,1.89,95,1.152,97,1.11,99,1.595,100,1.494,102,2.677,106,3.275,107,2.613,108,3.449,111,1.494,112,1.849,113,1.849,114,3.325,115,2.593,119,1.849,124,2.542,125,1.849,126,1.849,127,1.849,128,1.849,129,1.756,130,0.604,131,3.147,132,2.542,133,2.988,134,1.756,135,2.988,139,1.243,141,1.292,142,1.525,143,1.672,144,1.756,146,2.214,147,2.383,148,2.383,149,2.383,151,1.756,152,2.542,153,2.677,154,2.829,157,1.494,162,2.383,163,2.383,183,4.055,193,3.45,194,3.147,195,2.876,196,4.055,197,1.608,198,2.876,199,4.415,200,3.304,201,2.383,202,3.304,203,3.304,204,2.845,205,2.074,206,2.074,207,4.414,208,2.214,209,2.593,210,1.525,211,2.214,212,3.304,213,3.304]],["title/modules/AccountsCredentialsModule.html",[214,1.243,215,2.115]],["body/modules/AccountsCredentialsModule.html",[0,0.257,3,0.113,4,0.097,5,0.082,17,0.014,24,0.276,29,0.113,31,0.007,32,0.01,33,0.007,71,0.949,92,1.456,97,1.942,130,0.792,165,2.425,193,4.687,194,2.425,204,4.046,205,2.72,206,2.72,214,1.805,215,4.144,216,1.837,217,2.45,218,3.772,219,3.772,220,3.772,221,3.772,222,3.758,223,2.667,224,2.001,225,2.001,226,4.334,227,2.923,228,2.923,229,3.417,230,2.72,231,2.904,232,4.334,233,3.627,234,2.001,235,3.125,236,4.334]],["title/injectables/AccountsCredentialsService.html",[204,2.014,237,0.841]],["body/injectables/AccountsCredentialsService.html",[0,0.179,3,0.079,4,0.068,5,0.057,8,0.37,11,1.822,14,0.878,16,1.9,17,0.014,18,1.9,19,0.724,20,1.332,24,0.254,29,0.079,31,0.005,32,0.007,33,0.005,34,1.279,41,1.912,57,2.066,63,1.789,71,1.446,77,1.457,92,1.504,100,1.398,101,2.378,102,2.505,104,2.378,111,1.844,112,2.505,130,0.551,139,1.135,141,1.18,157,1.844,165,1.688,168,3.349,169,2.161,197,1.504,198,3.896,199,4.145,204,2.264,207,3.513,208,2.022,210,2.066,230,1.894,231,2.022,234,1.393,237,0.946,238,1.135,239,4.145,240,2.626,241,2.932,242,4.476,243,3.017,244,3.341,245,5.336,246,3.705,247,3.017,248,3.017,249,2.403,250,4.476,251,3.017,252,2.647,253,3.017,254,3.017,255,2.022,256,2.022,257,3.017,258,4.476,259,2.91,260,3.017,261,3.017,262,4.476,263,3.017,264,3.017]],["title/modules/AccountsModule.html",[214,1.243,265,2.115]],["body/modules/AccountsModule.html",[0,0.276,3,0.121,4,0.104,5,0.088,17,0.014,24,0.275,29,0.121,31,0.008,32,0.01,33,0.008,34,1.974,96,4.855,97,2.035,130,0.851,136,4.09,137,4.052,214,1.892,216,1.974,217,2.568,223,2.796,224,2.15,225,2.15,227,3.065,228,2.356,229,3.582,233,3.802,234,2.15,265,4.099,266,4.052,267,4.052,268,4.052,269,4.656,270,4.052,271,4.656,272,4.656]],["title/classes/AccountsProfile.html",[0,0.236,273,2.667]],["body/classes/AccountsProfile.html",[0,0.211,2,0.725,3,0.093,4,0.08,5,0.067,8,0.619,9,1.52,14,1.001,17,0.014,19,0.901,20,1.066,21,1.145,22,1.632,24,0.188,29,0.093,31,0.006,32,0.008,33,0.006,34,3.048,37,2.965,38,2.965,41,1.898,43,2.965,49,3.537,50,3.927,52,3.927,57,2.329,58,4.39,59,3.637,63,1.366,64,3.927,67,3.927,71,1.609,74,3.38,75,3.927,76,2.565,77,1.718,123,2.565,169,2.83,177,2.792,182,2.384,273,3.38,274,6.393,275,3.096,276,4.6,277,3.558,278,3.558,279,3.558,280,3.558,281,3.558,282,3.558,283,3.637,284,3.558,285,5.044,286,3.558,287,3.558,288,5.044,289,5.044]],["title/classes/AccountsProfileDto.html",[0,0.236,290,2.87]],["body/classes/AccountsProfileDto.html",[0,0.236,2,0.811,3,0.103,4,0.089,5,0.075,8,0.488,9,1.643,14,1.032,17,0.013,19,0.91,20,1.152,21,1.237,22,1.519,23,2.882,24,0.203,28,0.782,29,0.103,31,0.007,32,0.009,33,0.007,34,2.637,37,3.147,38,3.147,41,2.015,43,3.147,49,3.663,63,1.476,71,1.654,80,3.003,169,3.003,276,4.882,283,3.93,290,3.93,291,6.572,292,2.867,293,3.46,294,3.976,295,3.976,296,3.46,297,3.976,298,3.46,299,3.976,300,3.976]],["title/controllers/AccountsProfilesController.html",[95,1.388,301,2.87]],["body/controllers/AccountsProfilesController.html",[0,0.171,3,0.075,4,0.064,5,0.054,8,0.353,11,1.172,14,0.722,16,1.564,17,0.014,18,1.564,19,0.885,20,1.096,21,1.607,22,1.178,24,0.258,28,0.566,29,0.075,31,0.005,32,0.007,33,0.005,41,2.102,71,1.263,92,1.743,95,1.004,97,0.967,99,1.39,100,1.35,101,2.296,102,2.418,103,3.257,104,1.529,106,3.448,107,2.752,108,3.632,109,2.259,111,1.621,112,1.611,113,2.418,114,3.655,115,2.259,117,1.807,119,1.611,124,1.529,125,2.418,126,1.611,127,1.611,128,1.611,129,1.529,130,0.526,131,3.227,132,2.296,133,3.064,134,1.529,135,3.064,139,1.083,141,1.126,142,1.329,143,1.456,144,1.529,146,1.929,147,2.076,148,2.076,149,2.076,151,1.529,152,2.757,153,2.903,154,3.068,155,2.076,156,2.076,157,1.621,159,2.259,162,2.076,163,2.076,205,1.807,209,2.259,210,1.329,290,3.741,301,3.116,302,3.41,303,2.505,304,5.188,305,2.879,306,2.879,307,4.746,308,2.879,309,2.879,310,2.879,311,4.072,312,3.257,313,2.505,314,1.807,315,2.879,316,2.879,317,2.879,318,2.879]],["title/modules/AccountsProfilesModule.html",[214,1.243,319,2.227]],["body/modules/AccountsProfilesModule.html",[0,0.271,3,0.119,4,0.102,5,0.086,17,0.014,24,0.274,29,0.119,31,0.008,32,0.01,33,0.008,71,1.001,92,1.536,97,2.011,130,0.835,205,2.869,214,1.87,216,1.938,217,2.537,223,2.763,224,2.11,225,2.11,227,3.028,228,2.313,229,3.539,230,2.869,233,3.757,234,2.11,273,3.063,301,4.811,302,2.703,312,5.061,313,3.978,319,4.298,320,3.978,321,3.978,322,3.978,323,4.571,324,4.571,325,3.978,326,4.571]],["title/injectables/AccountsProfilesService.html",[237,0.841,312,2.498]],["body/injectables/AccountsProfilesService.html",[0,0.204,3,0.089,4,0.077,5,0.065,8,0.421,11,2.001,14,0.873,16,1.89,17,0.014,18,1.89,19,0.769,20,1.326,24,0.257,29,0.089,31,0.006,32,0.008,33,0.006,41,2.032,57,1.584,63,2.007,71,1.454,77,1.657,92,1.652,100,1.536,101,2.612,102,2.751,103,3.085,104,2.612,111,1.794,112,2.751,117,3.085,130,0.627,139,1.291,141,1.342,157,1.794,169,1.657,210,1.584,230,2.154,234,1.584,237,1.039,238,1.291,241,2.898,246,3.937,249,2.338,255,2.299,259,2.652,273,2.299,307,4.876,311,3.858,312,3.085,314,2.154,325,2.986,327,5.778,328,2.986,329,3.431,330,3.431,331,4.916,332,3.431,333,3.431,334,3.431,335,3.431,336,3.431,337,3.431,338,3.431,339,3.431]],["title/injectables/AccountsService.html",[136,2.014,237,0.841]],["body/injectables/AccountsService.html",[0,0.157,3,0.069,4,0.059,5,0.05,8,0.325,11,1.653,14,0.911,16,1.972,17,0.014,18,1.972,19,0.803,20,1.383,21,1.12,24,0.244,29,0.069,31,0.004,32,0.007,33,0.004,34,1.125,36,3.742,39,2.383,41,1.792,45,3.271,63,2.039,71,0.581,72,1.913,73,1.913,77,1.281,100,1.269,101,2.158,102,2.273,103,2.55,104,2.158,111,1.965,112,2.273,117,2.55,118,4.524,130,0.485,136,2.055,138,3.168,139,0.998,140,2.55,141,1.038,157,1.965,197,1.365,210,1.225,234,1.225,237,0.858,238,0.998,241,3.01,246,3.472,249,2.56,252,2.402,255,1.778,259,3.022,270,2.309,340,2.309,341,2.383,342,4.062,343,2.653,344,2.653,345,4.062,346,4.062,347,2.653,348,2.309,349,4.814,350,2.653,351,4.296,352,4.062,353,2.653,354,2.653,355,2.653,356,2.653,357,2.653,358,2.653,359,2.653,360,2.653,361,2.309,362,2.653,363,2.653,364,2.309,365,2.309,366,1.665,367,1.41,368,2.653,369,2.653,370,2.653,371,2.653]],["title/classes/AccountsType.html",[0,0.236,45,2.354]],["body/classes/AccountsType.html",[0,0.227,2,0.781,3,0.1,4,0.086,5,0.072,8,0.748,9,1.601,14,0.997,17,0.014,19,0.878,20,1.123,21,1.495,22,1.625,24,0.143,29,0.1,31,0.006,32,0.009,33,0.006,37,3.085,38,3.085,41,1.975,43,3.085,45,3.141,49,3.621,50,4.087,52,4.087,55,4.169,56,3.333,57,2.815,63,1.439,64,4.087,67,4.087,71,1.608,72,5.293,74,3.56,75,4.087,77,1.849,78,3.006,169,2.944,177,3.006,182,2.566,372,3.333,373,4.397,374,3.83,375,3.83,376,3.83,377,3.83,378,3.83,379,3.83,380,3.83,381,3.83]],["title/classes/AccountsTypeDto.html",[0,0.236,82,2.498]],["body/classes/AccountsTypeDto.html",[0,0.252,2,0.866,3,0.11,4,0.095,5,0.08,8,0.521,9,1.717,14,1.028,17,0.013,19,0.906,20,1.204,21,1.56,22,1.46,23,2.838,24,0.158,28,0.835,29,0.11,31,0.007,32,0.009,33,0.007,37,3.254,38,3.254,41,2.084,43,3.254,49,3.735,63,1.543,71,1.652,82,3.577,93,5.439,169,3.106,373,4.638,382,3.061,383,4.246,384,4.246,385,3.695,386,4.246,387,4.246,388,3.695]],["title/controllers/AccountsTypesController.html",[95,1.388,389,2.87]],["body/controllers/AccountsTypesController.html",[0,0.209,3,0.092,4,0.079,5,0.066,8,0.433,14,0.698,16,1.063,17,0.014,18,1.063,19,0.823,20,0.745,21,1.324,22,1.138,24,0.267,28,0.694,29,0.092,31,0.006,32,0.008,33,0.006,41,1.624,47,2.086,71,1.278,82,3.987,92,1.96,94,3.909,95,1.23,97,1.185,99,1.703,100,1.566,101,2.664,104,1.874,106,3.375,107,2.693,108,3.554,109,2.769,111,1.566,113,2.806,124,1.874,125,1.974,126,1.974,127,1.974,128,1.974,129,1.874,130,0.644,131,3.264,132,1.874,133,3.099,134,1.874,135,3.099,139,1.327,141,1.38,142,1.629,143,1.785,144,1.874,148,2.544,149,2.544,150,1.874,151,1.874,152,2.664,153,2.806,154,2.965,155,2.544,156,2.544,157,1.566,205,2.214,209,2.769,341,3.067,389,3.615,390,3.449,391,3.07,392,5.833,393,3.528,394,3.528,395,3.528,396,3.099,397,2.364,398,2.214,399,2.364,400,3.528,401,3.528]],["title/modules/AccountsTypesModule.html",[214,1.243,402,2.227]],["body/modules/AccountsTypesModule.html",[0,0.271,3,0.119,4,0.102,5,0.086,17,0.014,24,0.274,29,0.119,31,0.008,32,0.01,33,0.008,45,2.703,71,1.001,73,3.296,92,1.536,97,2.011,130,0.835,205,2.869,214,1.87,216,1.938,217,2.537,223,2.763,224,2.11,225,2.11,227,3.028,228,2.313,229,3.539,230,2.869,233,3.757,234,2.11,389,4.811,390,2.703,396,4.284,397,3.063,402,4.298,403,3.978,404,3.978,405,3.978,406,4.571,407,4.571,408,4.571]],["title/injectables/AccountsTypesService.html",[237,0.841,396,2.115]],["body/injectables/AccountsTypesService.html",[0,0.214,3,0.094,4,0.081,5,0.068,8,0.443,11,2.074,14,0.893,16,1.78,17,0.014,18,1.78,19,0.725,20,1.248,21,1.341,24,0.261,29,0.094,31,0.006,32,0.008,33,0.006,41,1.169,45,2.134,63,1.6,71,1.482,73,2.602,77,1.743,92,1.712,94,3.415,100,1.592,101,2.707,104,2.707,111,1.845,130,0.659,139,1.358,141,1.412,157,1.845,210,1.666,230,2.265,234,1.666,237,1.077,238,1.358,241,2.933,246,4.028,249,2.404,255,2.418,259,2.727,341,3.098,373,2.602,396,2.707,398,2.265,399,2.418,409,4.535,410,3.141,411,5.096,412,3.609,413,3.609,414,5.096,415,3.609,416,3.609,417,5.096,418,3.609,419,5.096,420,3.609,421,3.609,422,3.609,423,3.609]],["title/classes/AcctionResponseDto.html",[0,0.236,114,2.354]],["body/classes/AcctionResponseDto.html",[0,0.29,2,0.997,3,0.127,4,0.11,5,0.092,8,0.6,9,1.885,14,0.96,17,0.013,19,0.846,22,1.564,23,2.936,24,0.182,28,0.962,29,0.127,31,0.008,32,0.01,33,0.008,63,1.694,114,3.698,146,4.868,424,4.258,425,6.893,426,6.893,427,6.893,428,4.893,429,7.265,430,4.893,431,4.893]],["title/classes/Agent.html",[0,0.236,432,3.124]],["body/classes/Agent.html",[0,0.364,2,1.252,3,0.16,4,0.138,5,0.116,17,0.013,29,0.16,31,0.01,32,0.012,33,0.01,432,5.642,433,5.345]],["title/controllers/AgentsController.html",[95,1.388,434,2.87]],["body/controllers/AgentsController.html",[0,0.198,3,0.087,4,0.075,5,0.063,8,0.409,14,0.67,16,1.45,17,0.014,18,1.45,19,0.865,20,1.017,22,1.092,24,0.262,28,0.655,29,0.087,31,0.006,32,0.008,33,0.006,47,1.97,63,1.852,80,2.987,95,1.161,97,1.119,99,1.608,100,1.503,106,3.287,107,2.623,108,3.462,111,1.503,113,1.864,119,1.864,124,2.557,125,1.864,126,1.864,127,1.864,128,1.864,129,1.77,130,0.608,131,3.161,132,2.557,133,3.001,134,1.77,135,3.001,139,1.253,141,1.303,142,1.538,143,1.685,144,1.77,150,1.77,151,1.77,152,2.557,153,2.692,154,2.845,157,1.503,192,2.091,197,1.617,201,2.402,211,2.232,341,2.323,366,2.091,367,2.557,434,3.469,435,2.899,436,3.331,437,2.899,438,4.426,439,3.331,440,3.331,441,2.402,442,4.461,443,2.614,444,3.331,445,4.461,446,2.402,447,3.546,448,2.899,449,3.776,450,2.232,451,3.331,452,3.331,453,3.331,454,2.402,455,2.402,456,2.402,457,2.402,458,3.331]],["title/modules/AgentsModule.html",[214,1.243,459,2.667]],["body/modules/AgentsModule.html",[0,0.227,3,0.1,4,0.086,5,0.072,17,0.014,24,0.283,29,0.1,31,0.006,32,0.009,33,0.006,71,1.336,97,1.785,130,0.7,194,2.143,214,1.659,215,3.803,216,1.624,217,2.252,222,3.621,223,2.452,224,1.768,225,1.768,227,2.687,228,2.687,235,2.762,265,3.803,302,2.265,319,4.006,390,2.265,402,4.006,434,4.397,447,4.493,448,3.333,459,5.381,460,3.333,461,3.333,462,3.83,463,3.83,464,3.83,465,3.141,466,2.566,467,3.006,468,2.566,469,2.762,470,2.762]],["title/injectables/AgentsService.html",[237,0.841,447,2.498]],["body/injectables/AgentsService.html",[0,0.18,3,0.079,4,0.068,5,0.057,8,0.373,11,1.832,14,0.746,16,1.615,17,0.014,18,1.615,19,0.657,20,1.132,24,0.268,29,0.079,31,0.005,32,0.007,33,0.005,36,2.825,57,1.403,63,1.793,71,1.174,100,1.406,111,1.406,130,0.555,136,2.997,138,2.391,139,1.143,140,1.908,141,1.189,157,1.406,165,2.518,166,2.037,168,1.908,196,2.192,197,1.512,204,2.997,206,1.908,210,2.735,231,2.037,237,0.951,238,1.143,239,1.908,241,2.59,244,3.467,249,1.832,256,2.037,259,2.919,341,2.173,367,3.147,396,3.147,397,2.037,409,2.037,437,3.917,438,3.969,447,2.825,449,3.532,450,2.037,471,2.645,472,2.192,473,3.864,474,4.206,475,3.039,476,3.245,477,3.039,478,3.532,479,3.039,480,2.386,481,2.192,482,2.192,483,4.5,484,2.386,485,2.661,486,2.386,487,2.386,488,3.039,489,2.386,490,3.039,491,2.386,492,3.039,493,2.386,494,3.039,495,4.206,496,2.386,497,2.386,498,2.386,499,3.039,500,2.386,501,2.386,502,3.532,503,3.245,504,2.645]],["title/injectables/ApiKeyAuthGuard.html",[237,0.841,505,2.87]],["body/injectables/ApiKeyAuthGuard.html",[0,0.341,3,0.15,4,0.129,5,0.108,17,0.013,24,0.257,29,0.15,31,0.01,32,0.011,33,0.01,130,1.05,237,1.46,238,2.162,505,4.983,506,5.001,507,4.144,508,4.144,509,3.053,510,2.436,511,5.747]],["title/injectables/ApiKeyStrategy.html",[237,0.841,512,2.667]],["body/injectables/ApiKeyStrategy.html",[0,0.224,3,0.098,4,0.085,5,0.071,8,0.464,11,1.54,14,0.733,16,1.587,17,0.014,18,1.587,19,0.646,20,1.113,21,1.375,24,0.244,29,0.098,31,0.006,32,0.009,33,0.006,57,1.747,99,1.827,100,1.645,111,1.182,130,0.691,150,2.01,157,1.893,237,1.113,238,1.423,241,2.563,249,1.54,259,1.747,485,3.115,509,2.01,510,1.604,512,3.53,513,5.273,514,3.293,515,6.059,516,3.798,517,3.293,518,3.99,519,3.784,520,5.267,521,7.131,522,5.273,523,3.784,524,3.784,525,3.784,526,6.059,527,3.293,528,3.784,529,2.728,530,3.293,531,2.97,532,5.273,533,2.728,534,3.784,535,2.97,536,3.784,537,2.97,538,2.97,539,2.728,540,2.728,541,3.293,542,3.784,543,3.784,544,2.728,545,5.267,546,3.784,547,3.293,548,3.293,549,3.784]],["title/modules/AppModule.html",[214,1.243,550,2.87]],["body/modules/AppModule.html",[0,0.187,3,0.082,4,0.07,5,0.059,17,0.014,19,0.386,24,0.284,29,0.082,31,0.005,32,0.008,33,0.005,57,2.524,59,2.269,92,1.837,97,1.057,130,0.575,194,1.761,214,1.442,215,3.562,216,1.334,217,1.957,222,3.392,223,2.131,224,1.453,225,1.453,228,2.335,229,1.861,233,1.975,234,1.453,265,3.562,302,1.861,319,3.752,390,1.861,402,3.752,459,4.493,465,2.73,466,2.108,468,2.108,469,2.269,470,2.269,550,5.822,551,2.738,552,2.738,553,4.493,554,4.493,555,4.493,556,4.493,557,3.146,558,3.146,559,2.738,560,2.738,561,3.146,562,3.146,563,3.146,564,3.146,565,3.146,566,3.146,567,3.146,568,3.146,569,3.146,570,3.146,571,3.146,572,4.616,573,3.146,574,3.146]],["title/controllers/AuthController.html",[95,1.388,575,2.87]],["body/controllers/AuthController.html",[0,0.218,1,3.457,3,0.096,4,0.082,5,0.069,8,0.45,14,0.511,16,1.107,17,0.014,18,1.555,19,0.731,20,0.776,22,0.834,24,0.28,28,0.722,29,0.096,31,0.006,32,0.009,33,0.006,95,1.281,97,1.234,99,1.773,100,1.612,106,2.741,107,2.187,111,1.147,119,2.055,124,2.741,129,1.951,130,0.671,132,2.741,133,2.741,134,1.951,135,2.741,139,1.382,142,1.695,144,3.168,150,1.951,152,1.951,157,1.147,241,2.332,249,1.495,446,2.648,505,2.648,508,2.648,509,1.951,518,3.337,533,2.648,537,4.049,538,4.049,539,3.72,540,3.72,541,5.189,575,3.72,576,3.196,577,5.963,578,3.673,579,3.673,580,3.673,581,4.49,582,4.49,583,3.196,584,3.673,585,3.673,586,3.72,587,2.883,588,4.49,589,4.49,590,3.196,591,3.196,592,2.461,593,3.673,594,3.673,595,3.673,596,3.673,597,3.673,598,3.196,599,3.196,600,3.196,601,3.196,602,3.673,603,3.673,604,3.673]],["title/modules/AuthModule.html",[214,1.243,553,2.667]],["body/modules/AuthModule.html",[0,0.206,3,0.09,4,0.078,5,0.065,17,0.014,24,0.287,29,0.09,31,0.006,32,0.008,33,0.006,92,1.166,97,1.665,130,0.634,194,1.941,214,1.548,215,3.684,216,1.471,217,2.1,222,3.508,223,2.287,224,1.601,225,1.601,227,2.507,228,2.507,265,3.684,465,2.93,466,2.325,468,2.325,509,1.843,512,4.646,518,3.88,533,2.501,553,5.36,559,3.019,560,3.019,575,4.167,605,3.019,606,3.469,607,3.019,608,4.646,609,4.646,610,3.469,611,3.469,612,3.469,613,4.954,614,3.469,615,2.723,616,3.469,617,3.469,618,3.469,619,3.469,620,3.019,621,3.019,622,3.469,623,3.469,624,3.469,625,3.469,626,3.469,627,3.469,628,3.469]],["title/injectables/AuthService.html",[237,0.841,518,2.227]],["body/injectables/AuthService.html",[0,0.173,1,2.921,3,0.076,4,0.065,5,0.055,8,0.357,10,2.534,11,1.774,14,0.808,16,1.748,17,0.014,18,1.748,19,0.641,20,1.226,21,1.642,24,0.252,29,0.076,31,0.005,32,0.007,33,0.005,39,2.105,44,1.473,71,0.638,100,1.362,111,1.632,130,0.532,136,2.934,157,1.812,204,2.934,206,1.828,210,2.678,237,0.921,238,1.096,239,1.828,241,2.779,244,3.419,249,1.185,252,3.43,256,1.951,259,2.412,361,3.794,472,2.1,473,3.767,476,3.143,482,2.1,485,1.722,516,3.767,518,2.439,522,2.534,540,3.143,544,4.182,547,2.534,588,2.534,591,2.534,615,2.286,620,2.534,629,2.534,630,4.359,631,4.359,632,6.758,633,2.912,634,4.359,635,2.912,636,4.552,637,2.912,638,3.246,639,2.912,640,4.359,641,2.912,642,2.912,643,4.359,644,2.912,645,2.912,646,5.048,647,2.912,648,2.912,649,2.912,650,2.912,651,2.912,652,2.912,653,2.912,654,4.359,655,2.912,656,2.534,657,2.912,658,2.912,659,2.912,660,2.912,661,2.912,662,2.912]],["title/modules/CommonModule.html",[214,1.243,222,2.014]],["body/modules/CommonModule.html",[0,0.301,3,0.132,4,0.114,5,0.095,17,0.013,24,0.238,29,0.132,31,0.008,32,0.011,33,0.008,130,0.926,214,1.999,216,2.15,217,2.712,222,3.981,223,2.954,224,2.341,225,2.341,227,3.237,229,3.783,244,4.139,663,4.414,664,4.414,665,4.414,666,5.072,667,5.072]],["title/injectables/CommonService.html",[237,0.841,244,2.014]],["body/injectables/CommonService.html",[0,0.244,3,0.107,4,0.092,5,0.077,8,0.504,9,1.679,14,0.881,16,1.679,17,0.013,18,1.679,19,0.776,20,1.178,21,1.751,24,0.207,29,0.107,31,0.007,32,0.009,33,0.007,63,1.112,100,1.741,111,1.741,130,0.75,151,3.36,157,1.741,182,2.752,210,2.92,237,1.178,238,1.545,241,2.86,244,2.819,249,1.671,259,2.92,544,2.961,636,4.373,638,3.118,646,5.903,668,3.574,669,6.324,670,5.572,671,5.572,672,5.572,673,4.106,674,5.572,675,4.106,676,3.574,677,5.572,678,4.106,679,4.849,680,4.106,681,5.572,682,4.106,683,4.106]],["title/classes/CreateAccessToken.html",[0,0.236,586,2.87]],["body/classes/CreateAccessToken.html",[0,0.372,2,1.001,3,0.128,4,0.11,5,0.092,7,3.855,8,0.603,9,1.889,14,0.873,17,0.013,19,0.769,21,1.651,22,1.423,23,2.598,24,0.233,25,4.921,26,6.01,27,3.542,28,0.966,29,0.128,31,0.008,32,0.01,33,0.008,39,3.334,586,4.521,587,5.42,638,3.864,684,6.01,685,4.912,686,4.912,687,4.912,688,4.912]],["title/classes/CreateAccountDto.html",[0,0.236,138,2.115]],["body/classes/CreateAccountDto.html",[0,0.255,2,0.877,3,0.112,4,0.096,5,0.081,8,0.528,9,1.733,14,1.003,17,0.014,19,0.884,21,1.745,22,1.635,23,2.985,24,0.214,28,0.846,29,0.112,31,0.007,32,0.01,33,0.007,39,3.127,40,3.83,42,3.83,44,3.277,71,0.943,82,4.066,93,3.104,94,2.884,138,3.056,481,5.345,689,3.378,690,6.477,691,4.304,692,4.304,693,4.304,694,4.304,695,4.304]],["title/classes/CreateAccountsCredentialDto.html",[0,0.236,199,2.498]],["body/classes/CreateAccountsCredentialDto.html",[0,0.271,2,0.932,3,0.119,4,0.102,5,0.086,8,0.561,9,1.804,14,0.929,17,0.014,19,0.818,21,1.358,22,1.514,23,2.89,24,0.248,28,0.899,29,0.119,31,0.008,32,0.01,33,0.008,34,3.001,71,1.551,80,3.222,92,2.379,123,3.296,168,4.188,169,3.222,176,4.697,185,3.296,186,3.978,189,3.978,192,2.869,199,3.757,696,6.161,697,4.571]],["title/classes/CreateAccountsProfileDto.html",[0,0.236,314,2.498]],["body/classes/CreateAccountsProfileDto.html",[0,0.276,2,0.949,3,0.121,4,0.104,5,0.088,8,0.571,9,1.825,14,0.937,17,0.014,19,0.826,21,1.375,22,1.528,23,2.903,24,0.225,28,0.915,29,0.121,31,0.008,32,0.01,33,0.008,34,2.854,71,1.562,80,3.251,92,2.396,169,3.251,192,2.923,276,5.284,283,4.368,292,3.358,293,4.052,296,4.052,298,4.052,314,3.802,698,6.205]],["title/classes/CreateAccountsTypeDto.html",[0,0.236,398,2.498]],["body/classes/CreateAccountsTypeDto.html",[0,0.3,2,1.03,3,0.131,4,0.113,5,0.095,8,0.62,9,1.923,14,0.889,17,0.013,19,0.783,21,1.668,22,1.448,23,2.852,24,0.188,28,0.993,29,0.131,31,0.008,32,0.011,33,0.008,71,1.532,92,2.351,169,3.378,373,5.045,382,3.642,385,4.396,388,4.396,398,4.006,699,6.089]],["title/classes/CreateAgentDto.html",[0,0.236,438,2.498]],["body/classes/CreateAgentDto.html",[0,0.249,2,0.857,3,0.109,4,0.094,5,0.079,8,0.516,9,1.706,14,1.025,17,0.014,19,0.903,21,1.807,22,1.671,23,3.013,24,0.156,28,0.826,29,0.109,31,0.007,32,0.009,33,0.007,39,3.09,40,3.785,42,3.785,44,3.238,438,3.553,638,3.581,700,6.548,701,3.299,702,5.57,703,4.203,704,4.203,705,4.203,706,4.203,707,4.203,708,4.203]],["title/classes/CreateCustomerDto.html",[0,0.236,709,2.498]],["body/classes/CreateCustomerDto.html",[0,0.238,2,0.818,3,0.104,4,0.09,5,0.076,8,0.492,9,1.653,14,1.035,17,0.014,19,0.912,21,1.816,22,1.687,23,3.026,24,0.149,28,0.789,29,0.104,31,0.007,32,0.009,33,0.007,39,3.018,40,3.696,42,3.696,44,3.162,638,3.498,702,5.44,709,3.444,710,6.587,711,3.151,712,6.251,713,4.014,714,4.014,715,4.014,716,4.014,717,4.014,718,4.014,719,4.014]],["title/classes/CreatePackageDto.html",[0,0.236,720,2.498]],["body/classes/CreatePackageDto.html",[0,0.228,2,0.783,3,0.1,4,0.086,5,0.072,8,0.471,9,1.604,14,1.043,17,0.014,19,0.919,21,1.626,22,1.7,23,3.035,24,0.143,28,0.755,29,0.1,31,0.006,32,0.009,33,0.006,63,2.085,107,2.59,720,3.341,721,6.618,722,3.015,723,4.794,724,4.794,725,4.794,726,4.794,727,4.794,728,4.794,729,4.794,730,3.842,731,3.842,732,3.842,733,3.842,734,3.842,735,3.842,736,3.842,737,3.842]],["title/classes/CreateUserDto.html",[0,0.236,738,2.498]],["body/classes/CreateUserDto.html",[0,0.262,2,0.899,3,0.115,4,0.099,5,0.083,8,0.541,9,1.761,14,1.011,17,0.014,19,0.891,21,1.793,22,1.648,23,2.997,24,0.164,28,0.867,29,0.115,31,0.007,32,0.01,33,0.007,39,3.165,40,3.877,42,3.877,44,3.317,638,3.669,738,3.669,739,6.496,740,3.462,741,4.41,742,4.41,743,4.41,744,4.41,745,4.41]],["title/classes/Customer.html",[0,0.236,746,3.124]],["body/classes/Customer.html",[0,0.364,2,1.252,3,0.16,4,0.138,5,0.116,17,0.013,29,0.16,31,0.01,32,0.012,33,0.01,746,5.642,747,5.345]],["title/controllers/CustomersController.html",[95,1.388,748,2.87]],["body/controllers/CustomersController.html",[0,0.198,3,0.087,4,0.075,5,0.063,8,0.409,14,0.67,16,1.45,17,0.014,18,1.45,19,0.865,20,1.017,22,1.092,24,0.262,28,0.655,29,0.087,31,0.006,32,0.008,33,0.006,47,1.97,63,1.852,80,2.987,95,1.161,97,1.119,99,1.608,100,1.503,106,3.287,107,2.623,108,3.462,111,1.503,113,1.864,119,1.864,124,2.557,125,1.864,126,1.864,127,1.864,128,1.864,129,1.77,130,0.608,131,3.161,132,2.557,133,3.001,134,1.77,135,3.001,139,1.253,141,1.303,142,1.538,143,1.685,144,1.77,150,1.77,151,1.77,152,2.557,153,2.692,154,2.845,157,1.503,192,2.091,197,1.617,201,2.402,211,2.232,341,2.323,366,2.091,367,2.557,441,2.402,442,4.461,443,2.614,445,4.461,446,2.402,454,2.402,455,2.402,456,2.402,457,2.402,709,4.426,748,3.469,749,2.899,750,3.331,751,2.899,752,3.331,753,3.331,754,3.331,755,3.546,756,2.899,757,3.776,758,2.232,759,3.331,760,3.331,761,3.331,762,3.331]],["title/modules/CustomersModule.html",[214,1.243,554,2.667]],["body/modules/CustomersModule.html",[0,0.227,3,0.1,4,0.086,5,0.072,17,0.014,24,0.283,29,0.1,31,0.006,32,0.009,33,0.006,71,1.336,97,1.785,130,0.7,194,2.143,214,1.659,215,3.803,216,1.624,217,2.252,222,3.621,223,2.452,224,1.768,225,1.768,227,2.687,228,2.687,235,2.762,265,3.803,302,2.265,319,4.006,390,2.265,402,4.006,465,3.141,466,2.566,467,3.006,468,2.566,469,2.762,470,2.762,554,5.381,748,4.397,755,4.493,756,3.333,763,3.333,764,3.333,765,3.83,766,3.83,767,3.83]],["title/injectables/CustomersService.html",[237,0.841,755,2.498]],["body/injectables/CustomersService.html",[0,0.18,3,0.079,4,0.068,5,0.057,8,0.373,11,1.832,14,0.746,16,1.615,17,0.014,18,1.615,19,0.657,20,1.132,24,0.268,29,0.079,31,0.005,32,0.007,33,0.005,36,2.825,57,1.403,63,1.793,71,1.174,100,1.406,111,1.406,130,0.555,136,2.997,138,2.391,139,1.143,140,1.908,141,1.189,157,1.406,165,2.518,166,2.037,168,1.908,196,2.192,197,1.512,204,2.997,206,1.908,210,2.735,231,2.037,237,0.951,238,1.143,239,1.908,241,2.59,244,3.467,249,1.832,256,2.037,259,2.919,341,2.173,367,3.147,396,3.147,397,2.037,409,2.037,472,2.192,473,3.864,474,4.206,476,3.245,478,3.532,480,2.386,481,2.192,482,2.192,484,2.386,485,2.661,486,2.386,487,2.386,489,2.386,491,2.386,493,2.386,495,4.206,496,2.386,497,2.386,498,2.386,500,2.386,501,2.386,502,3.532,503,3.245,504,2.645,709,3.969,751,3.917,755,2.825,757,3.532,758,2.037,768,2.645,769,3.039,770,3.039,771,3.039,772,4.5,773,3.039,774,3.039,775,3.039,776,3.039,777,3.039]],["title/injectables/JwtAuthGuard.html",[142,1.837,237,0.841]],["body/injectables/JwtAuthGuard.html",[0,0.341,3,0.15,4,0.129,5,0.108,17,0.013,24,0.257,29,0.15,31,0.01,32,0.011,33,0.01,130,1.05,142,3.19,143,2.907,237,1.46,238,2.162,507,4.144,508,4.144,509,3.053,510,2.436,778,5.747]],["title/injectables/JwtStrategy.html",[237,0.841,608,2.667]],["body/injectables/JwtStrategy.html",[0,0.275,3,0.121,4,0.104,5,0.087,8,0.569,11,2.735,14,0.841,16,1.398,17,0.014,18,1.398,19,0.569,20,0.98,24,0.25,29,0.121,31,0.008,32,0.01,33,0.008,44,2.347,59,3.345,100,1.888,111,1.449,130,0.848,157,1.449,237,1.277,238,1.745,241,2.629,249,1.888,509,2.465,510,1.967,516,4.357,529,3.345,531,3.641,535,3.641,608,4.049,621,4.037,656,4.037,779,4.037,780,4.639,781,6.043,782,4.639,783,4.639,784,4.037,785,4.037,786,4.037,787,4.639,788,4.639,789,4.639,790,4.639,791,4.639,792,4.639,793,4.639]],["title/injectables/LocalAuthGuard.html",[237,0.841,592,2.667]],["body/injectables/LocalAuthGuard.html",[0,0.341,3,0.15,4,0.129,5,0.108,17,0.013,24,0.257,29,0.15,31,0.01,32,0.011,33,0.01,130,1.05,237,1.46,238,2.162,507,4.144,508,4.144,509,3.053,510,2.436,592,4.631,794,4.51,795,5.747]],["title/injectables/LocalStrategy.html",[237,0.841,609,2.667]],["body/injectables/LocalStrategy.html",[0,0.248,3,0.109,4,0.093,5,0.079,8,0.512,11,1.699,14,0.785,16,1.698,17,0.014,18,1.698,19,0.691,20,1.191,21,1.668,24,0.254,29,0.109,31,0.007,32,0.009,33,0.007,39,2.016,44,2.112,100,1.76,111,1.304,130,0.763,150,2.218,157,1.304,237,1.191,238,1.571,241,2.495,252,3.772,259,1.927,485,2.469,509,2.218,510,1.77,516,4.063,517,3.633,518,4.111,529,3.01,531,3.277,532,4.904,533,3.01,535,3.277,544,3.01,548,3.633,609,3.776,636,4.423,638,3.99,784,3.633,786,3.633,796,3.633,797,4.175,798,5.635,799,4.175,800,3.633,801,4.175,802,4.175,803,4.175]],["title/classes/Package.html",[0,0.236,804,2.498]],["body/classes/Package.html",[0,0.192,2,0.661,3,0.084,4,0.073,5,0.061,8,0.398,9,1.423,14,1.059,17,0.014,19,0.933,20,0.998,21,1.538,22,1.726,24,0.121,29,0.084,31,0.005,32,0.008,33,0.005,37,2.815,38,2.815,41,1.803,43,2.815,49,3.429,50,3.729,52,3.729,55,3.705,61,4.109,63,2.06,64,3.729,67,3.729,74,3.163,75,5.224,76,2.339,77,1.566,78,3.705,107,2.359,723,4.368,724,4.368,725,4.368,726,4.368,727,4.368,728,4.368,729,4.368,804,2.963,805,2.824,806,3.244,807,3.244,808,3.244,809,3.244,810,3.244,811,3.244,812,4.721,813,3.244,814,3.244,815,3.244,816,3.244,817,3.244,818,3.244]],["title/classes/PackageDto.html",[0,0.236,819,2.87]],["body/classes/PackageDto.html",[0,0.207,2,0.711,3,0.091,4,0.078,5,0.066,8,0.428,9,1.499,14,1.074,17,0.014,19,0.946,20,1.051,21,1.577,22,1.688,23,3.023,24,0.13,28,0.686,29,0.091,31,0.006,32,0.008,33,0.006,37,2.933,38,2.933,41,1.878,43,2.933,49,3.514,63,2.088,107,2.458,723,4.55,724,4.55,725,4.55,726,4.55,727,4.55,728,4.55,729,4.55,819,3.587,820,3.036,821,3.488,822,3.488,823,3.488,824,3.488,825,3.488,826,3.488,827,3.488,828,3.488,829,3.488,830,3.488,831,3.488,832,3.488]],["title/controllers/PackagesController.html",[95,1.388,833,2.87]],["body/controllers/PackagesController.html",[0,0.115,3,0.05,4,0.043,5,0.036,8,0.237,14,0.711,16,1.539,17,0.014,18,1.936,19,0.882,20,1.079,21,1.418,22,1.159,24,0.233,28,0.38,29,0.05,31,0.003,32,0.005,33,0.003,41,1.776,47,1.143,63,1.485,95,0.674,97,0.649,99,0.933,100,0.987,101,1.679,102,1.768,103,1.983,104,1.027,106,3.414,107,3.128,108,3.595,111,1.595,112,1.081,113,2.243,114,3.019,117,1.213,119,1.768,124,1.679,125,1.768,126,1.081,127,1.081,128,1.081,129,1.027,130,0.353,131,3.067,132,2.13,133,2.912,134,1.027,135,2.912,139,0.727,141,0.756,142,0.892,143,0.977,144,1.679,147,1.393,150,1.027,151,1.027,152,2.713,153,2.857,155,1.393,156,1.393,157,1.595,159,1.516,160,1.682,162,1.393,163,1.393,197,1.062,211,1.295,241,1.568,249,0.786,341,1.526,366,1.213,367,1.679,441,1.393,442,3.339,445,3.339,454,1.393,455,1.393,456,1.393,457,1.393,537,5.043,538,5.043,539,4.633,540,4.633,581,5.592,582,5.592,583,4.444,589,4.77,590,1.682,592,1.295,598,4.444,599,4.444,600,4.444,601,4.444,720,3.631,794,1.516,819,3.952,833,2.278,834,1.682,835,1.932,836,1.682,837,1.932,838,5.106,839,1.932,840,1.932,841,1.932,842,1.932,843,1.932,844,1.932,845,1.932,846,1.932,847,4.186,848,1.932,849,1.932,850,1.932,851,1.932,852,2.516,853,1.682,854,2.48,855,1.932,856,1.932,857,1.932,858,1.932,859,1.932,860,1.932,861,1.932,862,1.932]],["title/modules/PackagesModule.html",[214,1.243,555,2.667]],["body/modules/PackagesModule.html",[0,0.276,3,0.121,4,0.104,5,0.088,17,0.014,24,0.275,29,0.121,31,0.008,32,0.01,33,0.008,97,2.035,130,0.851,214,1.892,216,1.974,217,2.568,223,2.796,224,2.15,225,2.15,227,3.065,228,2.356,229,3.582,233,3.802,234,2.15,555,5.17,804,2.923,833,4.855,852,5.074,853,4.052,863,4.052,864,4.052,865,4.052,866,4.656,867,4.656,868,4.052,869,4.656]],["title/injectables/PackagesService.html",[237,0.841,852,2.498]],["body/injectables/PackagesService.html",[0,0.18,3,0.079,4,0.068,5,0.057,8,0.372,11,1.828,14,0.921,16,1.994,17,0.014,18,1.994,19,0.812,20,1.398,24,0.246,29,0.079,31,0.005,32,0.007,33,0.005,41,1.917,63,2.088,77,1.464,100,1.403,101,2.387,102,2.514,103,2.82,104,2.387,111,1.973,112,2.514,117,2.82,130,0.554,139,1.141,141,1.186,157,1.973,197,1.509,210,1.4,234,1.4,237,0.949,238,1.141,241,3.016,246,3.714,249,2.571,255,2.032,259,2.916,341,2.169,348,3.91,349,5.149,351,3.91,364,2.639,365,2.639,366,1.903,367,1.611,720,3.965,804,1.903,836,3.91,847,4.712,852,2.82,854,3.526,868,2.639,870,2.639,871,3.032,872,3.032,873,4.492,874,3.032,875,3.032,876,3.032,877,3.032,878,3.032,879,3.032,880,3.032,881,3.032,882,3.032,883,3.032,884,3.032]],["title/classes/UpdateAccountDto.html",[0,0.236,118,2.667]],["body/classes/UpdateAccountDto.html",[0,0.339,2,1.166,3,0.149,4,0.128,5,0.108,17,0.013,24,0.257,28,1.125,29,0.149,31,0.009,32,0.011,33,0.009,118,4.618,138,3.039,140,3.591,197,1.922,510,2.425,689,4.49,885,4.979,886,3.201,887,5.721]],["title/classes/UpdateAccountsCredentialDto.html",[0,0.236,208,2.667]],["body/classes/UpdateAccountsCredentialDto.html",[0,0.335,2,1.15,3,0.147,4,0.126,5,0.106,17,0.013,24,0.254,28,1.109,29,0.147,31,0.009,32,0.011,33,0.009,71,1.236,92,2.297,185,4.069,197,1.896,199,3.542,207,4.429,208,4.58,510,2.392,886,3.158,888,4.911,889,5.643]],["title/classes/UpdateAccountsProfileDto.html",[0,0.236,307,2.667]],["body/classes/UpdateAccountsProfileDto.html",[0,0.335,2,1.15,3,0.147,4,0.126,5,0.106,17,0.013,24,0.254,28,1.109,29,0.147,31,0.009,32,0.011,33,0.009,71,1.236,92,2.297,197,1.896,292,4.069,307,4.58,311,4.429,314,3.542,510,2.392,886,3.158,890,4.911,891,5.643]],["title/classes/UpdateAccountsTypeDto.html",[0,0.236,399,2.667]],["body/classes/UpdateAccountsTypeDto.html",[0,0.336,2,1.156,3,0.148,4,0.127,5,0.107,17,0.013,24,0.255,28,1.114,29,0.148,31,0.009,32,0.011,33,0.009,71,1.242,92,2.303,94,3.799,197,1.905,382,4.087,398,3.558,399,4.592,510,2.403,886,3.172,892,4.933,893,5.669]],["title/classes/UpdateAgentDto.html",[0,0.236,450,2.667]],["body/classes/UpdateAgentDto.html",[0,0.341,2,1.172,3,0.15,4,0.129,5,0.108,17,0.013,24,0.257,28,1.13,29,0.15,31,0.01,32,0.011,33,0.01,197,1.931,438,3.607,449,4.51,450,4.631,510,2.436,701,4.51,886,3.216,894,5.001,895,5.747]],["title/classes/UpdateCustomerDto.html",[0,0.236,758,2.667]],["body/classes/UpdateCustomerDto.html",[0,0.341,2,1.172,3,0.15,4,0.129,5,0.108,17,0.013,24,0.257,28,1.13,29,0.15,31,0.01,32,0.011,33,0.01,197,1.931,510,2.436,709,3.607,711,4.51,757,4.51,758,4.631,886,3.216,896,5.001,897,5.747]],["title/classes/UpdatePackageDto.html",[0,0.236,847,2.667]],["body/classes/UpdatePackageDto.html",[0,0.341,2,1.172,3,0.15,4,0.129,5,0.108,17,0.013,24,0.257,28,1.13,29,0.15,31,0.01,32,0.011,33,0.01,197,1.931,510,2.436,720,3.607,722,4.51,847,4.631,854,4.51,886,3.216,898,5.001,899,5.747]],["title/classes/UpdateUserDto.html",[0,0.236,900,2.667]],["body/classes/UpdateUserDto.html",[0,0.341,2,1.172,3,0.15,4,0.129,5,0.108,17,0.013,24,0.257,28,1.13,29,0.15,31,0.01,32,0.011,33,0.01,197,1.931,510,2.436,738,3.607,740,4.51,886,3.216,900,4.631,901,5.001,902,4.51,903,5.747]],["title/classes/User.html",[0,0.236,252,2.354]],["body/classes/User.html",[0,0.364,2,1.252,3,0.16,4,0.138,5,0.116,17,0.013,29,0.16,31,0.01,32,0.012,33,0.01,252,4.251,904,5.345]],["title/classes/UserDto.html",[0,0.236,905,3.124]],["body/classes/UserDto.html",[0,0.255,2,0.877,3,0.112,4,0.096,5,0.081,8,0.528,9,1.733,14,1.032,17,0.014,19,0.909,21,1.786,22,1.682,23,3.024,24,0.16,28,0.846,29,0.112,31,0.007,32,0.01,33,0.007,39,3.127,40,3.83,41,2.098,42,3.83,44,3.277,63,1.558,638,3.624,905,4.514,906,3.746,907,4.304,908,4.304,909,4.304,910,4.304,911,4.304,912,4.304]],["title/controllers/UsersController.html",[95,1.388,913,2.87]],["body/controllers/UsersController.html",[0,0.195,3,0.086,4,0.074,5,0.062,8,0.404,14,0.665,16,1.439,17,0.014,18,1.439,19,0.862,20,1.009,22,1.084,24,0.262,28,0.648,29,0.086,31,0.005,32,0.008,33,0.005,47,1.949,63,1.846,80,2.973,95,1.149,97,1.107,99,1.591,100,1.492,106,3.271,107,2.61,108,3.445,111,1.492,113,1.844,119,1.844,124,2.537,125,1.844,126,1.844,127,1.844,128,1.844,129,1.751,130,0.602,131,3.142,132,2.537,133,2.983,134,1.751,135,2.983,139,1.24,141,1.289,142,1.521,143,1.667,144,1.751,150,1.751,151,1.751,152,2.537,153,2.672,154,2.824,157,1.492,192,2.069,197,1.604,201,2.376,211,2.208,241,2.196,249,1.341,341,2.305,366,2.069,367,2.537,441,2.376,442,4.439,443,2.587,445,4.439,446,2.376,454,2.376,455,2.376,456,2.376,457,2.376,503,2.376,738,4.412,900,2.208,902,3.748,913,3.443,914,2.868,915,2.868,916,3.296,917,3.296,918,3.296,919,3.524,920,2.868,921,3.296,922,3.296,923,3.296,924,3.296]],["title/modules/UsersModule.html",[214,1.243,556,2.667]],["body/modules/UsersModule.html",[0,0.227,3,0.1,4,0.086,5,0.072,17,0.014,24,0.283,29,0.1,31,0.006,32,0.009,33,0.006,71,1.336,97,1.785,130,0.7,194,2.143,214,1.659,215,3.803,216,1.624,217,2.252,222,3.621,223,2.452,224,1.768,225,1.768,227,2.687,228,2.687,235,2.762,265,3.803,302,2.265,319,4.006,390,2.265,402,4.006,465,3.141,466,2.566,467,3.006,468,2.566,469,2.762,470,2.762,556,5.381,913,4.397,919,4.493,920,3.333,925,3.333,926,3.83,927,3.333,928,3.83,929,3.83]],["title/injectables/UsersService.html",[237,0.841,919,2.498]],["body/injectables/UsersService.html",[0,0.178,3,0.078,4,0.067,5,0.057,8,0.368,11,1.815,14,0.741,16,1.603,17,0.014,18,1.603,19,0.653,20,1.124,24,0.271,29,0.078,31,0.005,32,0.007,33,0.005,34,1.273,36,2.8,57,1.386,63,1.786,71,1.165,100,1.393,111,1.393,130,0.549,136,2.979,138,2.37,139,1.13,140,1.885,141,1.175,157,1.393,165,2.496,166,2.012,168,1.885,180,2.613,196,2.165,197,1.499,204,2.979,206,1.885,210,2.719,231,2.012,237,0.943,238,1.13,239,1.885,241,2.579,244,3.453,249,1.815,256,2.012,259,2.905,341,2.153,367,2.827,396,3.129,397,2.012,409,2.012,472,2.165,473,3.837,474,4.176,476,3.216,478,3.501,480,2.357,482,2.165,484,2.357,485,2.637,486,2.357,487,2.357,489,2.357,491,2.357,493,2.357,495,4.176,496,2.357,497,2.357,498,2.357,500,2.357,501,2.357,502,3.501,503,3.216,738,3.949,900,2.012,902,3.501,915,3.882,919,2.8,930,2.613,931,3.003,932,3.003,933,3.003,934,3.003,935,4.46,936,3.003,937,3.003,938,3.003,939,3.003,940,3.003,941,3.003,942,3.003]],["title/coverage.html",[943,4.281]],["body/coverage.html",[0,0.466,1,1.321,5,0.037,6,1.716,7,2.521,17,0.014,19,0.242,31,0.003,32,0.005,33,0.003,34,0.836,35,1.716,45,1.166,71,1.597,72,1.422,80,0.952,81,1.716,82,1.238,92,1.859,93,1.422,95,2.194,96,1.422,98,1.716,114,1.166,118,1.321,136,0.998,138,1.048,142,0.91,143,0.998,146,1.321,165,1.103,166,1.321,167,1.716,183,1.422,184,1.716,185,2.931,193,1.422,194,1.103,195,1.716,199,1.238,204,0.998,208,1.321,237,1.511,239,1.238,240,1.716,244,0.998,252,1.166,273,1.321,274,1.716,275,1.716,290,1.422,291,1.716,292,2.931,301,1.422,302,1.166,303,1.716,307,1.321,312,1.238,314,1.238,327,1.716,328,1.716,340,1.716,372,1.716,382,2.931,389,1.422,390,1.166,391,1.716,396,1.048,398,1.238,399,1.321,409,1.321,410,1.716,424,1.716,432,1.548,433,1.716,434,1.422,435,1.716,438,1.238,447,1.238,450,1.321,465,1.166,471,1.716,481,1.422,485,1.166,505,1.422,506,1.716,507,2.931,512,1.321,513,1.716,514,1.716,518,1.103,527,1.716,575,1.422,576,1.716,586,1.422,587,1.548,592,1.321,608,1.321,609,1.321,629,1.716,668,1.716,684,1.716,689,2.521,696,1.716,698,1.716,699,1.716,700,1.716,701,2.521,709,1.238,710,1.716,711,2.521,720,1.238,721,1.716,722,2.521,738,1.238,739,1.716,740,2.521,746,1.548,747,1.716,748,1.422,749,1.716,755,1.238,758,1.321,768,1.716,779,1.716,794,1.548,796,1.716,804,1.238,805,1.716,819,1.422,820,1.716,833,1.422,834,1.716,847,1.321,852,1.238,870,1.716,885,1.716,888,1.716,890,1.716,892,1.716,894,1.716,896,1.716,898,1.716,900,1.321,901,1.716,904,1.716,905,1.548,906,1.716,913,1.422,914,1.716,919,1.238,930,1.716,943,1.548,944,1.972,945,1.972,946,1.972,947,1.716,948,4.065,949,1.716,950,8.215,951,7.29,952,1.716,953,1.716,954,1.716,955,6.621,956,5.534,957,6.292,958,5.161,959,4.687,960,4.065,961,3.212,962,1.972,963,1.716,964,1.716,965,1.972,966,3.212,967,1.972,968,1.972]],["title/dependencies.html",[217,2.032,804,2.079]],["body/dependencies.html",[0,0.274,17,0.014,27,3.333,28,0.909,31,0.008,32,0.01,33,0.008,77,2.232,130,0.844,217,1.96,234,2.134,509,2.456,529,5.127,530,4.023,615,3.628,679,4.023,785,4.023,800,4.023,969,6.028,970,4.622,971,6.028,972,4.622,973,6.709,974,4.622,975,4.622,976,4.622,977,6.028,978,4.622,979,6.028,980,4.622,981,4.622,982,4.622,983,4.622,984,4.622,985,4.622,986,4.622,987,4.023,988,4.622,989,4.622,990,4.622,991,4.622,992,4.622,993,4.622,994,4.622,995,4.622,996,4.622,997,4.622,998,4.622,999,4.622,1000,4.622]],["title/miscellaneous/functions.html",[1001,2.389,1002,4.171]],["body/miscellaneous/functions.html",[8,0.761,17,0.012,31,0.01,32,0.012,33,0.01,963,5.398,964,6.659,1001,4.472,1002,5.398,1003,6.202]],["title/index.html",[8,0.406,1004,3.313,1005,3.313]],["body/index.html",[4,0.087,5,0.073,17,0.013,31,0.006,32,0.009,33,0.006,99,1.884,107,1.654,197,1.311,246,2.449,539,2.813,943,3.062,1006,3.902,1007,3.902,1008,5.38,1009,3.902,1010,3.902,1011,3.902,1012,3.902,1013,3.902,1014,3.902,1015,6.159,1016,3.902,1017,3.902,1018,3.902,1019,7.378,1020,3.902,1021,5.38,1022,4.683,1023,7.2,1024,3.902,1025,3.902,1026,6.159,1027,3.902,1028,3.902,1029,3.902,1030,6.159,1031,6.159,1032,5.38,1033,3.902,1034,3.902,1035,3.902,1036,6.159,1037,3.902,1038,5.38,1039,3.902,1040,3.902,1041,3.902,1042,3.902,1043,3.902,1044,3.902,1045,3.902,1046,3.902,1047,3.902,1048,3.902,1049,3.396,1050,3.396,1051,3.902,1052,3.902,1053,3.902,1054,5.38,1055,5.38,1056,3.902,1057,3.902,1058,3.902,1059,3.902,1060,3.902,1061,3.396,1062,3.902,1063,3.902,1064,3.902,1065,3.902,1066,3.902,1067,3.902,1068,3.902,1069,3.902,1070,3.902,1071,3.902,1072,3.902,1073,3.902,1074,3.902,1075,3.902,1076,3.902,1077,3.902,1078,3.902,1079,3.902]],["title/modules.html",[216,2.312]],["body/modules.html",[17,0.011,31,0.008,32,0.011,33,0.008,215,2.662,216,2.124,222,2.535,265,2.662,319,2.804,402,2.804,459,3.358,550,3.613,553,3.358,554,3.358,555,3.358,556,3.358,1061,7.072,1080,8.126,1081,8.126,1082,8.126]],["title/overview.html",[1083,4.747]],["body/overview.html",[2,0.521,17,0.014,31,0.004,32,0.007,33,0.004,97,0.859,136,3.267,204,3.267,215,3.839,216,1.083,217,1.673,218,2.224,219,2.224,220,2.224,221,2.224,222,3.601,223,1.822,224,1.18,225,1.18,238,0.961,244,3.267,265,3.715,266,2.224,267,2.224,268,2.224,312,4.054,319,3.831,320,2.224,321,2.224,322,2.224,396,3.432,402,3.831,403,2.224,404,2.224,405,2.224,447,3.027,459,5.008,460,2.224,461,2.224,512,3.231,518,2.698,550,5.635,551,2.224,552,2.224,553,5.09,554,5.008,555,4.152,556,5.008,605,2.224,607,2.224,608,3.231,609,3.231,663,2.224,664,2.224,665,2.224,755,3.027,763,2.224,764,2.224,852,4.054,863,2.224,864,2.224,865,2.224,919,3.027,925,2.224,927,2.224,1083,2.224,1084,2.555,1085,2.555,1086,2.555,1087,2.555]],["title/miscellaneous/variables.html",[1001,2.389,1088,4.171]],["body/miscellaneous/variables.html",[8,0.622,17,0.014,19,0.785,31,0.008,32,0.011,33,0.008,57,2.341,107,2.15,182,4.697,283,4.613,465,3.783,676,6.1,947,4.414,949,5.568,952,4.414,953,4.414,954,5.568,987,4.414,1001,3.657,1022,4.414,1049,4.414,1050,4.414,1088,4.414,1089,5.072,1090,5.072,1091,5.072,1092,5.072,1093,5.072,1094,5.072,1095,5.072,1096,5.072,1097,5.072,1098,5.072,1099,5.072,1100,5.072,1101,5.072]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":457,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["1.0.0",{"_index":987,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["1.2.2",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":677,"title":{},"body":{"injectables/CommonService.html":{}}}],["11",{"_index":1084,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1086,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":624,"title":{},"body":{"modules/AuthModule.html":{}}}],["200",{"_index":106,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["25",{"_index":812,"title":{},"body":{"classes/Package.html":{}}}],["3.0.2",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1087,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["5.0.1",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["8.6.0",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1085,"title":{},"body":{"overview.html":{}}}],["access",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["access_token",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["accesstoken})@apiunauthorizedresponse()@apiheader({name",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["account",{"_index":34,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["account.dto",{"_index":140,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"classes/UpdateAccountDto.html":{},"injectables/UsersService.html":{}}}],["account.dto.ts",{"_index":689,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/UpdateAccountDto.html":{},"coverage.html":{}}}],["account.dto.ts:10",{"_index":695,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:12",{"_index":692,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:14",{"_index":691,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:6",{"_index":693,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:8",{"_index":694,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.id",{"_index":181,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["accountdto",{"_index":80,"title":{"classes/AccountDto.html":{}},"body":{"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfileDto.html":{},"controllers/AgentsController.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["accountid",{"_index":337,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["accounts",{"_index":92,"title":{},"body":{"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["accounts.controller",{"_index":271,"title":{},"body":{"modules/AccountsModule.html":{}}}],["accounts/accounts.module",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["accounts/dto/account.dto",{"_index":300,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["accounts/dto/create",{"_index":934,"title":{},"body":{"injectables/UsersService.html":{}}}],["accounts/entities/account.entity",{"_index":180,"title":{},"body":{"classes/AccountsCredential.html":{},"injectables/UsersService.html":{}}}],["accountscontroller",{"_index":96,"title":{"controllers/AccountsController.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"coverage.html":{}}}],["accountscredential",{"_index":165,"title":{"classes/AccountsCredential.html":{}},"body":{"classes/AccountsCredential.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["accountscredentialdto",{"_index":183,"title":{"classes/AccountsCredentialDto.html":{}},"body":{"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"coverage.html":{}}}],["accountscredentialscontroller",{"_index":193,"title":{"controllers/AccountsCredentialsController.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"coverage.html":{}}}],["accountscredentialsmodule",{"_index":215,"title":{"modules/AccountsCredentialsModule.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountscredentialsservice",{"_index":204,"title":{"injectables/AccountsCredentialsService.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accountservice",{"_index":476,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["accountsmodule",{"_index":265,"title":{"modules/AccountsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsprofile",{"_index":273,"title":{"classes/AccountsProfile.html":{}},"body":{"classes/AccountsProfile.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"coverage.html":{}}}],["accountsprofiledto",{"_index":290,"title":{"classes/AccountsProfileDto.html":{}},"body":{"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"coverage.html":{}}}],["accountsprofilescontroller",{"_index":301,"title":{"controllers/AccountsProfilesController.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"coverage.html":{}}}],["accountsprofilesmodule",{"_index":319,"title":{"modules/AccountsProfilesModule.html":{}},"body":{"modules/AccountsProfilesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsprofilesservice",{"_index":312,"title":{"injectables/AccountsProfilesService.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["accountsservice",{"_index":136,"title":{"injectables/AccountsService.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accountstype",{"_index":45,"title":{"classes/AccountsType.html":{}},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"coverage.html":{}}}],["accountstypedto",{"_index":82,"title":{"classes/AccountsTypeDto.html":{}},"body":{"classes/AccountDto.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"classes/CreateAccountDto.html":{},"coverage.html":{}}}],["accountstypescontroller",{"_index":389,"title":{"controllers/AccountsTypesController.html":{}},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"coverage.html":{}}}],["accountstypesmodule",{"_index":402,"title":{"modules/AccountsTypesModule.html":{}},"body":{"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountstypesservice",{"_index":396,"title":{"injectables/AccountsTypesService.html":{}},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accounttype",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["accounttype.id",{"_index":79,"title":{},"body":{"classes/Account.html":{}}}],["accounttypeid",{"_index":690,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["accounttypeservice",{"_index":474,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["acctionresponsedto",{"_index":114,"title":{"classes/AcctionResponseDto.html":{}},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"classes/AcctionResponseDto.html":{},"controllers/PackagesController.html":{},"coverage.html":{}}}],["affected",{"_index":425,"title":{},"body":{"classes/AcctionResponseDto.html":{}}}],["agent",{"_index":432,"title":{"classes/Agent.html":{}},"body":{"classes/Agent.html":{},"coverage.html":{}}}],["agent.dto",{"_index":449,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/UpdateAgentDto.html":{}}}],["agent.dto.ts",{"_index":701,"title":{},"body":{"classes/CreateAgentDto.html":{},"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["agent.dto.ts:11",{"_index":705,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:14",{"_index":708,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:17",{"_index":707,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:20",{"_index":706,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:5",{"_index":703,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agent.dto.ts:8",{"_index":704,"title":{},"body":{"classes/CreateAgentDto.html":{}}}],["agents",{"_index":436,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agents.controller",{"_index":464,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents/agents.module",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["agentscontroller",{"_index":434,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"coverage.html":{}}}],["agentsmodule",{"_index":459,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsservice",{"_index":447,"title":{"injectables/AgentsService.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"coverage.html":{},"overview.html":{}}}],["amazing",{"_index":1062,"title":{},"body":{"index.html":{}}}],["api",{"_index":539,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"controllers/PackagesController.html":{},"index.html":{}}}],["api.tracking.services",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["api_key'])@delete(':id",{"_index":845,"title":{},"body":{"controllers/PackagesController.html":{}}}],["api_key'])@get('/:page/:limit",{"_index":841,"title":{},"body":{"controllers/PackagesController.html":{}}}],["api_key'])@get(':id",{"_index":843,"title":{},"body":{"controllers/PackagesController.html":{}}}],["api_key'])@patch(':id",{"_index":849,"title":{},"body":{"controllers/PackagesController.html":{}}}],["api_key'])@post",{"_index":839,"title":{},"body":{"controllers/PackagesController.html":{}}}],["api_key'])@useguards(apikeyauthguard)@post",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{}}}],["api_key=eab0a38835eba59230ef98d8879dc2c198df96af",{"_index":1046,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":131,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":132,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apibody({type",{"_index":119,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apibody({})@apiresponse({status",{"_index":105,"title":{},"body":{"controllers/AccountsController.html":{}}}],["apiheader",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["apikey",{"_index":526,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["apikeyauthguard",{"_index":505,"title":{"injectables/ApiKeyAuthGuard.html":{}},"body":{"injectables/ApiKeyAuthGuard.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["apikeystrategy",{"_index":512,"title":{"injectables/ApiKeyStrategy.html":{}},"body":{"injectables/ApiKeyStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["apiproperty",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountDto.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsTypeDto.html":{},"classes/AcctionResponseDto.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/PackageDto.html":{},"classes/UserDto.html":{}}}],["apiresponse",{"_index":133,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apiresponse({status",{"_index":113,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apisecurity",{"_index":590,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["apisecurity('api_key",{"_index":600,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["apitags",{"_index":134,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apitags('accounts",{"_index":148,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{}}}],["apitags('agents",{"_index":451,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apitags('auth",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('customers",{"_index":759,"title":{},"body":{"controllers/CustomersController.html":{}}}],["apitags('packages",{"_index":856,"title":{},"body":{"controllers/PackagesController.html":{}}}],["apitags('users",{"_index":921,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":135,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":1021,"title":{},"body":{"index.html":{}}}],["app_iss",{"_index":1048,"title":{},"body":{"index.html":{}}}],["app_url=https://app.parking.com",{"_index":1047,"title":{},"body":{"index.html":{}}}],["applicationconfigs",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":1014,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":550,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":429,"title":{},"body":{"classes/AcctionResponseDto.html":{}}}],["async",{"_index":241,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["audience",{"_index":625,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller",{"_index":611,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":144,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":507,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":575,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":577,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(req",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":508,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('headerapikey",{"_index":511,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{}}}],["authguard('jwt",{"_index":778,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":795,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":553,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1072,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":518,"title":{"injectables/AuthService.html":{}},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":259,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1063,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":679,"title":{},"body":{"injectables/CommonService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":680,"title":{},"body":{"injectables/CommonService.html":{}}}],["bcrypt.gensalt(this.saltrounds",{"_index":682,"title":{},"body":{"injectables/CommonService.html":{}}}],["bcrypt.hash(password",{"_index":683,"title":{},"body":{"injectables/CommonService.html":{}}}],["body",{"_index":125,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["bootstrap",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1082,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1080,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1035,"title":{},"body":{"index.html":{}}}],["building",{"_index":1009,"title":{},"body":{"index.html":{}}}],["catalog",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":545,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule",{"_index":218,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule_exports",{"_index":220,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule_imports",{"_index":219,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountscredentialsmodule_providers",{"_index":221,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule",{"_index":266,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_exports",{"_index":268,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_providers",{"_index":267,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsprofilesmodule",{"_index":320,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"overview.html":{}}}],["cluster_accountsprofilesmodule_exports",{"_index":321,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"overview.html":{}}}],["cluster_accountsprofilesmodule_providers",{"_index":322,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"overview.html":{}}}],["cluster_accountstypesmodule",{"_index":403,"title":{},"body":{"modules/AccountsTypesModule.html":{},"overview.html":{}}}],["cluster_accountstypesmodule_exports",{"_index":405,"title":{},"body":{"modules/AccountsTypesModule.html":{},"overview.html":{}}}],["cluster_accountstypesmodule_providers",{"_index":404,"title":{},"body":{"modules/AccountsTypesModule.html":{},"overview.html":{}}}],["cluster_agentsmodule",{"_index":460,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_imports",{"_index":462,"title":{},"body":{"modules/AgentsModule.html":{}}}],["cluster_agentsmodule_providers",{"_index":461,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":551,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":605,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":606,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":607,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":663,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":665,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":664,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_customersmodule",{"_index":763,"title":{},"body":{"modules/CustomersModule.html":{},"overview.html":{}}}],["cluster_customersmodule_imports",{"_index":765,"title":{},"body":{"modules/CustomersModule.html":{}}}],["cluster_customersmodule_providers",{"_index":764,"title":{},"body":{"modules/CustomersModule.html":{},"overview.html":{}}}],["cluster_packagesmodule",{"_index":863,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_packagesmodule_exports",{"_index":865,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_packagesmodule_providers",{"_index":864,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":925,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":926,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":927,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["column({default",{"_index":177,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{}}}],["column({length",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/Package.html":{}}}],["column({type",{"_index":284,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["common/common.module",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["common/dto/acction",{"_index":851,"title":{},"body":{"controllers/PackagesController.html":{}}}],["commonmodule",{"_index":222,"title":{"modules/CommonModule.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":244,"title":{"injectables/CommonService.html":{}},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["companyname",{"_index":712,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["compare",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{}}}],["compose",{"_index":1031,"title":{},"body":{"index.html":{}}}],["config/.../application.properties.settings.ts",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../enviroment.properties.setting.ts",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../openapi.properties.setting.ts",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/application.properties.settings.ts",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/enviroment.properties.setting",{"_index":466,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["config/enviroment.properties.setting.ts",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/openapi.properties.setting.ts",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configdefaultmodule",{"_index":465,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(compare",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(error",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(secret",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(user",{"_index":361,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/AuthService.html":{}}}],["const",{"_index":544,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}}}],["constructor(accountservice",{"_index":472,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":517,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(commonservice",{"_index":243,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["constructor(packagerepository",{"_index":871,"title":{},"body":{"injectables/PackagesService.html":{}}}],["constructor(partial",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{}}}],["constructor(private",{"_index":150,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["constructor(profilerepository",{"_index":329,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["constructor(typesrepository",{"_index":412,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["constructor(usersrepository",{"_index":343,"title":{},"body":{"injectables/AccountsService.html":{}}}],["controller",{"_index":95,"title":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('accounts",{"_index":149,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{}}}],["controller('agents",{"_index":452,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('authenticate",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('customers",{"_index":760,"title":{},"body":{"controllers/CustomersController.html":{}}}],["controller('packages",{"_index":857,"title":{},"body":{"controllers/PackagesController.html":{}}}],["controller('users",{"_index":922,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":97,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["correctamente",{"_index":153,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["correctamente'})@apibearerauth()@apiunauthorizedresponse()@apiheader({name",{"_index":838,"title":{},"body":{"controllers/PackagesController.html":{}}}],["correctamente'})@apibearerauth()@apiunauthorizedresponse()@useguards(jwtauthguard)@delete(':id",{"_index":115,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{}}}],["correctamente'})@apibearerauth()@apiunauthorizedresponse()@useguards(jwtauthguard)@get",{"_index":393,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["correctamente'})@apibearerauth()@apiunauthorizedresponse()@useguards(jwtauthguard)@get('/:page/:limit",{"_index":443,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{}}}],["correctamente'})@apibearerauth()@apiunauthorizedresponse()@useguards(jwtauthguard)@get(':id",{"_index":109,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{}}}],["correctamente'})@apibearerauth()@apiunauthorizedresponse()@useguards(jwtauthguard)@patch(':id",{"_index":309,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["correctamente'})@apibearerauth()@apiunauthorizedresponse()@useguards(jwtauthguard)@post",{"_index":201,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{}}}],["correctamente'})@apiunauthorizedresponse()@apibearerauth()@useguards(jwtauthguard)@patch(':id",{"_index":121,"title":{},"body":{"controllers/AccountsController.html":{}}}],["coverage",{"_index":943,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":197,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AccountsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(@body",{"_index":211,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["create(createaccountdto",{"_index":346,"title":{},"body":{"injectables/AccountsService.html":{}}}],["create(createaccountscredentialdto",{"_index":198,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{}}}],["create(createagentdto",{"_index":437,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{}}}],["create(createcustomerdto",{"_index":751,"title":{},"body":{"controllers/CustomersController.html":{},"injectables/CustomersService.html":{}}}],["create(createpackagedto",{"_index":836,"title":{},"body":{"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["create(createuserdto",{"_index":915,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createaccesstoken",{"_index":586,"title":{"classes/CreateAccessToken.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["createaccesstoken})@apiresponse({status",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{}}}],["createaccountdto",{"_index":138,"title":{"classes/CreateAccountDto.html":{}},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"injectables/AgentsService.html":{},"classes/CreateAccountDto.html":{},"injectables/CustomersService.html":{},"classes/UpdateAccountDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createaccountdto.accounttypeid",{"_index":360,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountscredentialdto",{"_index":199,"title":{"classes/CreateAccountsCredentialDto.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["createaccountscredentialdto.credential",{"_index":258,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["createaccountscredentialdto})@apiresponse({status",{"_index":200,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["createaccountsprofiledto",{"_index":314,"title":{"classes/CreateAccountsProfileDto.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["createaccountstypedto",{"_index":398,"title":{"classes/CreateAccountsTypeDto.html":{}},"body":{"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["createagentdto",{"_index":438,"title":{"classes/CreateAgentDto.html":{}},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/CreateAgentDto.html":{},"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["createagentdto.email",{"_index":494,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.firstname",{"_index":488,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.lastname",{"_index":490,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.password",{"_index":499,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto.username",{"_index":492,"title":{},"body":{"injectables/AgentsService.html":{}}}],["createagentdto})@apiresponse({status",{"_index":439,"title":{},"body":{"controllers/AgentsController.html":{}}}],["createcustomerdto",{"_index":709,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["createcustomerdto.email",{"_index":776,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.firstname",{"_index":773,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.lastname",{"_index":774,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.password",{"_index":777,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto.username",{"_index":775,"title":{},"body":{"injectables/CustomersService.html":{}}}],["createcustomerdto})@apiresponse({status",{"_index":752,"title":{},"body":{"controllers/CustomersController.html":{}}}],["created",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["createdatecolumn",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["createpackagedto",{"_index":720,"title":{"classes/CreatePackageDto.html":{}},"body":{"classes/CreatePackageDto.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["createpackagedto})@apiresponse({status",{"_index":837,"title":{},"body":{"controllers/PackagesController.html":{}}}],["createuserdto",{"_index":738,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":939,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.firstname",{"_index":936,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.lastname",{"_index":937,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":940,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.username",{"_index":938,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto})@apiresponse({status",{"_index":916,"title":{},"body":{"controllers/UsersController.html":{}}}],["credential",{"_index":168,"title":{},"body":{"classes/AccountsCredential.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"classes/CreateAccountsCredentialDto.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.account",{"_index":497,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.credential",{"_index":498,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.dto",{"_index":207,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/UpdateAccountsCredentialDto.html":{}}}],["credential.dto.ts",{"_index":185,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["credential.dto.ts:11",{"_index":697,"title":{},"body":{"classes/CreateAccountsCredentialDto.html":{}}}],["credential.dto.ts:12",{"_index":190,"title":{},"body":{"classes/AccountsCredentialDto.html":{}}}],["credential.dto.ts:14",{"_index":187,"title":{},"body":{"classes/AccountsCredentialDto.html":{}}}],["credential.dto.ts:16",{"_index":191,"title":{},"body":{"classes/AccountsCredentialDto.html":{}}}],["credential.dto.ts:18",{"_index":188,"title":{},"body":{"classes/AccountsCredentialDto.html":{}}}],["credential.dto.ts:7",{"_index":189,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["credential.dto.ts:9",{"_index":186,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["credential.entity",{"_index":231,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credential.entity.ts",{"_index":167,"title":{},"body":{"classes/AccountsCredential.html":{},"coverage.html":{}}}],["credential.entity.ts:16",{"_index":175,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:19",{"_index":173,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:23",{"_index":171,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:26",{"_index":178,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:29",{"_index":172,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:32",{"_index":179,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.entity.ts:35",{"_index":174,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["credential.isactive",{"_index":500,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credentialrepository",{"_index":245,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials",{"_index":196,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credentials.controller",{"_index":232,"title":{},"body":{"modules/AccountsCredentialsModule.html":{}}}],["credentials.controller.ts",{"_index":195,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"coverage.html":{}}}],["credentials.controller.ts:27",{"_index":202,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["credentials.controller.ts:40",{"_index":203,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["credentials.module",{"_index":468,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["credentials.module.ts",{"_index":226,"title":{},"body":{"modules/AccountsCredentialsModule.html":{}}}],["credentials.service",{"_index":206,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["credentials.service.ts",{"_index":240,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"coverage.html":{}}}],["credentials.service.ts:10",{"_index":247,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:17",{"_index":248,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:28",{"_index":251,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:34",{"_index":253,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials.service.ts:40",{"_index":254,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["credentials/accounts",{"_index":194,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["credentials/dto/accounts",{"_index":184,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"coverage.html":{}}}],["credentials/dto/create",{"_index":696,"title":{},"body":{"classes/CreateAccountsCredentialDto.html":{},"coverage.html":{}}}],["credentials/dto/update",{"_index":888,"title":{},"body":{"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["credentials/entities/accounts",{"_index":166,"title":{},"body":{"classes/AccountsCredential.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentials/services/accounts",{"_index":239,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentialservice",{"_index":473,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["customer",{"_index":746,"title":{"classes/Customer.html":{}},"body":{"classes/Customer.html":{},"coverage.html":{}}}],["customer.dto",{"_index":757,"title":{},"body":{"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts",{"_index":711,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["customer.dto.ts:11",{"_index":716,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:14",{"_index":719,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:17",{"_index":718,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:20",{"_index":713,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:23",{"_index":717,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:5",{"_index":714,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:8",{"_index":715,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customers",{"_index":750,"title":{},"body":{"controllers/CustomersController.html":{}}}],["customers.controller",{"_index":767,"title":{},"body":{"modules/CustomersModule.html":{}}}],["customers/customers.module",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["customerscontroller",{"_index":748,"title":{"controllers/CustomersController.html":{}},"body":{"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"coverage.html":{}}}],["customersmodule",{"_index":554,"title":{"modules/CustomersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules.html":{},"overview.html":{}}}],["customersservice",{"_index":755,"title":{"injectables/CustomersService.html":{}},"body":{"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":543,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["database_url",{"_index":1043,"title":{},"body":{"index.html":{}}}],["date",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["de",{"_index":582,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["decorators",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"classes/AcctionResponseDto.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":182,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":128,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":162,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/PackagesController.html":{}}}],["deletedat",{"_index":38,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["deletedatecolumn",{"_index":52,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["dependencies",{"_index":217,"title":{"dependencies.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":365,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["description",{"_index":107,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/CreatePackageDto.html":{},"controllers/CustomersController.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":1022,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developmentsupport",{"_index":1053,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1030,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":521,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["done(null",{"_index":549,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["dto/access",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/account.dto",{"_index":145,"title":{},"body":{"controllers/AccountsController.html":{}}}],["dto/accounts",{"_index":209,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{}}}],["dto/create",{"_index":139,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/package.dto",{"_index":855,"title":{},"body":{"controllers/PackagesController.html":{}}}],["dto/update",{"_index":141,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":1039,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1010,"title":{},"body":{"index.html":{}}}],["email",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"injectables/AccountsService.html":{},"injectables/AuthService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/UserDto.html":{}}}],["entities",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["entities/account.entity",{"_index":270,"title":{},"body":{"modules/AccountsModule.html":{},"injectables/AccountsService.html":{}}}],["entities/accounts",{"_index":230,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{}}}],["entities/package.entity",{"_index":868,"title":{},"body":{"modules/PackagesModule.html":{},"injectables/PackagesService.html":{}}}],["entity",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["env",{"_index":1052,"title":{},"body":{"index.html":{}}}],["env.${process.env.node_env",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.development",{"_index":1042,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":522,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{}}}],["error,undefined",{"_index":523,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["expiresin",{"_index":623,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":229,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{}}}],["express",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":510,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{}}}],["extra",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["extractjwt",{"_index":783,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":788,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/AccountsProfile.html":{},"modules/AppModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":341,"title":{},"body":{"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@param('limit",{"_index":455,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["findall(limit",{"_index":441,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["findall(limitskip",{"_index":348,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["findall(offset",{"_index":478,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["findbyaccount",{"_index":242,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["findbyaccount(user",{"_index":250,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["findbyemail",{"_index":342,"title":{},"body":{"injectables/AccountsService.html":{}}}],["findbyemail(email",{"_index":352,"title":{},"body":{"injectables/AccountsService.html":{}}}],["findone",{"_index":101,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["findone(@param('id",{"_index":156,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/PackagesController.html":{}}}],["findone(id",{"_index":104,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["findonebyusertype",{"_index":411,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["findonebyusertype(typeuser",{"_index":417,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["firstname",{"_index":40,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["framework",{"_index":1008,"title":{},"body":{"index.html":{}}}],["function",{"_index":527,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"coverage.html":{}}}],["functions",{"_index":1002,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatedmaps",{"_index":426,"title":{},"body":{"classes/AcctionResponseDto.html":{}}}],["generatetoken",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:page/:limit",{"_index":454,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["get(':id",{"_index":155,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/PackagesController.html":{}}}],["getting",{"_index":1004,"title":{"index.html":{}},"body":{}}],["grow",{"_index":1058,"title":{},"body":{"index.html":{}}}],["guards/apikey",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{}}}],["hashpassword",{"_index":670,"title":{},"body":{"injectables/CommonService.html":{}}}],["hashpassword(password",{"_index":672,"title":{},"body":{"injectables/CommonService.html":{}}}],["header",{"_index":536,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["headerapikey",{"_index":530,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"dependencies.html":{}}}],["headerapikeystrategy",{"_index":528,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["heigth",{"_index":723,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["here",{"_index":1069,"title":{},"body":{"index.html":{}}}],["http",{"_index":537,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["https://nestjs.com",{"_index":1076,"title":{},"body":{"index.html":{}}}],["id",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":789,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["images",{"_index":1034,"title":{},"body":{"index.html":{}}}],["import",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":228,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index()@column({length",{"_index":69,"title":{},"body":{"classes/Account.html":{}}}],["index()@isemail()@column({length",{"_index":54,"title":{},"body":{"classes/Account.html":{}}}],["index()@manytoone(undefined",{"_index":170,"title":{},"body":{"classes/AccountsCredential.html":{}}}],["index({unique",{"_index":379,"title":{},"body":{"classes/AccountsType.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":237,"title":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":255,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/PackagesService.html":{}}}],["injectrepository(account",{"_index":357,"title":{},"body":{"injectables/AccountsService.html":{}}}],["injectrepository(accountscredential",{"_index":257,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["injectrepository(accountsprofile",{"_index":335,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["injectrepository(accountstype",{"_index":420,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["injectrepository(package",{"_index":879,"title":{},"body":{"injectables/PackagesService.html":{}}}],["installation",{"_index":1018,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1020,"title":{},"body":{"index.html":{}}}],["isactive",{"_index":169,"title":{},"body":{"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"injectables/AccountsProfilesService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["isemail",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/CreateAccessToken.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":685,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["isglobal",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"classes/CreateAccessToken.html":{}}}],["isnotempty()@apiproperty",{"_index":687,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["issuer",{"_index":627,"title":{},"body":{"modules/AuthModule.html":{}}}],["join",{"_index":1065,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":289,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["jsonb",{"_index":285,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["jwt",{"_index":785,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_secret=b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79",{"_index":1045,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":142,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":787,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":614,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":619,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":608,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1073,"title":{},"body":{"index.html":{}}}],["key",{"_index":540,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PackagesController.html":{}}}],["key.strategy",{"_index":618,"title":{},"body":{"modules/AuthModule.html":{}}}],["key.strategy.ts",{"_index":514,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"coverage.html":{}}}],["key.strategy.ts:15",{"_index":525,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["key.strategy.ts:7",{"_index":519,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["large",{"_index":724,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["lastname",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["length",{"_index":78,"title":{},"body":{"classes/Account.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["license",{"_index":1079,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1055,"title":{},"body":{"index.html":{}}}],["limit",{"_index":445,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["limitskip",{"_index":351,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["limittake",{"_index":349,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["llave",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["local",{"_index":800,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":592,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/PackagesController.html":{},"coverage.html":{}}}],["localstrategy",{"_index":609,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["manytoone",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/Package.html":{}}}],["manytoone(undefined",{"_index":46,"title":{},"body":{"classes/Account.html":{}}}],["matching",{"_index":32,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":100,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mikro",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":1001,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1054,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1026,"title":{},"body":{"index.html":{}}}],["module",{"_index":214,"title":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":216,"title":{"modules.html":{}},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1068,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1074,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":1015,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1078,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":130,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":615,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":509,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"classes/AcctionResponseDto.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":234,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"modules/AppModule.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"dependencies.html":{}}}],["new",{"_index":485,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":1007,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1019,"title":{},"body":{"index.html":{}}}],["null",{"_index":547,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{}}}],["nullable",{"_index":58,"title":{},"body":{"classes/Account.html":{},"classes/AccountsProfile.html":{}}}],["number",{"_index":63,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/CommonService.html":{},"classes/CreatePackageDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":283,"title":{},"body":{"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{}}}],["offset",{"_index":480,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["offset,take",{"_index":942,"title":{},"body":{"injectables/UsersService.html":{}}}],["onetoone",{"_index":288,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":277,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["open",{"_index":1056,"title":{},"body":{"index.html":{}}}],["openapi",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":364,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/PackagesService.html":{}}}],["orm/core",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["orm/postgresql",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":225,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1083,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":804,"title":{"classes/Package.html":{},"dependencies.html":{}},"body":{"classes/Package.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"coverage.html":{}}}],["package.dto",{"_index":854,"title":{},"body":{"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdatePackageDto.html":{}}}],["package.dto.ts",{"_index":722,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["package.dto.ts:11",{"_index":734,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:13",{"_index":733,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:15",{"_index":732,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:17",{"_index":731,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:19",{"_index":736,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:5",{"_index":730,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:7",{"_index":735,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["package.dto.ts:9",{"_index":737,"title":{},"body":{"classes/CreatePackageDto.html":{}}}],["packagedto",{"_index":819,"title":{"classes/PackageDto.html":{}},"body":{"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"coverage.html":{}}}],["packagerepository",{"_index":873,"title":{},"body":{"injectables/PackagesService.html":{}}}],["packages",{"_index":835,"title":{},"body":{"controllers/PackagesController.html":{}}}],["packages.controller",{"_index":867,"title":{},"body":{"modules/PackagesModule.html":{}}}],["packages/packages.module",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["packagescontroller",{"_index":833,"title":{"controllers/PackagesController.html":{}},"body":{"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"coverage.html":{}}}],["packagesmodule",{"_index":555,"title":{"modules/PackagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PackagesModule.html":{},"modules.html":{},"overview.html":{}}}],["packagesservice",{"_index":852,"title":{"injectables/PackagesService.html":{}},"body":{"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"coverage.html":{},"overview.html":{}}}],["page",{"_index":442,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["param",{"_index":127,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":316,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["param('page",{"_index":456,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{}}}],["partialtype",{"_index":886,"title":{},"body":{"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaccountdto",{"_index":887,"title":{},"body":{"classes/UpdateAccountDto.html":{}}}],["partialtype(createaccountscredentialdto",{"_index":889,"title":{},"body":{"classes/UpdateAccountsCredentialDto.html":{}}}],["partialtype(createaccountsprofiledto",{"_index":891,"title":{},"body":{"classes/UpdateAccountsProfileDto.html":{}}}],["partialtype(createaccountstypedto",{"_index":893,"title":{},"body":{"classes/UpdateAccountsTypeDto.html":{}}}],["partialtype(createagentdto",{"_index":895,"title":{},"body":{"classes/UpdateAgentDto.html":{}}}],["partialtype(createcustomerdto",{"_index":897,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["partialtype(createpackagedto",{"_index":899,"title":{},"body":{"classes/UpdatePackageDto.html":{}}}],["partialtype(createuserdto",{"_index":903,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":529,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":613,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":531,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(headerapikeystrategy",{"_index":534,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["passportstrategy(strategy",{"_index":786,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/UserDto.html":{}}}],["passwordfield",{"_index":802,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["patch",{"_index":126,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":159,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/PackagesController.html":{}}}],["payload",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":792,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":793,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":1066,"title":{},"body":{"index.html":{}}}],["post",{"_index":124,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["postgres",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["postgres://user:password@localhost:5432/db",{"_index":1044,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":99,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["primarygeneratedcolumn",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["private",{"_index":210,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}}}],["procesado",{"_index":108,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["process.env.api_key",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.app_iss",{"_index":628,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.app_url",{"_index":626,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.database_url",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_secret",{"_index":621,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.prefix}/${process.env.version",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1028,"title":{},"body":{"index.html":{}}}],["profile",{"_index":276,"title":{},"body":{"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.dto",{"_index":311,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"classes/UpdateAccountsProfileDto.html":{}}}],["profile.dto.ts",{"_index":292,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":293,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.dto.ts:12",{"_index":297,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:14",{"_index":294,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:16",{"_index":299,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:18",{"_index":295,"title":{},"body":{"classes/AccountsProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":296,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.dto.ts:8",{"_index":298,"title":{},"body":{"classes/AccountsProfileDto.html":{},"classes/CreateAccountsProfileDto.html":{}}}],["profile.entity",{"_index":325,"title":{},"body":{"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{}}}],["profile.entity.ts",{"_index":275,"title":{},"body":{"classes/AccountsProfile.html":{},"coverage.html":{}}}],["profile.entity.ts:18",{"_index":281,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:21",{"_index":286,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:25",{"_index":278,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:28",{"_index":282,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:31",{"_index":279,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:34",{"_index":287,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profile.entity.ts:37",{"_index":280,"title":{},"body":{"classes/AccountsProfile.html":{}}}],["profilerepository",{"_index":331,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles",{"_index":304,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.controller",{"_index":324,"title":{},"body":{"modules/AccountsProfilesModule.html":{}}}],["profiles.controller.ts",{"_index":303,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"coverage.html":{}}}],["profiles.controller.ts:26",{"_index":305,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.controller.ts:40",{"_index":310,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.controller.ts:57",{"_index":306,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["profiles.module",{"_index":469,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["profiles.module.ts",{"_index":323,"title":{},"body":{"modules/AccountsProfilesModule.html":{}}}],["profiles.service",{"_index":313,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{}}}],["profiles.service.ts",{"_index":328,"title":{},"body":{"injectables/AccountsProfilesService.html":{},"coverage.html":{}}}],["profiles.service.ts:15",{"_index":332,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles.service.ts:21",{"_index":334,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles.service.ts:25",{"_index":333,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles.service.ts:9",{"_index":330,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["profiles/accounts",{"_index":302,"title":{},"body":{"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["profiles/dto/accounts",{"_index":291,"title":{},"body":{"classes/AccountsProfileDto.html":{},"coverage.html":{}}}],["profiles/dto/create",{"_index":698,"title":{},"body":{"classes/CreateAccountsProfileDto.html":{},"coverage.html":{}}}],["profiles/dto/update",{"_index":890,"title":{},"body":{"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["profiles/entities/accounts",{"_index":274,"title":{},"body":{"classes/AccountsProfile.html":{},"coverage.html":{}}}],["profiles/services/accounts",{"_index":327,"title":{},"body":{"injectables/AccountsProfilesService.html":{},"coverage.html":{}}}],["progressive",{"_index":1006,"title":{},"body":{"index.html":{}}}],["project",{"_index":1057,"title":{},"body":{"index.html":{}}}],["promise",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/LocalStrategy.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/AcctionResponseDto.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"classes/UserDto.html":{}}}],["providers",{"_index":227,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":515,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["raw",{"_index":427,"title":{},"body":{"classes/AcctionResponseDto.html":{}}}],["read",{"_index":1067,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":151,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["rebuild",{"_index":1033,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["rejectunauthorized",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["remove",{"_index":102,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["remove(@param('id",{"_index":163,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/PackagesController.html":{}}}],["remove(id",{"_index":112,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["repository",{"_index":246,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/PackagesService.html":{},"index.html":{}}}],["req",{"_index":541,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{}}}],["res",{"_index":446,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":224,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response.dto",{"_index":147,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/PackagesController.html":{}}}],["response.dto.ts",{"_index":424,"title":{},"body":{"classes/AcctionResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:5",{"_index":430,"title":{},"body":{"classes/AcctionResponseDto.html":{}}}],["response.dto.ts:7",{"_index":431,"title":{},"body":{"classes/AcctionResponseDto.html":{}}}],["response.dto.ts:9",{"_index":428,"title":{},"body":{"classes/AcctionResponseDto.html":{}}}],["result",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":157,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":111,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["router",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1023,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":681,"title":{},"body":{"injectables/CommonService.html":{}}}],["saltrounds",{"_index":669,"title":{},"body":{"injectables/CommonService.html":{}}}],["scalable",{"_index":1011,"title":{},"body":{"index.html":{}}}],["secret",{"_index":620,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secret.credential",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":790,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":1012,"title":{},"body":{"index.html":{}}}],["services",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/accounts",{"_index":205,"title":{},"body":{"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{}}}],["services/accounts.service",{"_index":137,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{}}}],["services/agents.service",{"_index":448,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["services/auth.service",{"_index":533,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["services/common.service",{"_index":667,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/customers.service",{"_index":756,"title":{},"body":{"controllers/CustomersController.html":{},"modules/CustomersModule.html":{}}}],["services/packages.service",{"_index":853,"title":{},"body":{"controllers/PackagesController.html":{},"modules/PackagesModule.html":{}}}],["services/users.service",{"_index":920,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["servicio",{"_index":598,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["servicio'})@useguards(localauthguard)@apisecurity('api_key",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["side",{"_index":1013,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":622,"title":{},"body":{"modules/AuthModule.html":{}}}],["skip",{"_index":366,"title":{},"body":{"injectables/AccountsService.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"modules/AccountsModule.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"classes/Agent.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyAuthGuard.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"controllers/CustomersController.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"classes/UpdateAgentDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdatePackageDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1060,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/accounts",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"modules/AccountsCredentialsModule.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"modules/AccountsProfilesModule.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"modules/CustomersModule.html":{},"injectables/CustomersService.html":{},"classes/UpdateAccountsCredentialDto.html":{},"classes/UpdateAccountsProfileDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/accounts/accounts.controller.ts",{"_index":98,"title":{},"body":{"controllers/AccountsController.html":{},"coverage.html":{}}}],["src/accounts/accounts.controller.ts:26",{"_index":110,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:40",{"_index":122,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:53",{"_index":116,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.module",{"_index":467,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["src/accounts/accounts.module.ts",{"_index":269,"title":{},"body":{"modules/AccountsModule.html":{}}}],["src/accounts/dto/account.dto",{"_index":192,"title":{},"body":{"classes/AccountsCredentialDto.html":{},"controllers/AgentsController.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{}}}],["src/accounts/dto/account.dto.ts",{"_index":81,"title":{},"body":{"classes/AccountDto.html":{},"coverage.html":{}}}],["src/accounts/dto/account.dto.ts:10",{"_index":89,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:12",{"_index":91,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:14",{"_index":86,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:16",{"_index":83,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:18",{"_index":84,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:19",{"_index":90,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:20",{"_index":85,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:6",{"_index":88,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:8",{"_index":87,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/create",{"_index":481,"title":{},"body":{"injectables/AgentsService.html":{},"classes/CreateAccountDto.html":{},"injectables/CustomersService.html":{},"coverage.html":{}}}],["src/accounts/dto/update",{"_index":885,"title":{},"body":{"classes/UpdateAccountDto.html":{},"coverage.html":{}}}],["src/accounts/entities/account.entity",{"_index":123,"title":{},"body":{"controllers/AccountsController.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/CreateAccountsCredentialDto.html":{}}}],["src/accounts/entities/account.entity.ts",{"_index":35,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/accounts/entities/account.entity.ts:17",{"_index":65,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:20",{"_index":62,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:23",{"_index":66,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:27",{"_index":70,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:32",{"_index":60,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:35",{"_index":48,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:38",{"_index":51,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:41",{"_index":68,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/entities/account.entity.ts:44",{"_index":53,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/services/accounts.service",{"_index":482,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["src/accounts/services/accounts.service.ts",{"_index":340,"title":{},"body":{"injectables/AccountsService.html":{},"coverage.html":{}}}],["src/accounts/services/accounts.service.ts:10",{"_index":344,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:16",{"_index":347,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:25",{"_index":350,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:40",{"_index":354,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:44",{"_index":353,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:50",{"_index":356,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/services/accounts.service.ts:54",{"_index":355,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/agents/agents.controller.ts",{"_index":435,"title":{},"body":{"controllers/AgentsController.html":{},"coverage.html":{}}}],["src/agents/agents.controller.ts:24",{"_index":440,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/agents/agents.controller.ts:37",{"_index":444,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/agents/agents.module.ts",{"_index":463,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/agents/dto/create",{"_index":700,"title":{},"body":{"classes/CreateAgentDto.html":{},"coverage.html":{}}}],["src/agents/dto/update",{"_index":894,"title":{},"body":{"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["src/agents/entities/agent.entity.ts",{"_index":433,"title":{},"body":{"classes/Agent.html":{},"coverage.html":{}}}],["src/agents/services/agents.service.ts",{"_index":471,"title":{},"body":{"injectables/AgentsService.html":{},"coverage.html":{}}}],["src/agents/services/agents.service.ts:12",{"_index":475,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/agents/services/agents.service.ts:20",{"_index":477,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/agents/services/agents.service.ts:42",{"_index":479,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/app.module.ts",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":585,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":610,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/dto/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["src/auth/dto/create",{"_index":684,"title":{},"body":{"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["src/auth/guards/apikey",{"_index":506,"title":{},"body":{"injectables/ApiKeyAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":143,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":794,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"controllers/PackagesController.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:10",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:18",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:48",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:56",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/api",{"_index":513,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":779,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:16",{"_index":782,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:7",{"_index":780,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":796,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:16",{"_index":799,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:8",{"_index":797,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/common/common.module",{"_index":235,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AgentsModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["src/common/common.module.ts",{"_index":666,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/dto/acction",{"_index":146,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"classes/AcctionResponseDto.html":{},"coverage.html":{}}}],["src/common/services/common.service",{"_index":256,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["src/common/services/common.service.ts",{"_index":668,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/common/services/common.service.ts:12",{"_index":673,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/common/services/common.service.ts:6",{"_index":678,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/common/services/common.service.ts:8",{"_index":675,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/customers/customers.controller.ts",{"_index":749,"title":{},"body":{"controllers/CustomersController.html":{},"coverage.html":{}}}],["src/customers/customers.controller.ts:24",{"_index":753,"title":{},"body":{"controllers/CustomersController.html":{}}}],["src/customers/customers.controller.ts:37",{"_index":754,"title":{},"body":{"controllers/CustomersController.html":{}}}],["src/customers/customers.module.ts",{"_index":766,"title":{},"body":{"modules/CustomersModule.html":{}}}],["src/customers/dto/create",{"_index":710,"title":{},"body":{"classes/CreateCustomerDto.html":{},"coverage.html":{}}}],["src/customers/dto/update",{"_index":896,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["src/customers/entities/customer.entity.ts",{"_index":747,"title":{},"body":{"classes/Customer.html":{},"coverage.html":{}}}],["src/customers/services/customers.service.ts",{"_index":768,"title":{},"body":{"injectables/CustomersService.html":{},"coverage.html":{}}}],["src/customers/services/customers.service.ts:12",{"_index":769,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/customers/services/customers.service.ts:20",{"_index":770,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/customers/services/customers.service.ts:43",{"_index":771,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/main.ts",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/packages/dto/create",{"_index":721,"title":{},"body":{"classes/CreatePackageDto.html":{},"coverage.html":{}}}],["src/packages/dto/package.dto.ts",{"_index":820,"title":{},"body":{"classes/PackageDto.html":{},"coverage.html":{}}}],["src/packages/dto/package.dto.ts:11",{"_index":832,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:13",{"_index":829,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:15",{"_index":827,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:17",{"_index":826,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:19",{"_index":824,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:21",{"_index":831,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:23",{"_index":821,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:25",{"_index":828,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:27",{"_index":822,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:5",{"_index":825,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:7",{"_index":823,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/package.dto.ts:9",{"_index":830,"title":{},"body":{"classes/PackageDto.html":{}}}],["src/packages/dto/update",{"_index":898,"title":{},"body":{"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["src/packages/entities/package.entity.ts",{"_index":805,"title":{},"body":{"classes/Package.html":{},"coverage.html":{}}}],["src/packages/entities/package.entity.ts:12",{"_index":816,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:15",{"_index":818,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:18",{"_index":815,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:21",{"_index":813,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:24",{"_index":811,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:27",{"_index":809,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:30",{"_index":817,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:33",{"_index":806,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:36",{"_index":814,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:39",{"_index":807,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:6",{"_index":810,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/entities/package.entity.ts:9",{"_index":808,"title":{},"body":{"classes/Package.html":{}}}],["src/packages/packages.controller.ts",{"_index":834,"title":{},"body":{"controllers/PackagesController.html":{},"coverage.html":{}}}],["src/packages/packages.controller.ts:106",{"_index":846,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:31",{"_index":840,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:49",{"_index":842,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:69",{"_index":844,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.controller.ts:88",{"_index":850,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.module.ts",{"_index":866,"title":{},"body":{"modules/PackagesModule.html":{}}}],["src/packages/services/packages.service.ts",{"_index":870,"title":{},"body":{"injectables/PackagesService.html":{},"coverage.html":{}}}],["src/packages/services/packages.service.ts:15",{"_index":874,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:19",{"_index":875,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:29",{"_index":876,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:33",{"_index":878,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:37",{"_index":877,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/packages/services/packages.service.ts:9",{"_index":872,"title":{},"body":{"injectables/PackagesService.html":{}}}],["src/users/dto/create",{"_index":739,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":901,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts",{"_index":906,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts:11",{"_index":910,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:13",{"_index":912,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:15",{"_index":911,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:5",{"_index":909,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:7",{"_index":907,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:9",{"_index":908,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/entities/user.entity.ts",{"_index":904,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts",{"_index":930,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts:13",{"_index":931,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:21",{"_index":932,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:44",{"_index":933,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":914,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:24",{"_index":917,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":918,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":928,"title":{},"body":{"modules/UsersModule.html":{}}}],["ssl",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":1024,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1027,"title":{},"body":{"index.html":{}}}],["start:prodrunning",{"_index":1029,"title":{},"body":{"index.html":{}}}],["started",{"_index":1005,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1017,"title":{},"body":{"index.html":{}}}],["statements",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["statepassword",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["status",{"_index":152,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":1070,"title":{},"body":{"index.html":{}}}],["strategies/api",{"_index":617,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/jwt.strategy",{"_index":616,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":612,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":784,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"controllers/AccountsCredentialsController.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"classes/UserDto.html":{}}}],["sub",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":535,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1061,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1081,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":367,"title":{},"body":{"injectables/AccountsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["telephone",{"_index":702,"title":{},"body":{"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{}}}],["test",{"_index":1036,"title":{},"body":{"index.html":{}}}],["test:covenviroment",{"_index":1041,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1040,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1038,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1059,"title":{},"body":{"index.html":{}}}],["this.accountscredentialsservice.create(createaccountscredentialdto",{"_index":212,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["this.accountscredentialsservice.remove(+id",{"_index":213,"title":{},"body":{"controllers/AccountsCredentialsController.html":{}}}],["this.accountservice.create(usernew",{"_index":496,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["this.accountservice.findall",{"_index":941,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.accountservice.findall(offset",{"_index":504,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{}}}],["this.accountservice.findbyemail(email",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.accountsprofilesservice.findone(+id",{"_index":315,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["this.accountsprofilesservice.remove(+id",{"_index":318,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["this.accountsprofilesservice.update(+id",{"_index":317,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["this.accountsservice.findone(+id",{"_index":158,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.remove(+id",{"_index":164,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.update(+id",{"_index":161,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountstypesservice.findall",{"_index":400,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["this.accountstypesservice.findone(+id",{"_index":401,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["this.accounttypeservice.findonebyusertype('agent",{"_index":483,"title":{},"body":{"injectables/AgentsService.html":{}}}],["this.accounttypeservice.findonebyusertype('client",{"_index":772,"title":{},"body":{"injectables/CustomersService.html":{}}}],["this.accounttypeservice.findonebyusertype('user",{"_index":935,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.agentsservice.create(createagentdto",{"_index":453,"title":{},"body":{"controllers/AgentsController.html":{}}}],["this.agentsservice.findall(skip",{"_index":458,"title":{},"body":{"controllers/AgentsController.html":{}}}],["this.authservice.generatetoken(req.user",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(username",{"_index":803,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.validateapikey(apikey",{"_index":546,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["this.commonservice.hashpassword",{"_index":260,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.commonservice.verifypassword",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.credentialrepository.findone",{"_index":262,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.credentialrepository.save",{"_index":261,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.credentialrepository.softdelete(id",{"_index":264,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.credentialservice.create(credential",{"_index":501,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["this.credentialservice.findbyaccount(user",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.customersservice.create(createcustomerdto",{"_index":761,"title":{},"body":{"controllers/CustomersController.html":{}}}],["this.customersservice.findall(skip",{"_index":762,"title":{},"body":{"controllers/CustomersController.html":{}}}],["this.findone(id",{"_index":263,"title":{},"body":{"injectables/AccountsCredentialsService.html":{}}}],["this.jwtservice.sign(payload",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.packagerepository.find",{"_index":881,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.findone(id",{"_index":882,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.save(createpackagedto",{"_index":880,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.softdelete(id",{"_index":884,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagerepository.update(id",{"_index":883,"title":{},"body":{"injectables/PackagesService.html":{}}}],["this.packagesservice.create(createpackagedto",{"_index":858,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.findall(skip",{"_index":859,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.findone(+id",{"_index":860,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.remove(+id",{"_index":862,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.packagesservice.update(+id",{"_index":861,"title":{},"body":{"controllers/PackagesController.html":{}}}],["this.profilerepository.findone",{"_index":336,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["this.profilerepository.softdelete(id",{"_index":339,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["this.profilerepository.update(id",{"_index":338,"title":{},"body":{"injectables/AccountsProfilesService.html":{}}}],["this.typesrepository.find",{"_index":421,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["this.typesrepository.findone",{"_index":423,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["this.typesrepository.findone(id",{"_index":422,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["this.usersrepository.create(createaccountdto",{"_index":358,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.find",{"_index":363,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.findone",{"_index":369,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.findone(id",{"_index":368,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.save(user",{"_index":362,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.softdelete(id",{"_index":371,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersrepository.update(id",{"_index":370,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":923,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(skip",{"_index":924,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validate(apikey",{"_index":542,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["throw",{"_index":548,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["title",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token.dto",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token.dto.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"classes/CreateAccessToken.html":{},"coverage.html":{}}}],["token.dto.ts:11",{"_index":688,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["token.dto.ts:6",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.dto.ts:8",{"_index":686,"title":{},"body":{"classes/CreateAccessToken.html":{}}}],["touch",{"_index":1071,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1049,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":57,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"injectables/AccountsProfilesService.html":{},"classes/AccountsType.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["true})@column({length",{"_index":380,"title":{},"body":{"classes/AccountsType.html":{}}}],["try",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":1077,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/AcctionResponseDto.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"classes/CreateAccessToken.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsCredentialDto.html":{},"classes/CreateAccountsProfileDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreatePackageDto.html":{},"classes/CreateUserDto.html":{},"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Package.html":{},"classes/PackageDto.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.dto",{"_index":94,"title":{},"body":{"classes/AccountDto.html":{},"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/CreateAccountDto.html":{},"classes/UpdateAccountsTypeDto.html":{}}}],["type.dto.ts",{"_index":382,"title":{},"body":{"classes/AccountsTypeDto.html":{},"classes/CreateAccountsTypeDto.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:11",{"_index":383,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.dto.ts:12",{"_index":387,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.dto.ts:13",{"_index":384,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.dto.ts:5",{"_index":385,"title":{},"body":{"classes/AccountsTypeDto.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["type.dto.ts:7",{"_index":388,"title":{},"body":{"classes/AccountsTypeDto.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["type.dto.ts:9",{"_index":386,"title":{},"body":{"classes/AccountsTypeDto.html":{}}}],["type.entity",{"_index":73,"title":{},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"modules/AccountsTypesModule.html":{},"injectables/AccountsTypesService.html":{}}}],["type.entity.ts",{"_index":372,"title":{},"body":{"classes/AccountsType.html":{},"coverage.html":{}}}],["type.entity.ts:10",{"_index":381,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:13",{"_index":377,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:16",{"_index":374,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:19",{"_index":378,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:22",{"_index":375,"title":{},"body":{"classes/AccountsType.html":{}}}],["type.entity.ts:6",{"_index":376,"title":{},"body":{"classes/AccountsType.html":{}}}],["typeentity",{"_index":502,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["typeorm",{"_index":77,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"injectables/AccountsCredentialsService.html":{},"classes/AccountsProfile.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"injectables/AccountsTypesService.html":{},"classes/Package.html":{},"injectables/PackagesService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":233,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AppModule.html":{},"modules/PackagesModule.html":{}}}],["typeormmodule.forfeature([account",{"_index":272,"title":{},"body":{"modules/AccountsModule.html":{}}}],["typeormmodule.forfeature([accountscredential",{"_index":236,"title":{},"body":{"modules/AccountsCredentialsModule.html":{}}}],["typeormmodule.forfeature([accountsprofile",{"_index":326,"title":{},"body":{"modules/AccountsProfilesModule.html":{}}}],["typeormmodule.forfeature([accountstype",{"_index":408,"title":{},"body":{"modules/AccountsTypesModule.html":{}}}],["typeormmodule.forfeature([package",{"_index":869,"title":{},"body":{"modules/PackagesModule.html":{}}}],["typeormmodule.forroot",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":392,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["types.controller",{"_index":407,"title":{},"body":{"modules/AccountsTypesModule.html":{}}}],["types.controller.ts",{"_index":391,"title":{},"body":{"controllers/AccountsTypesController.html":{},"coverage.html":{}}}],["types.controller.ts:23",{"_index":394,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["types.controller.ts:36",{"_index":395,"title":{},"body":{"controllers/AccountsTypesController.html":{}}}],["types.module",{"_index":470,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{}}}],["types.module.ts",{"_index":406,"title":{},"body":{"modules/AccountsTypesModule.html":{}}}],["types.service",{"_index":397,"title":{},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["types.service.ts",{"_index":410,"title":{},"body":{"injectables/AccountsTypesService.html":{},"coverage.html":{}}}],["types.service.ts:15",{"_index":415,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types.service.ts:19",{"_index":416,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types.service.ts:23",{"_index":418,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types.service.ts:9",{"_index":413,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["types/accounts",{"_index":390,"title":{},"body":{"controllers/AccountsTypesController.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CustomersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["types/dto/accounts",{"_index":93,"title":{},"body":{"classes/AccountDto.html":{},"classes/AccountsTypeDto.html":{},"classes/CreateAccountDto.html":{},"coverage.html":{}}}],["types/dto/create",{"_index":699,"title":{},"body":{"classes/CreateAccountsTypeDto.html":{},"coverage.html":{}}}],["types/dto/update",{"_index":892,"title":{},"body":{"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["types/entities/accounts",{"_index":72,"title":{},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"classes/AccountsType.html":{},"coverage.html":{}}}],["types/services/accounts",{"_index":409,"title":{},"body":{"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":1016,"title":{},"body":{"index.html":{}}}],["typesrepository",{"_index":414,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["typeuser",{"_index":419,"title":{},"body":{"injectables/AccountsTypesService.html":{}}}],["ui",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":532,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["unique",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/AccountsType.html":{}}}],["unit",{"_index":1037,"title":{},"body":{"index.html":{}}}],["units",{"_index":725,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["unknown",{"_index":249,"title":{},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"injectables/AccountsTypesService.html":{},"injectables/AgentsService.html":{},"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CommonService.html":{},"injectables/CustomersService.html":{},"injectables/JwtStrategy.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["up",{"_index":1032,"title":{},"body":{"index.html":{}}}],["update",{"_index":103,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["update(@param('id",{"_index":160,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/PackagesController.html":{}}}],["update(id",{"_index":117,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"injectables/AccountsService.html":{},"controllers/PackagesController.html":{},"injectables/PackagesService.html":{}}}],["updateaccountdto",{"_index":118,"title":{"classes/UpdateAccountDto.html":{}},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/UpdateAccountDto.html":{},"coverage.html":{}}}],["updateaccountdto})@apiresponse({status",{"_index":120,"title":{},"body":{"controllers/AccountsController.html":{}}}],["updateaccountscredentialdto",{"_index":208,"title":{"classes/UpdateAccountsCredentialDto.html":{}},"body":{"controllers/AccountsCredentialsController.html":{},"injectables/AccountsCredentialsService.html":{},"classes/UpdateAccountsCredentialDto.html":{},"coverage.html":{}}}],["updateaccountsprofiledto",{"_index":307,"title":{"classes/UpdateAccountsProfileDto.html":{}},"body":{"controllers/AccountsProfilesController.html":{},"injectables/AccountsProfilesService.html":{},"classes/UpdateAccountsProfileDto.html":{},"coverage.html":{}}}],["updateaccountsprofiledto})@apiresponse({status",{"_index":308,"title":{},"body":{"controllers/AccountsProfilesController.html":{}}}],["updateaccountstypedto",{"_index":399,"title":{"classes/UpdateAccountsTypeDto.html":{}},"body":{"controllers/AccountsTypesController.html":{},"injectables/AccountsTypesService.html":{},"classes/UpdateAccountsTypeDto.html":{},"coverage.html":{}}}],["updateagentdto",{"_index":450,"title":{"classes/UpdateAgentDto.html":{}},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/UpdateAgentDto.html":{},"coverage.html":{}}}],["updatecustomerdto",{"_index":758,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"controllers/CustomersController.html":{},"injectables/CustomersService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["updated",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountsCredential.html":{},"classes/AccountsCredentialDto.html":{},"classes/AccountsProfile.html":{},"classes/AccountsProfileDto.html":{},"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["updatedatecolumn",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/AccountsCredential.html":{},"classes/AccountsProfile.html":{},"classes/AccountsType.html":{},"classes/Package.html":{}}}],["updatepackagedto",{"_index":847,"title":{"classes/UpdatePackageDto.html":{}},"body":{"controllers/PackagesController.html":{},"injectables/PackagesService.html":{},"classes/UpdatePackageDto.html":{},"coverage.html":{}}}],["updatepackagedto})@apiresponse({status",{"_index":848,"title":{},"body":{"controllers/PackagesController.html":{}}}],["updateuserdto",{"_index":900,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":129,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/CustomersController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["useguards(apikeyauthguard",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":154,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AccountsCredentialsController.html":{},"controllers/AccountsProfilesController.html":{},"controllers/AccountsTypesController.html":{},"controllers/AgentsController.html":{},"controllers/CustomersController.html":{},"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["user",{"_index":252,"title":{"classes/User.html":{}},"body":{"injectables/AccountsCredentialsService.html":{},"injectables/AccountsService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"coverage.html":{}}}],["user.accounttype",{"_index":359,"title":{},"body":{"injectables/AccountsService.html":{}}}],["user.dto",{"_index":902,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":740,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":745,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:13",{"_index":744,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":741,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":742,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":743,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":905,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["userentity",{"_index":495,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":791,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAgentDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserDto.html":{}}}],["usernamefield",{"_index":801,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernew",{"_index":484,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.accounttypeid",{"_index":486,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.email",{"_index":493,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.firstname",{"_index":487,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.lastname",{"_index":489,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["usernew.username",{"_index":491,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":503,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/CustomersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":929,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":913,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":556,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":345,"title":{},"body":{"injectables/AccountsService.html":{}}}],["usersservice",{"_index":919,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertype",{"_index":373,"title":{},"body":{"classes/AccountsType.html":{},"classes/AccountsTypeDto.html":{},"injectables/AccountsTypesService.html":{},"classes/CreateAccountsTypeDto.html":{}}}],["uuid",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["uuidv4",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["v1",{"_index":1051,"title":{},"body":{"index.html":{}}}],["v4",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":516,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(apikey",{"_index":520,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["validate(email",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate(payload",{"_index":781,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":798,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateapikey",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey(key",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"classes/Account.html":{},"classes/CreateAccessToken.html":{},"dependencies.html":{}}}],["value",{"_index":676,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1088,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifypassword",{"_index":671,"title":{},"body":{"injectables/CommonService.html":{}}}],["verifypassword(password",{"_index":674,"title":{},"body":{"injectables/CommonService.html":{}}}],["version",{"_index":1050,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":524,"title":{},"body":{"injectables/ApiKeyStrategy.html":{}}}],["volumen",{"_index":726,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["watch",{"_index":1025,"title":{},"body":{"index.html":{}}}],["website",{"_index":1075,"title":{},"body":{"index.html":{}}}],["weigth",{"_index":727,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["width",{"_index":728,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["wightunits",{"_index":729,"title":{},"body":{"classes/CreatePackageDto.html":{},"classes/Package.html":{},"classes/PackageDto.html":{}}}],["x",{"_index":538,"title":{},"body":{"injectables/ApiKeyStrategy.html":{},"controllers/AuthController.html":{},"controllers/PackagesController.html":{}}}],["you'd",{"_index":1064,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":223,"title":{},"body":{"modules/AccountsCredentialsModule.html":{},"modules/AccountsModule.html":{},"modules/AccountsProfilesModule.html":{},"modules/AccountsTypesModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CustomersModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/access-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/auth/dto/access-token.dto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/access-token.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AccessToken {\n  @ApiProperty()\n  access_token: string;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/entities/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                updated\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@IsEmail()@Column({length: 45, unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({length: 45, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/entities/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { AccountsType } from 'src/accounts-types/entities/accounts-type.entity';\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  ManyToOne,\n  Index,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Account {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 45, nullable: false })\n  firstName: string;\n\n  @Column({ length: 45, nullable: false })\n  lastName: string;\n\n  @Index()\n  @Column({ length: 45, nullable: false })\n  userName: string;\n\n  @Index()\n  @IsEmail()\n  @Column({ length: 45, unique: true, nullable: false })\n  email: string;\n\n  @ManyToOne(() => AccountsType, (accountType) => accountType.id)\n  accountType: AccountsType;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountDto.html":{"url":"classes/AccountDto.html","title":"class - AccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                updated\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsTypeDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AccountsTypeDto } from './../../accounts-types/dto/accounts-type.dto';\n\nexport class AccountDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  accountType: AccountsTypeDto;\n\n  created!: Date;\n  updated!: Date;\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsController.html":{"url":"controllers/AccountsController.html","title":"controller - AccountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/accounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({})@ApiResponse({status: 200, type: AccountDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts/accounts.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: AcctionResponseDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts/accounts.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAccountDto: UpdateAccountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UpdateAccountDto})@ApiResponse({status: 200, type: AcctionResponseDto, description: 'procesado correctamente'})@ApiUnauthorizedResponse()@ApiBearerAuth()@UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts/accounts.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountDto\n                                    \n                                                UpdateAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Account } from 'src/accounts/entities/account.entity';\nimport { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { AccountsService } from './services/accounts.service';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { UpdateAccountDto } from './dto/update-account.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { AccountDto } from './dto/account.dto';\nimport { AcctionResponseDto } from 'src/common/dto/acction-response.dto';\n\n@ApiTags('accounts')\n@Controller('accounts')\nexport class AccountsController {\n  constructor(private readonly accountsService: AccountsService) {}\n\n  @ApiBody({})\n  @ApiResponse({\n    status: 200,\n    type: AccountDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.accountsService.findOne(+id);\n  }\n\n  @ApiBody({ type: UpdateAccountDto })\n  @ApiResponse({\n    status: 200,\n    type: AcctionResponseDto,\n    description: 'procesado correctamente',\n  })\n  @ApiUnauthorizedResponse()\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateAccountDto: UpdateAccountDto) {\n    return this.accountsService.update(+id, updateAccountDto);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: AcctionResponseDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.accountsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsCredential.html":{"url":"classes/AccountsCredential.html","title":"class - AccountsCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/entities/accounts-credential.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                credential\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credential\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/entities/accounts-credential.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  Index,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n} from 'typeorm';\nimport { Account } from './../../accounts/entities/account.entity';\n\n@Entity()\nexport class AccountsCredential {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  credential: string;\n\n  @Index()\n  @ManyToOne(() => Account, (account) => account.id)\n  account: Account;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsCredentialDto.html":{"url":"classes/AccountsCredentialDto.html","title":"class - AccountsCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/dto/accounts-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/accounts-credential.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountDto } from \"src/accounts/dto/account.dto\";\nimport { Account } from \"src/accounts/entities/account.entity\";\n\nexport class AccountsCredentialDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  account: AccountDto;\n\n  @ApiProperty()\n  isActive: boolean;\n\n  created!: Date;\n\n  updated!: Date;\n\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsCredentialsController.html":{"url":"controllers/AccountsCredentialsController.html","title":"controller - AccountsCredentialsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsCredentialsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/accounts-credentials.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts-credentials\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAccountsCredentialDto: CreateAccountsCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateAccountsCredentialDto})@ApiResponse({status: 200, type: AccountsCredentialDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/accounts-credentials/accounts-credentials.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAccountsCredentialDto\n                                    \n                                                CreateAccountsCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: AcctionResponseDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-credentials/accounts-credentials.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { AccountsCredentialsService } from './services/accounts-credentials.service';\nimport { CreateAccountsCredentialDto } from './dto/create-accounts-credential.dto';\nimport { UpdateAccountsCredentialDto } from './dto/update-accounts-credential.dto';\nimport { AcctionResponseDto } from 'src/common/dto/acction-response.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { AccountsCredentialDto } from './dto/accounts-credential.dto';\n\n@ApiTags('accounts-credentials')\n@Controller('accounts-credentials')\nexport class AccountsCredentialsController {\n  constructor(\n    private readonly accountsCredentialsService: AccountsCredentialsService,\n  ) {}\n\n  @ApiBody({ type: CreateAccountsCredentialDto })\n  @ApiResponse({\n    status: 200,\n    type: AccountsCredentialDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  create(@Body() createAccountsCredentialDto: CreateAccountsCredentialDto) {\n    return this.accountsCredentialsService.create(createAccountsCredentialDto);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: AcctionResponseDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.accountsCredentialsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsCredentialsModule.html":{"url":"modules/AccountsCredentialsModule.html","title":"module - AccountsCredentialsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsCredentialsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsCredentialsModule\n\n\n\ncluster_AccountsCredentialsModule_imports\n\n\n\ncluster_AccountsCredentialsModule_exports\n\n\n\ncluster_AccountsCredentialsModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule -->\n\nCommonModule->AccountsCredentialsModule\n\n\n\n\n\nAccountsCredentialsService \n\nAccountsCredentialsService \n\nAccountsCredentialsService  -->\n\nAccountsCredentialsModule->AccountsCredentialsService \n\n\n\n\n\nAccountsCredentialsService\n\nAccountsCredentialsService\n\nAccountsCredentialsModule -->\n\nAccountsCredentialsService->AccountsCredentialsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts-credentials/accounts-credentials.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsCredentialsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsCredentialsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsCredentialsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AccountsCredential } from './entities/accounts-credential.entity';\nimport { Module } from '@nestjs/common';\nimport { AccountsCredentialsService } from './services/accounts-credentials.service';\nimport { AccountsCredentialsController } from './accounts-credentials.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CommonModule } from 'src/common/common.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountsCredential]), CommonModule],\n  exports: [TypeOrmModule, AccountsCredentialsService],\n  controllers: [AccountsCredentialsController],\n  providers: [AccountsCredentialsService],\n})\nexport class AccountsCredentialsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsCredentialsService.html":{"url":"injectables/AccountsCredentialsService.html","title":"injectable - AccountsCredentialsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsCredentialsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/services/accounts-credentials.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByAccount\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService, credentialRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts-credentials/services/accounts-credentials.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAccountsCredentialDto: CreateAccountsCredentialDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAccountsCredentialDto\n                                    \n                                                CreateAccountsCredentialDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByAccount(user)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-credentials/services/accounts-credentials.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CommonService } from 'src/common/services/common.service';\nimport { Repository } from 'typeorm';\nimport { CreateAccountsCredentialDto } from '../dto/create-accounts-credential.dto';\nimport { UpdateAccountsCredentialDto } from '../dto/update-accounts-credential.dto';\nimport { AccountsCredential } from '../entities/accounts-credential.entity';\n\n@Injectable()\nexport class AccountsCredentialsService {\n  constructor(\n    private commonService: CommonService,\n    @InjectRepository(AccountsCredential)\n    private credentialRepository: Repository,\n  ) {}\n\n  async create(createAccountsCredentialDto: CreateAccountsCredentialDto) {\n    createAccountsCredentialDto.credential =\n      await this.commonService.hashPassword(\n        createAccountsCredentialDto.credential,\n      );\n    let credential = await this.credentialRepository.save(\n      createAccountsCredentialDto,\n    );\n    return credential;\n  }\n\n  async findByAccount(user) {\n    return await this.credentialRepository.findOne({\n      where: { account: user, isActive: true },\n    });\n  }\n\n  async findOne(id: number) {\n    return await this.credentialRepository.findOne({\n      where: { id: id, isActive: true },\n    });\n  }\n\n  async remove(id: number) {\n    let credential = await this.findOne(id);\n    return this.credentialRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsModule.html":{"url":"modules/AccountsModule.html","title":"module - AccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_providers\n\n\n\ncluster_AccountsModule_exports\n\n\n\n\nAccountsService \n\nAccountsService \n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsService  -->\n\nAccountsModule->AccountsService \n\n\n\n\n\nAccountsService\n\nAccountsService\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts/accounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Account } from './entities/account.entity';\nimport { Module } from '@nestjs/common';\nimport { AccountsService } from './services/accounts.service';\nimport { AccountsController } from './accounts.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Account])],\n  exports: [TypeOrmModule, AccountsService],\n  controllers: [AccountsController],\n  providers: [AccountsService],\n})\nexport class AccountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsProfile.html":{"url":"classes/AccountsProfile.html","title":"class - AccountsProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/entities/accounts-profile.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                profile\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Account\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/entities/accounts-profile.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from 'src/accounts/entities/account.entity';\nimport {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  Index,\n  OneToOne,\n  JoinColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class AccountsProfile {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'jsonb', nullable: false })\n  profile: object;\n\n  @OneToOne(() => Account)\n  @JoinColumn()\n  account: Account;\n\n  @Column({ default: true })\n  isActive: string;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsProfileDto.html":{"url":"classes/AccountsProfileDto.html","title":"class - AccountsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/dto/accounts-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                profile\n                            \n                            \n                                updated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/accounts-profile.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { AccountDto } from './../../accounts/dto/account.dto';\n\nexport class AccountsProfileDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  profile: object;\n  @ApiProperty()\n  account: AccountDto;\n  @ApiProperty()\n  isActive: string;\n\n  created!: Date;\n\n  updated!: Date;\n\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsProfilesController.html":{"url":"controllers/AccountsProfilesController.html","title":"controller - AccountsProfilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsProfilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/accounts-profiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts-profiles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: AccountsProfileDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-profiles/accounts-profiles.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: AcctionResponseDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-profiles/accounts-profiles.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAccountsProfileDto: UpdateAccountsProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UpdateAccountsProfileDto})@ApiResponse({status: 200, type: AcctionResponseDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-profiles/accounts-profiles.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountsProfileDto\n                                    \n                                                UpdateAccountsProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { AccountsProfileDto } from './dto/accounts-profile.dto';\nimport { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { AccountsProfilesService } from './services/accounts-profiles.service';\nimport { CreateAccountsProfileDto } from './dto/create-accounts-profile.dto';\nimport { UpdateAccountsProfileDto } from './dto/update-accounts-profile.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { AcctionResponseDto } from 'src/common/dto/acction-response.dto';\n\n@ApiTags('accounts-profiles')\n@Controller('accounts-profiles')\nexport class AccountsProfilesController {\n  constructor(\n    private readonly accountsProfilesService: AccountsProfilesService,\n  ) {}\n\n  @ApiResponse({\n    status: 200,\n    type: AccountsProfileDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.accountsProfilesService.findOne(+id);\n  }\n\n  @ApiBody({ type: UpdateAccountsProfileDto })\n  @ApiResponse({\n    status: 200,\n    type: AcctionResponseDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateAccountsProfileDto: UpdateAccountsProfileDto,\n  ) {\n    return this.accountsProfilesService.update(+id, updateAccountsProfileDto);\n  }\n\n\n  @ApiResponse({\n    status: 200,\n    type: AcctionResponseDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.accountsProfilesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsProfilesModule.html":{"url":"modules/AccountsProfilesModule.html","title":"module - AccountsProfilesModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsProfilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsProfilesModule\n\n\n\ncluster_AccountsProfilesModule_exports\n\n\n\ncluster_AccountsProfilesModule_providers\n\n\n\n\nAccountsProfilesService \n\nAccountsProfilesService \n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAccountsProfilesService  -->\n\nAccountsProfilesModule->AccountsProfilesService \n\n\n\n\n\nAccountsProfilesService\n\nAccountsProfilesService\n\nAccountsProfilesModule -->\n\nAccountsProfilesService->AccountsProfilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts-profiles/accounts-profiles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsProfilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsProfilesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsProfilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountsProfilesService } from './services/accounts-profiles.service';\nimport { AccountsProfilesController } from './accounts-profiles.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountsProfile } from './entities/accounts-profile.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountsProfile])],\n  exports: [TypeOrmModule, AccountsProfilesService],\n  controllers: [AccountsProfilesController],\n  providers: [AccountsProfilesService],\n})\nexport class AccountsProfilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsProfilesService.html":{"url":"injectables/AccountsProfilesService.html","title":"injectable - AccountsProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/services/accounts-profiles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts-profiles/services/accounts-profiles.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-profiles/services/accounts-profiles.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-profiles/services/accounts-profiles.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateAccountsProfileDto: UpdateAccountsProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-profiles/services/accounts-profiles.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountsProfileDto\n                                    \n                                                UpdateAccountsProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAccountsProfileDto } from '../dto/create-accounts-profile.dto';\nimport { UpdateAccountsProfileDto } from '../dto/update-accounts-profile.dto';\nimport { AccountsProfile } from '../entities/accounts-profile.entity';\n\n@Injectable()\nexport class AccountsProfilesService {\n  constructor(\n    @InjectRepository(AccountsProfile)\n    private profileRepository: Repository,\n  ) {}\n\n  async findOne(id: number) {\n    return await this.profileRepository.findOne({\n      where: { accountId: id, isActive: true },\n    });\n  }\n\n  async update(id: number, updateAccountsProfileDto: UpdateAccountsProfileDto) {\n    return await this.profileRepository.update(id, updateAccountsProfileDto);\n  }\n\n  async remove(id: number) {\n     return await this.profileRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsService.html":{"url":"injectables/AccountsService.html","title":"injectable - AccountsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/services/accounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts/services/accounts.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAccountDto: CreateAccountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAccountDto\n                                    \n                                                CreateAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limitSkip: number, limitTake: number, accountType: AccountsType)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitSkip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limitTake\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountType\n                                    \n                                                AccountsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateAccountDto: UpdateAccountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts/services/accounts.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAccountDto\n                                    \n                                                UpdateAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Account } from './../entities/account.entity';\nimport { Injectable } from '@nestjs/common';\nimport { CreateAccountDto } from '../dto/create-account.dto';\nimport { UpdateAccountDto } from '../dto/update-account.dto';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AccountsType } from 'src/accounts-types/entities/accounts-type.entity';\n\n@Injectable()\nexport class AccountsService {\n  constructor(\n    @InjectRepository(Account)\n    private usersRepository: Repository,\n  ) {}\n\n  async create(createAccountDto: CreateAccountDto) {\n    let user = await this.usersRepository.create(createAccountDto);\n    user.accountType = createAccountDto.accountTypeId;\n    console.log(user);\n    await this.usersRepository.save(user);\n\n    return user;\n  }\n\n  async findAll(\n    limitSkip: number,\n    limitTake: number,\n    accountType: AccountsType,\n  ) {\n    return await this.usersRepository.find({\n      where: { accountType: accountType },\n      order: {\n        id: 'DESC',\n      },\n      skip: limitSkip,\n      take: limitTake,\n    });\n  }\n\n  async findOne(id: number) {\n    return await this.usersRepository.findOne(id);\n  }\n\n  async findByEmail(email: string) {\n    return await this.usersRepository.findOne({\n      where: { email: email },\n    });\n  }\n\n  async update(id: number, updateAccountDto: UpdateAccountDto) {\n    return await this.usersRepository.update(id, updateAccountDto);\n  }\n\n  async remove(id: number) {\n    return await this.usersRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsType.html":{"url":"classes/AccountsType.html","title":"class - AccountsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/entities/accounts-type.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/entities/accounts-type.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, Index, DeleteDateColumn, UpdateDateColumn, CreateDateColumn } from 'typeorm';\n\n@Entity()\nexport class AccountsType {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Index({ unique: true })\n  @Column({ length: 45 })\n  userType: string;\n\n  @Column({ default: true })\n  isActive: string;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountsTypeDto.html":{"url":"classes/AccountsTypeDto.html","title":"class - AccountsTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountsTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/dto/accounts-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updated\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/accounts-type.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AccountsTypeDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  userType: string;\n  @ApiProperty()\n  isActive: string;\n \n  created!: Date;\n  updated!: Date;\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsTypesController.html":{"url":"controllers/AccountsTypesController.html","title":"controller - AccountsTypesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsTypesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/accounts-types.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accounts-types\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: undefined, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/accounts-types/accounts-types.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: AccountsTypeDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/accounts-types/accounts-types.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { AccountsTypesService } from './services/accounts-types.service';\nimport { CreateAccountsTypeDto } from './dto/create-accounts-type.dto';\nimport { UpdateAccountsTypeDto } from './dto/update-accounts-type.dto';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { AccountsTypeDto } from './dto/accounts-type.dto';\n\n@ApiTags('accounts-types')\n@Controller('accounts-types')\nexport class AccountsTypesController {\n  constructor(private readonly accountsTypesService: AccountsTypesService) {}\n\n  @ApiResponse({\n    status: 200,\n    type: [AccountsTypeDto],\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll() {\n    return this.accountsTypesService.findAll();\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: AccountsTypeDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.accountsTypesService.findOne(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsTypesModule.html":{"url":"modules/AccountsTypesModule.html","title":"module - AccountsTypesModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsTypesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsTypesModule\n\n\n\ncluster_AccountsTypesModule_providers\n\n\n\ncluster_AccountsTypesModule_exports\n\n\n\n\nAccountsTypesService \n\nAccountsTypesService \n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAccountsTypesService  -->\n\nAccountsTypesModule->AccountsTypesService \n\n\n\n\n\nAccountsTypesService\n\nAccountsTypesService\n\nAccountsTypesModule -->\n\nAccountsTypesService->AccountsTypesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts-types/accounts-types.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsTypesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsTypesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsTypesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountsTypesService } from './services/accounts-types.service';\nimport { AccountsTypesController } from './accounts-types.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountsType } from './entities/accounts-type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountsType])],\n  exports: [TypeOrmModule, AccountsTypesService],\n  controllers: [AccountsTypesController],\n  providers: [AccountsTypesService],\n})\nexport class AccountsTypesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsTypesService.html":{"url":"injectables/AccountsTypesService.html","title":"injectable - AccountsTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountsTypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/services/accounts-types.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByUserType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts-types/services/accounts-types.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typesRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-types/services/accounts-types.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-types/services/accounts-types.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByUserType\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByUserType(typeUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/accounts-types/services/accounts-types.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateAccountsTypeDto } from '../dto/create-accounts-type.dto';\nimport { UpdateAccountsTypeDto } from '../dto/update-accounts-type.dto';\nimport { AccountsType } from '../entities/accounts-type.entity';\n\n@Injectable()\nexport class AccountsTypesService {\n  constructor(\n    @InjectRepository(AccountsType)\n    private typesRepository: Repository,\n  ) {}\n\n  async findAll() {\n    return await this.typesRepository.find();\n  }\n\n  async findOne(id: number) {\n    return await this.typesRepository.findOne(id);\n  }\n\n  async findOneByUserType(typeUser: string) {\n    return await this.typesRepository.findOne({\n      where: { userType: typeUser },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctionResponseDto.html":{"url":"classes/AcctionResponseDto.html","title":"class - AcctionResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctionResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/acction-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                affected\n                            \n                            \n                                generatedMaps\n                            \n                            \n                                raw\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        affected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/acction-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatedMaps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/acction-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        raw\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/acction-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AcctionResponseDto {\n  @ApiProperty()\n  generatedMaps: Array;\n  @ApiProperty()\n  raw: Array;\n  @ApiProperty()\n  affected: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agent.html":{"url":"classes/Agent.html","title":"class - Agent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/entities/agent.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Agent {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAgentDto: CreateAgentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateAgentDto})@ApiResponse({status: 200, type: AccountDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/agents/agents.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAgentDto\n                                    \n                                                CreateAgentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: undefined, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/agents/agents.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { AccountDto } from 'src/accounts/dto/account.dto';\nimport { Controller, Get, Post, Body, Patch, Param, Delete, Res, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { AgentsService } from './services/agents.service';\nimport { CreateAgentDto } from './dto/create-agent.dto';\nimport { UpdateAgentDto } from './dto/update-agent.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\n\n@ApiTags('agents')\n@Controller('agents')\nexport class AgentsController {\n  constructor(private readonly agentsService: AgentsService) {}\n\n  @ApiBody({ type: CreateAgentDto })\n  @ApiResponse({\n    status: 200,\n    type: AccountDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  create(@Body() createAgentDto: CreateAgentDto) {\n    return this.agentsService.create(createAgentDto);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: [AccountDto],\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Get('/:page/:limit')\n  findAll(@Param('limit') limit: number, @Param('page') page: number) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.agentsService.findAll(skip, take);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AgentsModule_imports\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsModule -->\n\nAccountsCredentialsModule->AgentsModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nAgentsModule -->\n\nAccountsModule->AgentsModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAgentsModule -->\n\nAccountsProfilesModule->AgentsModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAgentsModule -->\n\nAccountsTypesModule->AgentsModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAgentsModule -->\n\nCommonModule->AgentsModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentsService } from './services/agents.service';\nimport { AgentsController } from './agents.controller';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AccountsModule } from 'src/accounts/accounts.module';\nimport { AccountsCredentialsModule } from 'src/accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from 'src/accounts-profiles/accounts-profiles.module';\nimport { AccountsTypesModule } from 'src/accounts-types/accounts-types.module';\nimport { CommonModule } from 'src/common/common.module';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AccountsTypesModule,\n    CommonModule,\n  ],\n  controllers: [AgentsController],\n  providers: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/services/agents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, accountTypeService: AccountsTypesService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/agents/services/agents.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountTypeService\n                                                  \n                                                        \n                                                                        AccountsTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAgentDto: CreateAgentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/agents/services/agents.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAgentDto\n                                    \n                                                CreateAgentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(offset: number, take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/agents/services/agents.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AccountsCredential } from 'src/accounts-credentials/entities/accounts-credential.entity';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { AccountsTypesService } from 'src/accounts-types/services/accounts-types.service';\nimport { CreateAccountDto } from 'src/accounts/dto/create-account.dto';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { CommonService } from 'src/common/services/common.service';\nimport { CreateAgentDto } from '../dto/create-agent.dto';\nimport { UpdateAgentDto } from '../dto/update-agent.dto';\n\n@Injectable()\nexport class AgentsService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private accountTypeService: AccountsTypesService,\n    private commonService: CommonService,\n  ) {}\n  \n  async create(createAgentDto: CreateAgentDto) {\n    let accountType = await this.accountTypeService.findOneByUserType('Agent');\n    let userNew = new CreateAccountDto();\n\n    userNew.accountTypeId = accountType;\n    userNew.firstName = createAgentDto.firstName;\n    userNew.lastName = createAgentDto.lastName;\n    userNew.userName = createAgentDto.userName;\n    userNew.email = createAgentDto.email;\n\n    let userEntity = await this.accountService.create(userNew);\n    let credential = new AccountsCredential();\n\n    credential.account = userEntity;\n    credential.credential = createAgentDto.password;\n    credential.isActive = true;\n\n    let credentials = await this.credentialService.create(credential);\n\n    return userEntity;\n  }\n\n  async findAll(offset: number, take: number) {\n    let typeEntity = await this.accountTypeService.findOneByUserType('Agent');\n    let users = await this.accountService.findAll(offset, take, typeEntity);\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiKeyAuthGuard.html":{"url":"injectables/ApiKeyAuthGuard.html","title":"injectable - ApiKeyAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiKeyAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/apikey-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class ApiKeyAuthGuard extends AuthGuard('headerapikey') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiKeyStrategy.html":{"url":"injectables/ApiKeyStrategy.html","title":"injectable - ApiKeyStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiKeyStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/api-key.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/api-key.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(apiKey: string, done: (error: Error,undefined) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/api-key.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HeaderAPIKeyStrategy } from 'passport-headerapikey';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class ApiKeyStrategy extends PassportStrategy(HeaderAPIKeyStrategy) {\n    constructor(private authService: AuthService) {\n        super(\n            { header: 'HTTP-X-API-KEY', prefix: '' },true,\n            async (apikey, done, req) => {\n             return this.validate(apikey, done);\n          });\n    }\n    public async validate(apiKey: string, done: (error: Error, data) => {}) {\n        const check = await this.authService.validateApiKey(apiKey);\n        if (!check) {\n          return done( new UnauthorizedException(), null);\n          //throw new UnauthorizedException();\n        }\n        return done(null, apiKey);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountsCredentialsModule->AppModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAppModule -->\n\nAccountsProfilesModule->AppModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAppModule -->\n\nAccountsTypesModule->AppModule\n\n\n\n\n\nAgentsModule\n\nAgentsModule\n\nAppModule -->\n\nAgentsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCustomersModule\n\nCustomersModule\n\nAppModule -->\n\nCustomersModule->AppModule\n\n\n\n\n\nPackagesModule\n\nPackagesModule\n\nAppModule -->\n\nPackagesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            CustomersModule\n                        \n                        \n                            PackagesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthModule } from './auth/auth.module';\nimport { Module,  } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { CommonModule } from './common/common.module';\nimport { AccountsModule } from './accounts/accounts.module';\nimport { AccountsCredentialsModule } from './accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from './accounts-profiles/accounts-profiles.module';\nimport { AgentsModule } from './agents/agents.module';\nimport { UsersModule } from './users/users.module';\nimport { CustomersModule } from './customers/customers.module';\nimport { PackagesModule } from './packages/packages.module';\nimport { AccountsTypesModule } from './accounts-types/accounts-types.module';\n\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      url: process.env.DATABASE_URL,\n      entities: [],\n      synchronize: true,\n      autoLoadEntities: true,\n      ssl: true,\n      extra: {\n        ssl: {\n          rejectUnauthorized: false\n        }\n      }\n    }),\n    CommonModule,\n    AccountsTypesModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AgentsModule,\n    UsersModule,\n    CustomersModule,\n    PackagesModule,\n    AuthModule,\n  ],\n  exports: [],\n  controllers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                authenticate\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateAccessToken})@ApiResponse({status: 200, type: AccessToken})@ApiUnauthorizedResponse()@ApiHeader({name: 'HTTP-X-API-KEY', description: 'Llave de servicio'})@UseGuards(LocalAuthGuard)@ApiSecurity('api_key', ['api_key'])@UseGuards(ApiKeyAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateAccessToken } from \"./dto/create-access-token.dto\";\nimport { Controller, Req, Res, Post, UseGuards, Get } from \"@nestjs/common\";\nimport { ApiTags, ApiBody, ApiResponse, ApiUnauthorizedResponse, ApiHeader, ApiSecurity } from \"@nestjs/swagger\";\nimport { AccessToken } from \"./dto/access-token.dto\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { LocalAuthGuard } from \"./guards/local-auth.guard\";\nimport { AuthService } from \"./services/auth.service\";\nimport { JwtAuthGuard } from \"./guards/jwt-auth.guard\";\nimport { ApiKeyAuthGuard } from \"./guards/apikey-auth.guard\";\n\n@ApiTags('auth')\n@Controller('authenticate')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @ApiBody({ type: CreateAccessToken })\n  @ApiResponse({ status: 200, type: AccessToken })\n  @ApiUnauthorizedResponse()\n  @ApiHeader({\n     name: 'HTTP-X-API-KEY',\n    description: 'Llave de servicio',\n  })\n  @UseGuards(LocalAuthGuard)\n  @ApiSecurity('api_key', ['api_key'])\n  @UseGuards(ApiKeyAuthGuard)\n  @Post()\n  async authenticate(@Req() req) {\n    return this.authService.generateToken(req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAccountsCredentialsModule->AuthModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nAuthModule -->\n\nAccountsModule->AuthModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nApiKeyStrategy\n\nApiKeyStrategy\n\nAuthModule -->\n\nApiKeyStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiKeyStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from './../common/common.module';\nimport { AccountsCredentialsModule } from './../accounts-credentials/accounts-credentials.module';\nimport { AccountsModule } from './../accounts/accounts.module';\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\nimport { AuthController } from './auth.controller';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { ApiKeyStrategy } from './strategies/api-key.strategy';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    CommonModule,\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: '1d',\n        audience: process.env.APP_URL,\n        issuer: process.env.APP_ISS,\n      },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy, ApiKeyStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                validateApiKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, commonService: CommonService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateApiKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateApiKey(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/services/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { v4 as uuidv4 } from 'uuid';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { AccessToken } from '../dto/access-token.dto';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { CommonService } from 'src/common/services/common.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private commonService: CommonService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validate(\n    email: string,\n    password: string\n  ) {\n    const user = await this.accountService.findByEmail(email);\n    \n    let compare: string;\n    try {\n      console.log(user);\n      const secret = await this.credentialService.findByAccount(user);\n      console.log(secret);\n      compare = secret.credential;\n    } catch (error) {\n      compare = '';\n      console.log(error);;\n    }\n     console.log(compare);\n   \n   const statePassword = await this.commonService.VerifyPassword(\n      password,\n      compare,\n    );\n\n    if (user && statePassword) {\n      return user;\n    }\n    \n    return null;\n  }\n\n  async generateToken(user): Promise {\n    console.log(user)\n    const payload = { jwtid: uuidv4(), username: user.userName, sub: user.id };\n    return new AccessToken({\n      access_token: this.jwtService.sign(payload),\n    });\n  }\n\n  async validateApiKey(key: string): Promise {\n    return key === process.env.API_KEY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nCommonService \n\nCommonService \n\n\n\nCommonModule\n\nCommonModule\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './services/common.service';\n\n@Module({\n  exports: [CommonService],\n  providers: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                VerifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/common.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        VerifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifyPassword(password: string, compare: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/common.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    compare\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        saltRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/common/services/common.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class CommonService {\n  private readonly saltRounds = 10;\n\n  async VerifyPassword(password: string, compare: string): Promise {\n    return await bcrypt.compare(password, compare);\n  }\n\n  async hashPassword(password: string){\n    const salt = await  bcrypt.genSalt(this.saltRounds);\n    return await bcrypt.hash(password, salt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessToken.html":{"url":"classes/CreateAccessToken.html","title":"class - CreateAccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-access-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-access-token.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-access-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAccessToken {\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  email: string;\n  @IsNotEmpty()\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto.html":{"url":"classes/CreateAccountDto.html","title":"class - CreateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/create-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountTypeId\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountTypeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountsTypeDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountsTypeDto } from \"src/accounts-types/dto/accounts-type.dto\";\n\nexport class CreateAccountDto {\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  accountTypeId: AccountsTypeDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountsCredentialDto.html":{"url":"classes/CreateAccountsCredentialDto.html","title":"class - CreateAccountsCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountsCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/dto/create-accounts-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                credential\n                            \n                            \n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/create-accounts-credential.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credential\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/create-accounts-credential.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-credentials/dto/create-accounts-credential.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountDto } from \"src/accounts/dto/account.dto\";\nimport { Account } from \"src/accounts/entities/account.entity\";\n\nexport class CreateAccountsCredentialDto {\n  @ApiProperty()\n  credential: string;\n  @ApiProperty()\n  account: AccountDto;\n  @ApiProperty()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountsProfileDto.html":{"url":"classes/CreateAccountsProfileDto.html","title":"class - CreateAccountsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/dto/create-accounts-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                isActive\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/create-accounts-profile.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/create-accounts-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-profiles/dto/create-accounts-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { AccountDto } from \"src/accounts/dto/account.dto\";\n\nexport class CreateAccountsProfileDto {\n  @ApiProperty()\n  profile: object;\n  @ApiProperty()\n  account: AccountDto;\n  @ApiProperty()\n  isActive: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountsTypeDto.html":{"url":"classes/CreateAccountsTypeDto.html","title":"class - CreateAccountsTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountsTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/dto/create-accounts-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/create-accounts-type.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts-types/dto/create-accounts-type.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateAccountsTypeDto {\n  @ApiProperty()\n  userType: string;\n  @ApiProperty()\n  isActive: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAgentDto.html":{"url":"classes/CreateAgentDto.html","title":"class - CreateAgentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAgentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/dto/create-agent.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/create-agent.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateAgentDto {\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  telephone: string;\n\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/dto/create-customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyName\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customers/dto/create-customer.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateCustomerDto {\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  telephone: string;\n\n  @ApiProperty()\n  companyName: string;\n\n  @ApiProperty()\n  password: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePackageDto.html":{"url":"classes/CreatePackageDto.html","title":"class - CreatePackageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePackageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/dto/create-package.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                heigth\n                            \n                            \n                                large\n                            \n                            \n                                units\n                            \n                            \n                                volumen\n                            \n                            \n                                weigth\n                            \n                            \n                                width\n                            \n                            \n                                wightUnits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wightUnits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/create-package.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreatePackageDto {\n  @ApiProperty()\n  description: string;\n  @ApiProperty()\n  weigth: number;\n  @ApiProperty()\n  wightUnits: string;\n  @ApiProperty()\n  volumen: number;\n  @ApiProperty()\n  units: string;\n  @ApiProperty()\n  large: number;\n  @ApiProperty()\n  heigth: number;\n  @ApiProperty()\n  width: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customer.html":{"url":"classes/Customer.html","title":"class - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/entities/customer.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Customer {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomersController.html":{"url":"controllers/CustomersController.html","title":"controller - CustomersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/customers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCustomerDto: CreateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateCustomerDto})@ApiResponse({status: 200, type: AccountDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/customers/customers.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: undefined, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/customers/customers.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { CustomersService } from './services/customers.service';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\nimport { AccountDto } from 'src/accounts/dto/account.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\n\n@ApiTags('customers')\n@Controller('customers')\nexport class CustomersController {\n  constructor(private readonly customersService: CustomersService) {}\n\n  @ApiBody({ type: CreateCustomerDto })\n  @ApiResponse({\n    status: 200,\n    type: AccountDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  create(@Body() createCustomerDto: CreateCustomerDto) {\n    return this.customersService.create(createCustomerDto);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: [AccountDto],\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Get('/:page/:limit')\n  findAll(@Param('limit') limit: number, @Param('page') page: number) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.customersService.findAll(skip, take);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomersModule.html":{"url":"modules/CustomersModule.html","title":"module - CustomersModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CustomersModule\n\n\n\ncluster_CustomersModule_providers\n\n\n\ncluster_CustomersModule_imports\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nCustomersModule\n\nCustomersModule\n\nCustomersModule -->\n\nAccountsCredentialsModule->CustomersModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nCustomersModule -->\n\nAccountsModule->CustomersModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nCustomersModule -->\n\nAccountsProfilesModule->CustomersModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nCustomersModule -->\n\nAccountsTypesModule->CustomersModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nCustomersModule -->\n\nCommonModule->CustomersModule\n\n\n\n\n\nCustomersService\n\nCustomersService\n\nCustomersModule -->\n\nCustomersService->CustomersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customers/customers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CustomersService } from './services/customers.service';\nimport { CustomersController } from './customers.controller';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AccountsModule } from 'src/accounts/accounts.module';\nimport { AccountsCredentialsModule } from 'src/accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from 'src/accounts-profiles/accounts-profiles.module';\nimport { AccountsTypesModule } from 'src/accounts-types/accounts-types.module';\nimport { CommonModule } from 'src/common/common.module';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AccountsTypesModule,\n    CommonModule,\n  ],\n  controllers: [CustomersController],\n  providers: [CustomersService],\n})\nexport class CustomersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomersService.html":{"url":"injectables/CustomersService.html","title":"injectable - CustomersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/services/customers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, accountTypeService: AccountsTypesService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/customers/services/customers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountTypeService\n                                                  \n                                                        \n                                                                        AccountsTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customers/services/customers.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(offset: number, take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/customers/services/customers.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AccountsCredential } from 'src/accounts-credentials/entities/accounts-credential.entity';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { AccountsTypesService } from 'src/accounts-types/services/accounts-types.service';\nimport { CreateAccountDto } from 'src/accounts/dto/create-account.dto';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { CommonService } from 'src/common/services/common.service';\nimport { CreateCustomerDto } from '../dto/create-customer.dto';\nimport { UpdateCustomerDto } from '../dto/update-customer.dto';\n\n@Injectable()\nexport class CustomersService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private accountTypeService: AccountsTypesService,\n    private commonService: CommonService,\n  ) {}\n\n  async create(createCustomerDto: CreateCustomerDto) {\n\n    let accountType = await this.accountTypeService.findOneByUserType('Client');\n    let userNew = new CreateAccountDto();\n\n    userNew.accountTypeId = accountType;\n    userNew.firstName = createCustomerDto.firstName;\n    userNew.lastName = createCustomerDto.lastName;\n    userNew.userName = createCustomerDto.userName;\n    userNew.email = createCustomerDto.email;\n\n    let userEntity = await this.accountService.create(userNew);\n    let credential = new AccountsCredential();\n\n    credential.account = userEntity;\n    credential.credential = createCustomerDto.password;\n    credential.isActive = true;\n\n    let credentials = await this.credentialService.create(credential);\n\n    return userEntity;\n  }\n\n  async findAll(offset: number, take: number) {\n    let typeEntity = await this.accountTypeService.findOneByUserType('Client');\n    let users = await this.accountService.findAll(offset, take, typeEntity);\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    });\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validate(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Package.html":{"url":"classes/Package.html","title":"class - Package","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Package\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/entities/package.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                heigth\n                            \n                            \n                                id\n                            \n                            \n                                large\n                            \n                            \n                                units\n                            \n                            \n                                updated\n                            \n                            \n                                volumen\n                            \n                            \n                                weigth\n                            \n                            \n                                width\n                            \n                            \n                                wightUnits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wightUnits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/entities/package.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne, CreateDateColumn, UpdateDateColumn, DeleteDateColumn } from 'typeorm';\n\n@Entity()\nexport class Package {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 45 })\n  description: string;\n\n  @Column()\n  weigth: number;\n\n  @Column()\n  wightUnits: string;\n\n  @Column()\n  volumen: number;\n\n  @Column({ length: 25 })\n  units: string;\n\n  @Column()\n  large: number;\n\n  @Column()\n  heigth: number;\n\n  @Column()\n  width: number;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PackageDto.html":{"url":"classes/PackageDto.html","title":"class - PackageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PackageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/dto/package.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                heigth\n                            \n                            \n                                id\n                            \n                            \n                                large\n                            \n                            \n                                units\n                            \n                            \n                                updated\n                            \n                            \n                                volumen\n                            \n                            \n                                weigth\n                            \n                            \n                                width\n                            \n                            \n                                wightUnits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wightUnits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/dto/package.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class PackageDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  description: string;\n  @ApiProperty()\n  weigth: number;\n  @ApiProperty()\n  wightUnits: string;\n  @ApiProperty()\n  volumen: number;\n  @ApiProperty()\n  units: string;\n  @ApiProperty()\n  large: number;\n  @ApiProperty()\n  heigth: number;\n  @ApiProperty()\n  width: number;\n\n  created!: Date;\n\n  updated!: Date;\n\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PackagesController.html":{"url":"controllers/PackagesController.html","title":"controller - PackagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PackagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/packages.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                packages\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPackageDto: CreatePackageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreatePackageDto})@ApiResponse({status: 200, type: PackageDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@ApiHeader({name: 'HTTP-X-API-KEY', description: 'Llave de servicio'})@UseGuards(LocalAuthGuard)@ApiSecurity('api_key', ['api_key'])@Post()\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPackageDto\n                                    \n                                                CreatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: undefined, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@ApiHeader({name: 'HTTP-X-API-KEY', description: 'Llave de servicio'})@UseGuards(LocalAuthGuard)@ApiSecurity('api_key', ['api_key'])@Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: PackageDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@ApiHeader({name: 'HTTP-X-API-KEY', description: 'Llave de servicio'})@UseGuards(LocalAuthGuard)@ApiSecurity('api_key', ['api_key'])@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: AcctionResponseDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@ApiHeader({name: 'HTTP-X-API-KEY', description: 'Llave de servicio'})@UseGuards(LocalAuthGuard)@ApiSecurity('api_key', ['api_key'])@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePackageDto: UpdatePackageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UpdatePackageDto})@ApiResponse({status: 200, type: AcctionResponseDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@ApiHeader({name: 'HTTP-X-API-KEY', description: 'Llave de servicio'})@UseGuards(LocalAuthGuard)@ApiSecurity('api_key', ['api_key'])@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePackageDto\n                                    \n                                                UpdatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { AcctionResponseDto } from './../common/dto/acction-response.dto';\nimport { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { PackagesService } from './services/packages.service';\nimport { CreatePackageDto } from './dto/create-package.dto';\nimport { UpdatePackageDto } from './dto/update-package.dto';\nimport { ApiBearerAuth, ApiBody, ApiHeader, ApiResponse, ApiSecurity, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\nimport { PackageDto } from './dto/package.dto';\nimport { LocalAuthGuard } from 'src/auth/guards/local-auth.guard';\n\n@ApiTags('packages')\n@Controller('packages')\nexport class PackagesController {\n  constructor(private readonly packagesService: PackagesService) {}\n\n  @ApiBody({ type: CreatePackageDto })\n  @ApiResponse({\n    status: 200,\n    type: PackageDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n   @ApiHeader({\n     name: 'HTTP-X-API-KEY',\n    description: 'Llave de servicio',\n  })\n  @UseGuards(LocalAuthGuard)\n  @ApiSecurity('api_key', ['api_key'])\n  @Post()\n  create(@Body() createPackageDto: CreatePackageDto) {\n    return this.packagesService.create(createPackageDto);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: [PackageDto],\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n   @ApiHeader({\n     name: 'HTTP-X-API-KEY',\n    description: 'Llave de servicio',\n  })\n  @UseGuards(LocalAuthGuard)\n  @ApiSecurity('api_key', ['api_key'])\n  @Get('/:page/:limit')\n  async findAll(@Param('limit') limit: number, @Param('page') page: number) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.packagesService.findAll(skip, take);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: PackageDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n   @ApiHeader({\n     name: 'HTTP-X-API-KEY',\n    description: 'Llave de servicio',\n  })\n  @UseGuards(LocalAuthGuard)\n  @ApiSecurity('api_key', ['api_key'])\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.packagesService.findOne(+id);\n  }\n\n  @ApiBody({ type: UpdatePackageDto })\n  @ApiResponse({\n    status: 200,\n    type: AcctionResponseDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n   @ApiHeader({\n     name: 'HTTP-X-API-KEY',\n    description: 'Llave de servicio',\n  })\n  @UseGuards(LocalAuthGuard)\n  @ApiSecurity('api_key', ['api_key'])\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePackageDto: UpdatePackageDto) {\n    return this.packagesService.update(+id, updatePackageDto);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: AcctionResponseDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n   @ApiHeader({\n     name: 'HTTP-X-API-KEY',\n    description: 'Llave de servicio',\n  })\n  @UseGuards(LocalAuthGuard)\n  @ApiSecurity('api_key', ['api_key'])\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.packagesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PackagesModule.html":{"url":"modules/PackagesModule.html","title":"module - PackagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PackagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PackagesModule\n\n\n\ncluster_PackagesModule_providers\n\n\n\ncluster_PackagesModule_exports\n\n\n\n\nPackagesService \n\nPackagesService \n\n\n\nPackagesModule\n\nPackagesModule\n\nPackagesService  -->\n\nPackagesModule->PackagesService \n\n\n\n\n\nPackagesService\n\nPackagesService\n\nPackagesModule -->\n\nPackagesService->PackagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/packages/packages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PackagesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PackagesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PackagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PackagesService } from './services/packages.service';\nimport { PackagesController } from './packages.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Package } from './entities/package.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Package])],\n  exports: [TypeOrmModule, PackagesService],\n  controllers: [PackagesController],\n  providers: [PackagesService],\n})\nexport class PackagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PackagesService.html":{"url":"injectables/PackagesService.html","title":"injectable - PackagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PackagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/services/packages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(packageRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/packages/services/packages.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        packageRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPackageDto: CreatePackageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPackageDto\n                                    \n                                                CreatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limitSkip: number, limitTake: number)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitSkip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limitTake\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatePackageDto: UpdatePackageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/packages/services/packages.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePackageDto\n                                    \n                                                UpdatePackageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreatePackageDto } from '../dto/create-package.dto';\nimport { UpdatePackageDto } from '../dto/update-package.dto';\nimport { Package } from '../entities/package.entity';\n\n@Injectable()\nexport class PackagesService {\n  constructor(\n    @InjectRepository(Package)\n    private packageRepository: Repository,\n  ) {}\n\n  async create(createPackageDto: CreatePackageDto) {\n    return await this.packageRepository.save(createPackageDto);\n  }\n\n  async findAll(limitSkip: number, limitTake: number) {\n    return await this.packageRepository.find({\n      order: {\n        id: 'DESC',\n      },\n      skip: limitSkip,\n      take: limitTake,\n    });\n  }\n\n  async findOne(id: number) {\n    return await this.packageRepository.findOne(id);\n  }\n\n  async update(id: number, updatePackageDto: UpdatePackageDto) {\n    return await this.packageRepository.update(id, updatePackageDto);\n  }\n\n  async remove(id: number) {\n    return await this.packageRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountDto.html":{"url":"classes/UpdateAccountDto.html","title":"class - UpdateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/update-account.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountDto } from './create-account.dto';\n\nexport class UpdateAccountDto extends PartialType(CreateAccountDto) {\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountsCredentialDto.html":{"url":"classes/UpdateAccountsCredentialDto.html","title":"class - UpdateAccountsCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountsCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-credentials/dto/update-accounts-credential.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountsCredentialDto } from './create-accounts-credential.dto';\n\nexport class UpdateAccountsCredentialDto extends PartialType(CreateAccountsCredentialDto) {\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountsProfileDto.html":{"url":"classes/UpdateAccountsProfileDto.html","title":"class - UpdateAccountsProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountsProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-profiles/dto/update-accounts-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountsProfileDto } from './create-accounts-profile.dto';\n\nexport class UpdateAccountsProfileDto extends PartialType(CreateAccountsProfileDto) {\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountsTypeDto.html":{"url":"classes/UpdateAccountsTypeDto.html","title":"class - UpdateAccountsTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountsTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts-types/dto/update-accounts-type.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountsTypeDto } from './create-accounts-type.dto';\n\nexport class UpdateAccountsTypeDto extends PartialType(CreateAccountsTypeDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAgentDto.html":{"url":"classes/UpdateAgentDto.html","title":"class - UpdateAgentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAgentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/dto/update-agent.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAgentDto } from './create-agent.dto';\n\nexport class UpdateAgentDto extends PartialType(CreateAgentDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customers/dto/update-customer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCustomerDto } from './create-customer.dto';\n\nexport class UpdateCustomerDto extends PartialType(CreateCustomerDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePackageDto.html":{"url":"classes/UpdatePackageDto.html","title":"class - UpdatePackageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePackageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/dto/update-package.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePackageDto } from './create-package.dto';\n\nexport class UpdatePackageDto extends PartialType(CreatePackageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UserDto {\n  @ApiProperty()\n  id: number;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  firstName: string;\n  @ApiProperty()\n  lastName: string;\n  @ApiProperty()\n  userName: string;\n  @ApiProperty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateUserDto})@ApiResponse({status: 200, type: AccountDto, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, type: undefined, description: 'procesado correctamente'})@ApiBearerAuth()@ApiUnauthorizedResponse()@UseGuards(JwtAuthGuard)@Get('/:page/:limit')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Res, UseGuards } from '@nestjs/common';\nimport { UsersService } from './services/users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { AccountDto } from 'src/accounts/dto/account.dto';\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @ApiBody({ type: CreateUserDto })\n  @ApiResponse({\n    status: 200,\n    type: AccountDto,\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @ApiResponse({\n    status: 200,\n    type: [AccountDto],\n    description: 'procesado correctamente',\n  })\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @UseGuards(JwtAuthGuard)\n  @Get('/:page/:limit')\n  async findAll(@Param('limit') limit: number, @Param('page') page: number) {\n    let take = limit;\n    let skip = (page - 1) * limit;\n    return this.usersService.findAll(skip, take);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAccountsCredentialsModule->UsersModule\n\n\n\n\n\nAccountsModule\n\nAccountsModule\n\nUsersModule -->\n\nAccountsModule->UsersModule\n\n\n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nUsersModule -->\n\nAccountsProfilesModule->UsersModule\n\n\n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nUsersModule -->\n\nAccountsTypesModule->UsersModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsCredentialsModule\n                        \n                        \n                            AccountsModule\n                        \n                        \n                            AccountsProfilesModule\n                        \n                        \n                            AccountsTypesModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AccountsCredentialsModule } from 'src/accounts-credentials/accounts-credentials.module';\nimport { AccountsProfilesModule } from 'src/accounts-profiles/accounts-profiles.module';\nimport { AccountsTypesModule } from 'src/accounts-types/accounts-types.module';\nimport { AccountsModule } from 'src/accounts/accounts.module';\nimport { CommonModule } from 'src/common/common.module';\nimport { UsersService } from './services/users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountsModule,\n    AccountsCredentialsModule,\n    AccountsProfilesModule,\n    AccountsTypesModule,\n    CommonModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountsService, credentialService: AccountsCredentialsService, accountTypeService: AccountsTypesService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountsCredentialsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountTypeService\n                                                  \n                                                        \n                                                                        AccountsTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(offset: number, take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateAccountDto } from './../../accounts/dto/create-account.dto';\nimport { Account } from './../../accounts/entities/account.entity';\nimport { Injectable } from '@nestjs/common';\nimport { AccountsCredentialsService } from 'src/accounts-credentials/services/accounts-credentials.service';\nimport { AccountsTypesService } from 'src/accounts-types/services/accounts-types.service';\nimport { AccountsService } from 'src/accounts/services/accounts.service';\nimport { CommonService } from 'src/common/services/common.service';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { AccountsCredential } from 'src/accounts-credentials/entities/accounts-credential.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private accountService: AccountsService,\n    private credentialService: AccountsCredentialsService,\n    private accountTypeService: AccountsTypesService,\n    private commonService: CommonService,\n  ) {}\n\n  async create(createUserDto: CreateUserDto) {\n\n    let accountType = await this.accountTypeService.findOneByUserType('User');\n    let userNew = new CreateAccountDto(); \n\n    userNew.accountTypeId = accountType; \n    userNew.firstName = createUserDto.firstName;\n    userNew.lastName = createUserDto.lastName;\n    userNew.userName = createUserDto.userName;\n    userNew.email = createUserDto.email;\n \n    let userEntity = await this.accountService.create(userNew);\n    let credential = new AccountsCredential();\n\n    credential.account = userEntity;\n    credential.credential = createUserDto.password;\n    credential.isActive = true;\n\n    let credentials = await this.credentialService.create(credential);\n\n    return userEntity;\n  }\n\n  async findAll(offset: number, take: number) {\n\n    let typeEntity = await this.accountTypeService.findOneByUserType('User');\n    let users = await this.accountService.findAll( offset,take, typeEntity);\n    return users; \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config/application.properties.settings.ts\n            \n            variable\n            ApplicationConfigs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/enviroment.properties.setting.ts\n            \n            variable\n            ConfigDefaultModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/openapi.properties.setting.ts\n            \n            variable\n            OPENAPI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-credentials/accounts-credentials.controller.ts\n            \n            controller\n            AccountsCredentialsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/accounts-credentials/dto/accounts-credential.dto.ts\n            \n            class\n            AccountsCredentialDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/accounts-credentials/dto/create-accounts-credential.dto.ts\n            \n            class\n            CreateAccountsCredentialDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts-credentials/dto/update-accounts-credential.dto.ts\n            \n            class\n            UpdateAccountsCredentialDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-credentials/entities/accounts-credential.entity.ts\n            \n            class\n            AccountsCredential\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/accounts-credentials/services/accounts-credentials.service.ts\n            \n            injectable\n            AccountsCredentialsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/accounts-profiles/accounts-profiles.controller.ts\n            \n            controller\n            AccountsProfilesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts-profiles/dto/accounts-profile.dto.ts\n            \n            class\n            AccountsProfileDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/accounts-profiles/dto/create-accounts-profile.dto.ts\n            \n            class\n            CreateAccountsProfileDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts-profiles/dto/update-accounts-profile.dto.ts\n            \n            class\n            UpdateAccountsProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-profiles/entities/accounts-profile.entity.ts\n            \n            class\n            AccountsProfile\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/accounts-profiles/services/accounts-profiles.service.ts\n            \n            injectable\n            AccountsProfilesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/accounts-types/accounts-types.controller.ts\n            \n            controller\n            AccountsTypesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/accounts-types/dto/accounts-type.dto.ts\n            \n            class\n            AccountsTypeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/accounts-types/dto/create-accounts-type.dto.ts\n            \n            class\n            CreateAccountsTypeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/accounts-types/dto/update-accounts-type.dto.ts\n            \n            class\n            UpdateAccountsTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts-types/entities/accounts-type.entity.ts\n            \n            class\n            AccountsType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/accounts-types/services/accounts-types.service.ts\n            \n            injectable\n            AccountsTypesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/accounts/accounts.controller.ts\n            \n            controller\n            AccountsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accounts/dto/account.dto.ts\n            \n            class\n            AccountDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/accounts/dto/create-account.dto.ts\n            \n            class\n            CreateAccountDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/accounts/dto/update-account.dto.ts\n            \n            class\n            UpdateAccountDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/accounts/entities/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/accounts/services/accounts.service.ts\n            \n            injectable\n            AccountsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/agents/agents.controller.ts\n            \n            controller\n            AgentsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/agents/dto/create-agent.dto.ts\n            \n            class\n            CreateAgentDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/agents/dto/update-agent.dto.ts\n            \n            class\n            UpdateAgentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/agents/entities/agent.entity.ts\n            \n            class\n            Agent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/agents/services/agents.service.ts\n            \n            injectable\n            AgentsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/access-token.dto.ts\n            \n            class\n            AccessToken\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-access-token.dto.ts\n            \n            class\n            CreateAccessToken\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/apikey-auth.guard.ts\n            \n            injectable\n            ApiKeyAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/strategies/api-key.strategy.ts\n            \n            injectable\n            ApiKeyStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dto/acction-response.dto.ts\n            \n            class\n            AcctionResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/customers/customers.controller.ts\n            \n            controller\n            CustomersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/customers/dto/create-customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/customers/dto/update-customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customers/entities/customer.entity.ts\n            \n            class\n            Customer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customers/services/customers.service.ts\n            \n            injectable\n            CustomersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/packages/dto/create-package.dto.ts\n            \n            class\n            CreatePackageDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/packages/dto/package.dto.ts\n            \n            class\n            PackageDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/packages/dto/update-package.dto.ts\n            \n            class\n            UpdatePackageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/packages/entities/package.entity.ts\n            \n            class\n            Package\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/packages/packages.controller.ts\n            \n            controller\n            PackagesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/packages/services/packages.service.ts\n            \n            injectable\n            PackagesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mikro-orm/core : ^4.5.6\n        \n            @mikro-orm/postgresql : ^4.5.6\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.0\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-validator : ^0.13.1\n        \n            passport : ^0.4.1\n        \n            passport-headerapikey : ^1.2.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.6.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRunning the app docker-compose\n# development\n$ docker-compose up\n\n# rebuild images mode\n$ docker-compose up --build\nTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covEnviroment\ncreate file .env.development\nDATABASE_URL= postgres://user:password@localhost:5432/db\nJWT_SECRET=b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79\nAPI_KEY=EAB0A38835EBA59230EF98D8879DC2C198DF96AF\nAPP_URL=https://app.parking.com\nAPP_ISS= tracking\nPREFIX= api\nVERSION= v1\nENV= developmentSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountsCredentialsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsProfilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsTypesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PackagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountsCredentialsModule\n\n\n\ncluster_AccountsCredentialsModule_imports\n\n\n\ncluster_AccountsCredentialsModule_exports\n\n\n\ncluster_AccountsCredentialsModule_providers\n\n\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_exports\n\n\n\ncluster_AccountsModule_providers\n\n\n\ncluster_AccountsProfilesModule\n\n\n\ncluster_AccountsProfilesModule_exports\n\n\n\ncluster_AccountsProfilesModule_providers\n\n\n\ncluster_AccountsTypesModule\n\n\n\ncluster_AccountsTypesModule_exports\n\n\n\ncluster_AccountsTypesModule_providers\n\n\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CustomersModule\n\n\n\ncluster_CustomersModule_providers\n\n\n\ncluster_PackagesModule\n\n\n\ncluster_PackagesModule_exports\n\n\n\ncluster_PackagesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule\n\nAccountsCredentialsModule -->\n\nCommonModule->AccountsCredentialsModule\n\n\n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsModule -->\n\nCommonModule->AgentsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nCustomersModule\n\nCustomersModule\n\nCustomersModule -->\n\nCommonModule->CustomersModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nAccountsCredentialsService \n\nAccountsCredentialsService \n\nAccountsCredentialsService  -->\n\nAccountsCredentialsModule->AccountsCredentialsService \n\n\n\nAgentsModule -->\n\nAccountsCredentialsModule->AgentsModule\n\n\n\nAuthModule -->\n\nAccountsCredentialsModule->AuthModule\n\n\n\nCustomersModule -->\n\nAccountsCredentialsModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsCredentialsModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsCredentialsModule->AppModule\n\n\n\n\n\nAccountsCredentialsService\n\nAccountsCredentialsService\n\nAccountsCredentialsModule -->\n\nAccountsCredentialsService->AccountsCredentialsModule\n\n\n\n\n\nAccountsService \n\nAccountsService \n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsService  -->\n\nAccountsModule->AccountsService \n\n\n\nAgentsModule -->\n\nAccountsModule->AgentsModule\n\n\n\nAuthModule -->\n\nAccountsModule->AuthModule\n\n\n\nCustomersModule -->\n\nAccountsModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAccountsService\n\nAccountsService\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\nAccountsProfilesService \n\nAccountsProfilesService \n\n\n\nAccountsProfilesModule\n\nAccountsProfilesModule\n\nAccountsProfilesService  -->\n\nAccountsProfilesModule->AccountsProfilesService \n\n\n\nAgentsModule -->\n\nAccountsProfilesModule->AgentsModule\n\n\n\nCustomersModule -->\n\nAccountsProfilesModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsProfilesModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsProfilesModule->AppModule\n\n\n\n\n\nAccountsProfilesService\n\nAccountsProfilesService\n\nAccountsProfilesModule -->\n\nAccountsProfilesService->AccountsProfilesModule\n\n\n\n\n\nAccountsTypesService \n\nAccountsTypesService \n\n\n\nAccountsTypesModule\n\nAccountsTypesModule\n\nAccountsTypesService  -->\n\nAccountsTypesModule->AccountsTypesService \n\n\n\nAgentsModule -->\n\nAccountsTypesModule->AgentsModule\n\n\n\nCustomersModule -->\n\nAccountsTypesModule->CustomersModule\n\n\n\nUsersModule -->\n\nAccountsTypesModule->UsersModule\n\n\n\nAppModule -->\n\nAccountsTypesModule->AppModule\n\n\n\n\n\nAccountsTypesService\n\nAccountsTypesService\n\nAccountsTypesModule -->\n\nAccountsTypesService->AccountsTypesModule\n\n\n\nAppModule -->\n\nAgentsModule->AppModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nCustomersModule->AppModule\n\n\n\n\n\nPackagesModule\n\nPackagesModule\n\nAppModule -->\n\nPackagesModule->AppModule\n\n\n\n\n\nPackagesService \n\nPackagesService \n\nPackagesService  -->\n\nPackagesModule->PackagesService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nApiKeyStrategy\n\nApiKeyStrategy\n\nAuthModule -->\n\nApiKeyStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nCustomersService\n\nCustomersService\n\nCustomersModule -->\n\nCustomersService->CustomersModule\n\n\n\n\n\nPackagesService\n\nPackagesService\n\nPackagesModule -->\n\nPackagesService->PackagesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    33 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationConfigs   (config/.../application.properties.settings.ts)\n                        \n                        \n                            ConfigDefaultModule   (config/.../enviroment.properties.setting.ts)\n                        \n                        \n                            OPENAPI   (config/.../openapi.properties.setting.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/application.properties.settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApplicationConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  router: `${process.env.PREFIX}/${process.env.VERSION}`,\n}\n                    \n                \n\n\n        \n    \n\n    config/enviroment.properties.setting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaultModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ConfigModule.forRoot({\n  envFilePath: `.env.${process.env.NODE_ENV || 'development'}`,\n  isGlobal: true,\n})\n                    \n                \n\n\n        \n    \n\n    config/openapi.properties.setting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OPENAPI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: \"api.tracking.services\",\n  description: \"catalog of tracking services\" ,\n  version: \"1.0.0\"\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
