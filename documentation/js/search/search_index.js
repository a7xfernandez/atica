var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccountCredentialEntity.html",[0,0.124,1,1.81]],["body/classes/AccountCredentialEntity.html",[0,0.118,1,2.384,2,1.147,3,0.155,4,0.155,5,0.155,6,2.209,7,4.003,8,2.785,9,0.844,10,1.592,11,3.196,12,4.231,13,1.828,14,3.528,15,1.121,16,0.024,17,2.562,18,1.639,19,3.281,20,2.458,21,1.121,22,3.281,23,1.029,24,3.475,25,3.281,26,1.696,27,3.217,28,3.281,29,4.552,30,2.458,31,2.738,32,3.281,33,0.252,34,2.458,35,2.802,36,3.072,37,1.391,38,3.281,39,2.785,40,0.181,41,3.281,42,2.019,43,0.011,44,0.015,45,0.011]],["title/modules/AccountCredentialModule.html",[46,0.781,47,1.956]],["body/modules/AccountCredentialModule.html",[0,0.129,1,1.88,3,0.17,4,0.17,5,0.17,6,1.337,16,0.024,33,0.339,40,0.199,43,0.012,44,0.016,45,0.012,46,1.094,47,3.76,48,1.255,49,1.693,50,3.047,51,3.047,52,3.047,53,3.047,54,3.069,55,3.863,56,1.923,57,1.426,58,1.426,59,2.689,60,3.59,61,2.196,62,2.196,63,2.535,64,0.58,65,2.74,66,1.426,67,3.59,68,2.032,69,2.422,70,2.689,71,3.047,72,3.59]],["title/injectables/AccountCredentialService.html",[55,1.956,73,0.733]],["body/injectables/AccountCredentialService.html",[0,0.093,1,2.661,3,0.123,4,0.123,5,0.123,6,2.021,9,0.421,12,3.445,13,0.912,14,1.76,15,1.009,16,0.024,21,1.009,23,1.039,26,1.713,31,1.366,33,0.314,37,1.106,40,0.144,43,0.009,44,0.013,45,0.009,54,1.269,55,2.186,64,0.421,66,1.036,68,1.476,69,1.76,73,0.818,74,1.036,75,4.065,76,2.214,77,1.637,78,3.229,79,2.606,80,2.606,81,3.103,82,2.376,83,2.608,84,2.975,85,4.598,86,3.128,87,2.608,88,2.661,89,2.661,90,2.661,91,3.861,92,2.608,93,4.598,94,1.95,95,2.975,96,2.606,97,2.608,98,2.608,99,2.608,100,2.214,101,1.954,102,1.76,103,2.186,104,2.608,105,1.637,106,2.608,107,3.278,108,2.408,109,2.608,110,2.608,111,2.608]],["title/classes/AccountEntity.html",[0,0.124,17,1.568]],["body/classes/AccountEntity.html",[0,0.151,2,1.028,3,0.139,4,0.139,5,0.139,9,0.795,10,1.473,11,1.664,13,1.722,15,1.176,16,0.024,17,1.912,18,1.72,20,2.203,21,1.176,23,1.411,24,3.504,26,1.569,27,3.031,33,0.272,35,2.593,36,2.844,37,1.247,40,0.163,43,0.01,44,0.014,45,0.01,112,2.496,113,5.378,114,2.579,115,2.579,116,2.579,117,2.396,118,3.044,119,2.94,120,2.94,121,4.18,122,2.94,123,2.94,124,4.571,125,2.94,126,2.94,127,2.94,128,2.94,129,2.94,130,4.214,131,2.496,132,2.203,133,2.203,134,4.03,135,2.94]],["title/modules/AccountInfoKeysModule.html",[46,0.781,136,1.956]],["body/modules/AccountInfoKeysModule.html",[0,0.141,3,0.271,4,0.186,5,0.186,6,1.463,16,0.024,33,0.336,40,0.217,43,0.013,44,0.017,45,0.013,46,1.162,48,1.373,49,1.797,56,2.041,57,1.56,58,1.56,61,2.331,62,1.782,63,2.056,64,0.634,65,2.909,66,1.56,68,2.223,70,2.942,136,3.662,137,3.333,138,3.333,139,3.982,140,2.942,141,3.927,142,2.417,143,3.468,144,3.333,145,3.927,146,3.927]],["title/modules/AccountModule.html",[46,0.781,147,1.956]],["body/modules/AccountModule.html",[0,0.139,3,0.184,4,0.184,5,0.184,16,0.024,17,1.766,33,0.335,40,0.215,43,0.013,44,0.017,45,0.013,46,1.155,48,1.361,49,1.787,56,2.029,57,1.546,58,1.546,61,2.318,62,1.766,63,2.675,64,0.628,65,2.892,66,1.546,147,3.723,148,3.304,149,3.304,150,3.304,151,3.911,152,3.892,153,3.304,154,3.892,155,3.892]],["title/classes/AccountProfileKeysEntity.html",[0,0.124,142,2.127]],["body/classes/AccountProfileKeysEntity.html",[0,0.113,2,1.106,3,0.287,4,0.15,5,0.15,6,2.18,9,0.716,10,1.552,11,2.901,13,1.792,14,3.459,15,1.162,16,0.023,17,2.521,18,1.613,21,1.103,23,1.003,24,3.155,26,1.653,27,3.155,30,2.37,31,2.324,33,0.245,34,2.37,35,2.731,36,2.134,37,1.341,40,0.175,42,1.946,43,0.011,44,0.015,45,0.011,142,2.731,143,3.95,156,4.968,157,2.685,158,5.126,159,3.163,160,3.163,161,3.163,162,3.163,163,3.766,164,3.163,165,4.437,166,4.437,167,4.437,168,3.163,169,4.437,170,4.437]],["title/injectables/AccountProfileKeysService.html",[73,0.733,139,2.127]],["body/injectables/AccountProfileKeysService.html",[0,0.091,3,0.275,4,0.119,5,0.119,6,2.091,9,0.408,13,1.318,15,1.063,16,0.024,21,1.063,23,1.269,26,1.68,33,0.277,37,1.071,40,0.14,43,0.009,44,0.013,45,0.009,64,0.408,66,1.003,68,1.429,73,0.799,74,1.003,77,1.599,78,3.201,79,2.544,80,2.544,81,2.544,82,2.32,86,3.079,88,2.803,89,2.803,90,2.803,94,2.122,95,3.132,96,2.544,102,1.704,103,1.429,105,1.913,108,1.974,139,2.32,142,3.079,143,3.926,144,2.144,171,4.766,172,2.144,173,2.134,174,2.526,175,2.526,176,3.77,177,2.825,178,2.526,179,2.825,180,2.825,181,2.526,182,2.526,183,2.825,184,2.526,185,2.825,186,2.526,187,2.526,188,1.892,189,2.526,190,2.526,191,2.526]],["title/injectables/AccountService.html",[73,0.733,151,1.956]],["body/injectables/AccountService.html",[0,0.098,3,0.129,4,0.129,5,0.129,9,0.441,13,1.396,15,1.097,16,0.024,17,2.357,21,1.097,23,1.305,26,1.759,33,0.287,37,1.158,40,0.151,43,0.009,44,0.014,45,0.009,64,0.441,66,1.084,73,0.846,74,1.084,77,1.693,78,3.267,79,2.695,80,2.695,81,2.695,82,2.458,86,3.197,88,2.895,89,2.895,90,2.895,94,2.203,95,3.203,96,2.695,102,1.842,103,1.545,105,2.002,108,2.091,151,2.26,153,2.317,173,2.26,177,2.992,179,2.992,180,2.992,183,2.992,185,2.992,188,2.045,192,2.317,193,2.73,194,2.73,195,3.993,196,2.73,197,2.73,198,2.73,199,2.73,200,2.73,201,2.73,202,2.73,203,2.73,204,2.73]],["title/classes/AccountTypeEntity.html",[0,0.124,118,1.956]],["body/classes/AccountTypeEntity.html",[0,0.13,2,1.266,3,0.171,4,0.171,5,0.171,6,2.191,9,0.888,10,1.702,13,1.924,14,3.712,15,1.092,16,0.023,18,1.597,21,1.092,23,1.33,24,3.386,26,1.813,27,3.386,30,2.712,31,2.881,33,0.2,35,2.996,37,1.535,39,3.072,40,0.2,42,2.227,43,0.012,44,0.016,45,0.012,118,2.755,124,3.647,132,4.408,134,2.712,205,3.072,206,4.669,207,3.619,208,3.619,209,3.619,210,3.619,211,3.619]],["title/modules/AccountTypeModule.html",[46,0.781,212,1.956]],["body/modules/AccountTypeModule.html",[0,0.137,3,0.181,4,0.181,5,0.181,6,1.424,16,0.024,33,0.333,40,0.212,43,0.013,44,0.017,45,0.013,46,1.142,48,1.337,49,1.766,56,2.006,57,1.519,58,1.519,61,2.291,62,1.735,63,2.645,64,0.617,65,2.858,66,1.519,68,2.165,70,2.865,118,2.165,133,2.865,212,3.707,213,3.246,214,3.246,215,3.246,216,3.901,217,2.865,218,3.824,219,3.246,220,3.824]],["title/injectables/AccountTypeService.html",[73,0.733,216,1.956]],["body/injectables/AccountTypeService.html",[0,0.086,3,0.113,4,0.113,5,0.113,6,2.127,9,0.386,13,1.264,15,1.091,16,0.024,21,1.091,23,1.361,26,1.625,33,0.269,37,1.013,40,0.132,43,0.008,44,0.012,45,0.008,64,0.386,66,0.948,68,1.352,73,0.766,74,0.948,77,1.533,78,3.31,79,2.439,80,2.439,81,2.439,82,2.225,86,2.994,88,2.879,89,2.879,90,2.879,94,2.216,95,3.214,96,2.439,102,1.612,103,1.352,105,2.063,108,1.893,118,2.753,133,1.789,173,2.046,177,2.708,179,2.708,180,2.708,183,2.708,185,2.708,188,1.789,206,2.027,216,2.046,221,4.278,222,2.027,223,3.615,224,2.388,225,2.388,226,3.615,227,2.388,228,2.388,229,3.615,230,2.388,231,3.615,232,2.388,233,2.388,234,2.388,235,2.388,236,2.388,237,2.388,238,2.388,239,2.388]],["title/classes/AgentCreateReqDto.html",[0,0.124,240,2.59]],["body/classes/AgentCreateReqDto.html",[0,0.117,2,1.139,3,0.154,4,0.154,5,0.154,9,0.526,10,1.584,15,1.247,16,0.024,18,1.824,21,1.247,23,1.539,33,0.18,40,0.18,43,0.011,44,0.015,45,0.011,114,2.727,115,2.727,116,2.727,117,2.534,240,3.393,241,2.764,242,3.205,243,4.42,244,3.514,245,3.586,246,3.257,247,3.257,248,3.257,249,3.257,250,3.257,251,3.257,252,3.257,253,1.213]],["title/classes/AgentCreateResDto.html",[0,0.124,254,2.59]],["body/classes/AgentCreateResDto.html",[0,0.123,2,1.196,3,0.162,4,0.162,5,0.162,9,0.552,10,1.639,13,1.869,15,1.234,16,0.024,18,1.805,21,1.234,23,1.531,33,0.189,40,0.189,43,0.012,44,0.016,45,0.012,114,2.799,115,2.799,116,2.799,117,2.601,244,3.607,245,3.57,253,1.274,254,3.511,255,2.904,256,3.422,257,3.422,258,3.422,259,3.422,260,3.422,261,3.422]],["title/controllers/AgentsController.html",[262,1.568,263,2.333]],["body/controllers/AgentsController.html",[0,0.151,3,0.199,4,0.199,5,0.199,9,0.68,16,0.024,18,1.222,21,0.836,23,1.215,33,0.328,40,0.233,43,0.014,44,0.018,45,0.014,64,0.68,77,2.279,94,2.279,105,1.785,173,3.531,253,1.568,262,1.91,263,3.627,264,1.785,265,3.573,266,4.209,267,2.841,268,2.383,269,2.841,270,4.209,271,4.209,272,3.154,273,3.154]],["title/modules/AgentsModule.html",[46,0.781,274,2.127]],["body/modules/AgentsModule.html",[0,0.145,3,0.191,4,0.191,5,0.191,16,0.024,33,0.34,40,0.223,43,0.014,44,0.018,45,0.014,46,1.182,48,1.411,49,1.829,56,2.077,57,1.603,58,1.603,61,2.373,62,1.831,64,0.652,263,3.917,264,2.218,274,4.012,275,3.425,276,3.425,277,3.413,278,4.035,279,2.739,280,2.483,281,4.035,282,4.035]],["title/injectables/AgentsService.html",[73,0.733,277,1.81]],["body/injectables/AgentsService.html",[0,0.179,3,0.237,4,0.237,5,0.237,16,0.023,33,0.277,40,0.277,43,0.017,44,0.02,45,0.017,64,0.807,73,1.267,74,1.986,277,3.131,283,4.245]],["title/injectables/AgentsService-1.html",[73,0.612,277,1.511,284,2.886]],["body/injectables/AgentsService-1.html",[0,0.179,3,0.237,4,0.237,5,0.237,16,0.023,33,0.277,40,0.277,43,0.017,44,0.02,45,0.017,64,0.807,73,1.267,74,1.986,277,3.131,285,4.245]],["title/modules/AppModule.html",[46,0.781,286,2.333]],["body/modules/AppModule.html",[0,0.09,3,0.212,4,0.118,5,0.118,11,2.54,15,0.497,16,0.024,31,1.962,33,0.353,40,0.138,43,0.008,44,0.013,45,0.008,46,0.847,47,3.168,48,0.876,49,1.31,54,2.723,56,1.488,57,0.994,58,0.994,59,1.876,62,1.7,63,1.311,64,0.404,65,1.417,66,0.994,101,1.876,117,1.218,136,3.168,140,1.876,147,3.168,212,3.168,217,1.876,242,1.541,264,1.062,274,3.445,279,1.962,280,1.541,286,4.604,287,2.125,288,2.125,289,3.445,290,3.445,291,3.445,292,2.504,293,2.504,294,2.504,295,2.504,296,2.504,297,2.504,298,2.125,299,2.125,300,2.125,301,2.504,302,2.504,303,2.504,304,2.504,305,2.504,306,2.504,307,2.504,308,2.504,309,2.504,310,2.504,311,2.504,312,2.504,313,2.504]],["title/classes/ClientCreateReqDto.html",[0,0.124,314,2.59]],["body/classes/ClientCreateReqDto.html",[0,0.111,2,1.086,3,0.147,4,0.147,5,0.147,9,0.502,10,1.532,15,1.257,16,0.024,18,1.838,21,1.257,23,1.546,33,0.172,40,0.172,43,0.011,44,0.015,45,0.011,114,2.658,115,2.658,116,2.658,117,2.47,242,3.124,243,4.309,244,3.426,245,3.598,253,1.157,314,3.283,315,2.637,316,4.309,317,3.107,318,3.107,319,3.107,320,3.107,321,3.107,322,3.107,323,3.107,324,3.107]],["title/classes/ClientCreateResDto.html",[0,0.124,325,2.59]],["body/classes/ClientCreateResDto.html",[0,0.117,2,1.139,3,0.154,4,0.154,5,0.154,9,0.526,10,1.584,13,1.821,15,1.247,16,0.024,18,1.824,21,1.247,23,1.539,33,0.18,40,0.18,43,0.011,44,0.015,45,0.011,114,2.727,115,2.727,116,2.727,117,2.534,244,3.514,245,3.586,253,1.213,316,4.42,325,3.393,326,2.764,327,3.257,328,3.257,329,3.257,330,3.257,331,3.257,332,3.257,333,3.257]],["title/controllers/ClientsController.html",[262,1.568,334,2.333]],["body/controllers/ClientsController.html",[0,0.151,3,0.199,4,0.199,5,0.199,9,0.68,16,0.024,18,1.222,21,0.836,23,1.215,33,0.328,40,0.233,43,0.014,44,0.018,45,0.014,64,0.68,77,2.279,94,2.279,105,1.785,173,3.531,253,1.568,262,1.91,264,1.785,267,2.841,268,2.383,269,2.841,272,3.154,273,3.154,334,3.627,335,3.573,336,4.209,337,4.209,338,4.209]],["title/modules/ClientsModule.html",[46,0.781,289,2.127]],["body/modules/ClientsModule.html",[0,0.145,3,0.191,4,0.191,5,0.191,16,0.024,33,0.34,40,0.223,43,0.014,44,0.018,45,0.014,46,1.182,48,1.411,49,1.829,56,2.077,57,1.603,58,1.603,61,2.373,62,1.831,64,0.652,264,2.218,279,2.739,280,2.483,289,4.012,334,3.917,339,3.425,340,3.425,341,4.012,342,4.035,343,4.035,344,4.035]],["title/injectables/ClientsService.html",[73,0.733,341,2.127]],["body/injectables/ClientsService.html",[0,0.179,3,0.237,4,0.237,5,0.237,16,0.023,33,0.277,40,0.277,43,0.017,44,0.02,45,0.017,64,0.807,73,1.267,74,1.986,341,3.68,345,4.245]],["title/modules/CommonModule.html",[46,0.781,54,1.682]],["body/modules/CommonModule.html",[0,0.148,3,0.195,4,0.195,5,0.195,16,0.023,33,0.294,40,0.228,43,0.014,44,0.018,45,0.014,46,1.2,48,1.444,49,1.857,54,3.246,56,2.109,57,1.64,58,1.64,61,2.409,63,2.781,64,0.667,84,3.649,346,3.506,347,3.506,348,3.506,349,4.13,350,4.13]],["title/injectables/CommonService.html",[73,0.733,84,1.81]],["body/injectables/CommonService.html",[0,0.115,3,0.152,4,0.152,5,0.152,9,0.52,10,1.572,15,1.028,16,0.024,21,1.028,23,1.467,26,1.2,33,0.249,40,0.178,42,1.982,43,0.011,44,0.015,45,0.011,64,0.52,73,0.953,74,1.279,77,1.906,78,3.196,84,2.353,88,2.353,89,2.353,90,2.353,94,1.906,95,2.933,103,2.93,105,1.906,108,2.711,242,2.766,351,2.734,352,5.176,353,5.176,354,4.494,355,4.494,356,4.494,357,3.221,358,4.494,359,5.602,360,3.221,361,2.734,362,3.815,363,3.221,364,3.815,365,3.221,366,3.221,367,4.494,368,3.221,369,3.221]],["title/classes/PackageEntity.html",[0,0.124,370,2.333]],["body/classes/PackageEntity.html",[0,0.098,2,0.958,3,0.13,4,0.13,5,0.13,9,0.442,10,1.4,13,1.654,15,1.26,16,0.024,18,1.842,21,1.26,23,1.307,24,4.156,26,2.467,27,2.911,33,0.151,35,2.463,36,1.848,37,1.161,40,0.151,43,0.009,44,0.014,45,0.009,121,3.397,124,2.999,134,2.999,370,2.701,371,2.324,372,3.192,373,4.73,374,4.73,375,4.73,376,4.73,377,4.73,378,4.73,379,4.73,380,4.73,381,2.738,382,2.738,383,2.738,384,2.738,385,2.738,386,4.002,387,2.738,388,2.738,389,2.738,390,2.738,391,2.738]],["title/controllers/PackagesController.html",[262,1.568,392,2.333]],["body/controllers/PackagesController.html",[0,0.151,3,0.199,4,0.199,5,0.199,9,0.68,16,0.024,18,1.222,21,0.836,23,1.215,33,0.328,40,0.233,43,0.014,44,0.018,45,0.014,64,0.68,77,2.279,94,2.279,105,1.785,173,3.531,253,1.568,262,1.91,264,1.785,267,2.841,268,2.383,269,2.841,272,3.154,273,3.154,392,3.627,393,3.573,394,4.209,395,4.209,396,4.209]],["title/modules/PackagesModule.html",[46,0.781,290,2.127]],["body/modules/PackagesModule.html",[0,0.136,3,0.18,4,0.18,5,0.18,16,0.024,33,0.355,40,0.211,43,0.013,44,0.017,45,0.013,46,1.138,48,1.331,49,1.761,56,2,57,1.512,58,1.512,61,2.285,62,1.727,63,1.994,64,0.615,65,2.85,66,1.512,264,2.135,279,2.637,280,2.343,290,3.948,370,2.57,392,3.808,397,3.232,398,3.232,399,3.948,400,3.808,401,3.808,402,3.808,403,3.808,404,3.808]],["title/injectables/PackagesService.html",[73,0.733,399,2.127]],["body/injectables/PackagesService.html",[0,0.179,3,0.237,4,0.237,5,0.237,16,0.023,33,0.277,40,0.277,43,0.017,44,0.02,45,0.017,64,0.807,73,1.267,74,1.986,399,3.68,405,4.245]],["title/classes/UserCreateDto.html",[0,0.124,406,2.127]],["body/classes/UserCreateDto.html",[0,0.129,2,1.26,3,0.171,4,0.171,5,0.171,9,0.582,10,1.698,15,1.217,16,0.024,18,1.78,21,1.217,23,1.519,33,0.199,40,0.199,43,0.012,44,0.016,45,0.012,114,2.875,115,2.875,116,2.875,117,2.671,242,3.378,245,3.55,253,1.342,406,2.988,407,3.059,408,3.604,409,3.604,410,3.604,411,3.604,412,3.604]],["title/classes/UserDto.html",[0,0.124,413,2.127]],["body/classes/UserDto.html",[0,0.129,2,1.26,3,0.171,4,0.171,5,0.171,9,0.582,10,1.698,13,1.92,15,1.217,16,0.024,18,1.78,21,1.217,23,1.483,26,1.808,33,0.199,40,0.199,43,0.012,44,0.016,45,0.012,114,2.875,115,2.875,116,2.875,117,2.671,245,3.55,253,1.342,413,2.988,414,3.059,415,3.604,416,3.604,417,3.604,418,3.604,419,3.604]],["title/classes/UserIdDto.html",[0,0.124,420,2.127]],["body/classes/UserIdDto.html",[0,0.164,2,1.603,3,0.217,4,0.217,5,0.217,9,0.74,10,1.983,13,2.153,15,0.91,16,0.023,18,1.33,21,0.91,26,2.112,33,0.253,40,0.253,43,0.016,44,0.019,45,0.016,245,3.224,253,1.707,420,3.49,421,3.89,422,4.583]],["title/controllers/UsersController.html",[262,1.568,423,2.333]],["body/controllers/UsersController.html",[0,0.078,1,1.133,3,0.102,4,0.102,5,0.102,6,0.806,7,1.461,9,0.349,15,1.05,16,0.024,17,0.982,18,0.973,20,3.462,21,0.665,33,0.324,34,1.622,40,0.12,43,0.007,44,0.011,45,0.007,64,0.349,69,1.461,77,1.422,78,2.769,88,1.756,89,1.756,90,1.756,94,1.422,95,2.42,105,1.96,108,1.756,253,0.806,262,0.982,264,0.918,267,1.461,268,1.225,269,1.461,372,3.846,406,3.077,413,3.394,420,1.332,423,2.262,424,1.837,425,3.483,426,3.352,427,2.164,428,4.103,429,2.164,430,2.164,431,5.699,432,5.288,433,3.352,434,4.621,435,4.621,436,4.621,437,2.164,438,2.164,439,5.288,440,2.164,441,4.103,442,2.164,443,2.164,444,2.164,445,2.164,446,3.352,447,2.164,448,3.352,449,2.164,450,3.352,451,3.352,452,4.999,453,1.837,454,1.837,455,1.837,456,2.323,457,1.837,458,2.164,459,2.164,460,2.164,461,2.164,462,4.621,463,3.352,464,3.352,465,3.352,466,2.164,467,2.164,468,3.352,469,2.164,470,3.352,471,3.352,472,3.352,473,3.352,474,2.164,475,2.164]],["title/modules/UsersModule.html",[46,0.781,291,2.127]],["body/modules/UsersModule.html",[0,0.107,3,0.235,4,0.141,5,0.141,6,1.11,11,2.408,16,0.024,33,0.353,40,0.165,43,0.01,44,0.014,45,0.01,46,0.962,47,3.368,48,1.042,49,1.488,54,2.896,56,1.69,57,1.184,58,1.184,59,2.233,61,1.93,62,1.93,64,0.481,101,2.233,136,3.368,140,2.233,147,3.368,212,3.368,217,2.233,264,1.804,279,2.228,280,1.834,291,4.184,298,2.53,299,2.53,300,2.53,423,3.348,456,3.368,457,2.53,476,2.53,477,2.98,478,2.53,479,2.98,480,2.98,481,2.98]],["title/injectables/UsersService.html",[73,0.733,456,1.956]],["body/injectables/UsersService.html",[0,0.078,1,1.762,3,0.103,4,0.103,5,0.103,7,1.468,9,0.351,11,2.33,12,1.63,15,0.817,16,0.024,17,1.527,21,0.817,23,0.761,31,1.139,33,0.331,40,0.12,43,0.007,44,0.011,45,0.007,55,2.622,64,0.351,69,1.468,71,1.846,73,0.713,74,0.864,75,1.63,77,1.427,78,2.775,82,2.071,84,2.893,88,2.155,89,2.155,90,2.155,94,1.427,95,2.426,100,1.846,103,2.622,105,1.427,107,1.846,108,2.426,151,2.999,216,3.127,219,1.846,221,1.63,406,2.851,413,3.261,420,1.339,425,2.857,453,1.846,454,1.846,455,1.846,456,1.905,482,1.846,483,3.365,484,2.175,485,4.116,486,2.175,487,3.365,488,2.175,489,2.175,490,2.175,491,2.175,492,2.175,493,2.175,494,2.175,495,4.633,496,3.933,497,4.116,498,2.175,499,3.365,500,3.365,501,3.365,502,3.365,503,3.365,504,3.365,505,3.365,506,3.365,507,3.365,508,3.365,509,2.175,510,2.175,511,2.175,512,2.175,513,2.175,514,2.175,515,2.175,516,2.175,517,2.175,518,2.175,519,2.175,520,2.175,521,2.175,522,2.175,523,2.175,524,2.175]],["title/coverage.html",[525,3.535]],["body/coverage.html",[0,0.227,1,1.261,3,0.172,5,0.114,6,2.054,7,1.625,8,2.044,15,0.478,16,0.024,17,1.092,43,0.008,44,0.012,45,0.008,55,1.363,73,1.303,75,1.804,76,2.044,84,1.261,112,2.044,118,1.363,132,1.804,139,1.482,142,1.482,143,2.455,151,1.363,156,2.044,157,2.044,171,2.044,172,2.044,192,2.044,205,2.044,216,1.363,221,1.804,222,2.044,240,1.804,241,2.044,254,1.804,255,2.044,262,2.216,263,1.625,265,2.044,268,1.363,277,1.905,279,1.261,283,2.044,285,2.044,314,1.804,315,2.044,325,1.804,326,2.044,334,1.625,335,2.044,341,1.482,345,2.044,351,2.044,370,1.625,371,2.044,392,1.625,393,2.044,399,1.482,405,2.044,406,1.482,407,2.044,413,1.482,414,2.044,420,1.482,421,2.044,423,1.625,424,2.044,456,1.363,482,2.044,496,2.044,525,1.804,526,2.408,527,2.408,528,2.408,529,2.044,530,4.383,531,6.95,532,5.895,533,2.044,534,2.044,535,2.044,536,4.383,537,4.884,538,4.383,539,4.383,540,4.884,541,3.637,542,2.408,543,2.044,544,2.408,545,2.044,546,2.408,547,2.408,548,2.408,549,2.408]],["title/dependencies.html",[49,1.454,550,2.886]],["body/dependencies.html",[0,0.146,16,0.024,37,1.727,43,0.014,44,0.018,45,0.014,49,1.424,64,0.658,66,1.617,131,3.457,253,1.517,364,3.457,551,5.262,552,4.073,553,5.262,554,4.073,555,5.83,556,4.073,557,4.073,558,4.073,559,4.073,560,5.262,561,4.073,562,4.073,563,4.073,564,4.073,565,4.073,566,4.073,567,4.073,568,4.073,569,4.073,570,4.073,571,4.073,572,4.073,573,4.073,574,4.073,575,4.073,576,4.073,577,4.073]],["title/miscellaneous/functions.html",[578,1.947,579,3.529]],["body/miscellaneous/functions.html",[9,0.846,16,0.021,43,0.018,44,0.021,45,0.018,543,4.448,545,5.537,578,3.536,579,4.448,580,5.24]],["title/index.html",[9,0.466,581,2.886,582,2.886]],["body/index.html",[4,0.165,16,0.023,43,0.012,44,0.016,45,0.012,86,2.148,372,2.355,525,2.615,583,3.49,584,3.49,585,4.75,586,3.49,587,3.49,588,3.49,589,3.49,590,3.49,591,3.49,592,5.399,593,3.49,594,3.49,595,3.49,596,6.4,597,3.49,598,3.49,599,2.962,600,6.255,601,3.49,602,3.49,603,4.75,604,3.49,605,3.49,606,3.49,607,3.49,608,4.75,609,4.75,610,3.49,611,3.49,612,3.49,613,4.75,614,4.75,615,3.49,616,3.49,617,3.49,618,3.49,619,3.49,620,2.962,621,3.49,622,3.49,623,3.49,624,3.49,625,3.49,626,3.49,627,3.49,628,3.49,629,3.49,630,3.49,631,3.49,632,3.49,633,3.49,634,3.49,635,3.49,636,3.49,637,3.49,638,3.49]],["title/modules.html",[48,1.65]],["body/modules.html",[16,0.018,43,0.014,44,0.018,45,0.014,47,2.36,48,1.458,54,2.029,136,2.36,147,2.36,212,2.36,274,2.566,286,2.814,289,2.566,290,2.566,291,2.566,620,5.851,639,6.894,640,6.894,641,6.894]],["title/overview.html",[642,4.005]],["body/overview.html",[2,0.858,16,0.024,43,0.008,44,0.012,45,0.008,47,3.434,48,0.858,49,1.291,50,2.084,51,2.084,52,2.084,53,2.084,54,2.886,55,3.262,56,1.466,57,0.975,58,0.975,74,0.975,84,3.018,136,3.144,137,2.084,138,2.084,139,2.73,147,3.262,148,2.084,149,2.084,150,2.084,151,3.262,212,3.262,213,2.084,214,2.084,215,2.084,216,3.262,264,1.041,274,3.255,275,2.084,276,2.084,277,2.322,286,4.554,287,2.084,288,2.084,289,3.255,290,3.255,291,4.03,339,2.084,340,2.084,341,2.73,346,2.084,347,2.084,348,2.084,362,3.133,397,2.084,398,2.084,399,2.73,456,2.51,476,2.084,478,2.084,642,2.084,643,2.455,644,2.455]],["title/miscellaneous/variables.html",[578,1.947,645,3.529]],["body/miscellaneous/variables.html",[9,0.67,15,1.057,16,0.024,31,2.173,42,3.62,43,0.014,44,0.018,45,0.014,163,4.521,268,3.015,279,2.789,361,4.993,372,2.8,529,3.522,533,3.522,534,3.522,535,4.521,578,2.8,599,3.522,645,3.522,646,4.15,647,4.15,648,4.15,649,4.15,650,4.15,651,4.15,652,4.15,653,4.15,654,4.15,655,4.15,656,4.15,657,4.15,658,4.15,659,4.15,660,4.15]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":284,"title":{"injectables/AgentsService-1.html":{}},"body":{}}],["1.0.0",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":362,"title":{},"body":{"injectables/CommonService.html":{},"overview.html":{}}}],["12",{"_index":644,"title":{},"body":{"overview.html":{}}}],["25",{"_index":386,"title":{},"body":{"classes/PackageEntity.html":{}}}],["3.0.2",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":643,"title":{},"body":{"overview.html":{}}}],["4.1.6",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":124,"title":{},"body":{"classes/AccountEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/PackageEntity.html":{}}}],["45})@isemail",{"_index":122,"title":{},"body":{"classes/AccountEntity.html":{}}}],["5.0.1",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["8.6.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["account",{"_index":11,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["account.id",{"_index":41,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["account/account.module",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["account/models/account.entity",{"_index":492,"title":{},"body":{"injectables/UsersService.html":{}}}],["accountcredentialentity",{"_index":1,"title":{"classes/AccountCredentialEntity.html":{}},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["accountcredentialmodule",{"_index":47,"title":{"modules/AccountCredentialModule.html":{}},"body":{"modules/AccountCredentialModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountcredentialservice",{"_index":55,"title":{"injectables/AccountCredentialService.html":{}},"body":{"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accountentity",{"_index":17,"title":{"classes/AccountEntity.html":{}},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["accountid",{"_index":93,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["accountinfokeysmodule",{"_index":136,"title":{"modules/AccountInfoKeysModule.html":{}},"body":{"modules/AccountInfoKeysModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountmodule",{"_index":147,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accountprofilekeysentity",{"_index":142,"title":{"classes/AccountProfileKeysEntity.html":{}},"body":{"modules/AccountInfoKeysModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"coverage.html":{}}}],["accountprofilekeysservice",{"_index":139,"title":{"injectables/AccountProfileKeysService.html":{}},"body":{"modules/AccountInfoKeysModule.html":{},"injectables/AccountProfileKeysService.html":{},"coverage.html":{},"overview.html":{}}}],["accountservice",{"_index":151,"title":{"injectables/AccountService.html":{}},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["accounttype",{"_index":113,"title":{},"body":{"classes/AccountEntity.html":{}}}],["accounttype.id",{"_index":135,"title":{},"body":{"classes/AccountEntity.html":{}}}],["accounttypeentity",{"_index":118,"title":{"classes/AccountTypeEntity.html":{}},"body":{"classes/AccountEntity.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"coverage.html":{}}}],["accounttypeid",{"_index":188,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["accounttypemodule",{"_index":212,"title":{"modules/AccountTypeModule.html":{}},"body":{"modules/AccountTypeModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["accounttypeservice",{"_index":216,"title":{"injectables/AccountTypeService.html":{}},"body":{"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":272,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{}}}],["agentcreatereqdto",{"_index":240,"title":{"classes/AgentCreateReqDto.html":{}},"body":{"classes/AgentCreateReqDto.html":{},"coverage.html":{}}}],["agentcreateresdto",{"_index":254,"title":{"classes/AgentCreateResDto.html":{}},"body":{"classes/AgentCreateResDto.html":{},"coverage.html":{}}}],["agents.controller",{"_index":281,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.service",{"_index":282,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents/agents.module",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["agentscontroller",{"_index":263,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"coverage.html":{}}}],["agentsmodule",{"_index":274,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsservice",{"_index":277,"title":{"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{}},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"coverage.html":{},"overview.html":{}}}],["amazing",{"_index":621,"title":{},"body":{"index.html":{}}}],["api.backend.services",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibody({type",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiparam",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiparam({name",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":245,"title":{},"body":{"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{}}}],["apiresponse",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":267,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["apitags('agents",{"_index":270,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apitags('clients",{"_index":337,"title":{},"body":{"controllers/ClientsController.html":{}}}],["apitags('packages",{"_index":395,"title":{},"body":{"controllers/PackagesController.html":{}}}],["apitags('users",{"_index":458,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":598,"title":{},"body":{"index.html":{}}}],["applicationconfigs",{"_index":268,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":591,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":286,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":78,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":631,"title":{},"body":{"index.html":{}}}],["autoloadentities",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":108,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":622,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":364,"title":{},"body":{"injectables/CommonService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":365,"title":{},"body":{"injectables/CommonService.html":{}}}],["bcrypt.gensalt(this.saltrounds",{"_index":368,"title":{},"body":{"injectables/CommonService.html":{}}}],["bcrypt.hash(password",{"_index":369,"title":{},"body":{"injectables/CommonService.html":{}}}],["body",{"_index":446,"title":{},"body":{"controllers/UsersController.html":{}}}],["boolean",{"_index":29,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["bootstrap",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":641,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":639,"title":{},"body":{"modules.html":{}}}],["building",{"_index":586,"title":{},"body":{"index.html":{}}}],["catalog",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["cats",{"_index":273,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{}}}],["class",{"_index":0,"title":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"classes/PackageEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{}},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"classes/PackageEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"overview.html":{}}}],["clientcreatereqdto",{"_index":314,"title":{"classes/ClientCreateReqDto.html":{}},"body":{"classes/ClientCreateReqDto.html":{},"coverage.html":{}}}],["clientcreateresdto",{"_index":325,"title":{"classes/ClientCreateResDto.html":{}},"body":{"classes/ClientCreateResDto.html":{},"coverage.html":{}}}],["clients.controller",{"_index":343,"title":{},"body":{"modules/ClientsModule.html":{}}}],["clients/clients.module",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["clientscontroller",{"_index":334,"title":{"controllers/ClientsController.html":{}},"body":{"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"coverage.html":{}}}],["clientsmodule",{"_index":289,"title":{"modules/ClientsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules.html":{},"overview.html":{}}}],["clientsservice",{"_index":341,"title":{"injectables/ClientsService.html":{}},"body":{"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_accountcredentialmodule",{"_index":50,"title":{},"body":{"modules/AccountCredentialModule.html":{},"overview.html":{}}}],["cluster_accountcredentialmodule_exports",{"_index":52,"title":{},"body":{"modules/AccountCredentialModule.html":{},"overview.html":{}}}],["cluster_accountcredentialmodule_imports",{"_index":51,"title":{},"body":{"modules/AccountCredentialModule.html":{},"overview.html":{}}}],["cluster_accountcredentialmodule_providers",{"_index":53,"title":{},"body":{"modules/AccountCredentialModule.html":{},"overview.html":{}}}],["cluster_accountinfokeysmodule",{"_index":137,"title":{},"body":{"modules/AccountInfoKeysModule.html":{},"overview.html":{}}}],["cluster_accountinfokeysmodule_providers",{"_index":138,"title":{},"body":{"modules/AccountInfoKeysModule.html":{},"overview.html":{}}}],["cluster_accountmodule",{"_index":148,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":150,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":149,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accounttypemodule",{"_index":213,"title":{},"body":{"modules/AccountTypeModule.html":{},"overview.html":{}}}],["cluster_accounttypemodule_exports",{"_index":214,"title":{},"body":{"modules/AccountTypeModule.html":{},"overview.html":{}}}],["cluster_accounttypemodule_providers",{"_index":215,"title":{},"body":{"modules/AccountTypeModule.html":{},"overview.html":{}}}],["cluster_agentsmodule",{"_index":275,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":276,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_clientsmodule",{"_index":339,"title":{},"body":{"modules/ClientsModule.html":{},"overview.html":{}}}],["cluster_clientsmodule_providers",{"_index":340,"title":{},"body":{"modules/ClientsModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":346,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":348,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":347,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_packagesmodule",{"_index":397,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_packagesmodule_providers",{"_index":398,"title":{},"body":{"modules/PackagesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":476,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":477,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":478,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":24,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/PackageEntity.html":{}}}],["column({default",{"_index":30,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{}}}],["column({length",{"_index":121,"title":{},"body":{"classes/AccountEntity.html":{},"classes/PackageEntity.html":{}}}],["column({type",{"_index":164,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["common/common.module",{"_index":101,"title":{},"body":{"injectables/AccountCredentialService.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["common/services/common.service",{"_index":100,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/UsersService.html":{}}}],["commonmodule",{"_index":54,"title":{"modules/CommonModule.html":{}},"body":{"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":84,"title":{"injectables/CommonService.html":{}},"body":{"injectables/AccountCredentialService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["companyname",{"_index":316,"title":{},"body":{"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{}}}],["compare",{"_index":359,"title":{},"body":{"injectables/CommonService.html":{}}}],["config/.../application.properties.settings.ts",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../enviroment.properties.setting.ts",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/.../openapi.properties.setting.ts",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/application.properties.settings",{"_index":269,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}}}],["config/application.properties.settings.ts",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/enviroment.properties.setting",{"_index":280,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["config/enviroment.properties.setting.ts",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/openapi.properties.setting.ts",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configdefaultmodule",{"_index":279,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":366,"title":{},"body":{"injectables/CommonService.html":{}}}],["constructor",{"_index":82,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/UsersService.html":{}}}],["constructor(accountservice",{"_index":484,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(commonservice",{"_index":83,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["constructor(keysrepository",{"_index":174,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["constructor(private",{"_index":460,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(typesrepository",{"_index":224,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["constructor(usersrepository",{"_index":193,"title":{},"body":{"injectables/AccountService.html":{}}}],["controller",{"_index":262,"title":{"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(`agents",{"_index":271,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller(`clients",{"_index":338,"title":{},"body":{"controllers/ClientsController.html":{}}}],["controller(`packages",{"_index":396,"title":{},"body":{"controllers/PackagesController.html":{}}}],["controller(`users",{"_index":459,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":264,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["correctamente",{"_index":464,"title":{},"body":{"controllers/UsersController.html":{}}}],["correctamente'})@apiresponse({status",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["coverage",{"_index":525,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creado",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["creado'})@get('/find/:id",{"_index":444,"title":{},"body":{"controllers/UsersController.html":{}}}],["creado'})@post('/create",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["create",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(res",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(userdto",{"_index":487,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserreqdto",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["credential",{"_index":12,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"injectables/UsersService.html":{}}}],["credential.account",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["credential.credential",{"_index":107,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/UsersService.html":{}}}],["credential.entity",{"_index":69,"title":{},"body":{"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["credential.entity.ts",{"_index":8,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"coverage.html":{}}}],["credential.entity.ts:12",{"_index":25,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["credential.entity.ts:16",{"_index":22,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["credential.entity.ts:19",{"_index":32,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["credential.entity.ts:9",{"_index":28,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["credential.isactive",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["credential.module",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["credential.module.ts",{"_index":60,"title":{},"body":{"modules/AccountCredentialModule.html":{}}}],["credential.service",{"_index":71,"title":{},"body":{"modules/AccountCredentialModule.html":{},"injectables/UsersService.html":{}}}],["credential.service.ts",{"_index":76,"title":{},"body":{"injectables/AccountCredentialService.html":{},"coverage.html":{}}}],["credential.service.ts:16",{"_index":92,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["credential.service.ts:22",{"_index":99,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["credential.service.ts:34",{"_index":97,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["credential.service.ts:9",{"_index":87,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["credential/account",{"_index":59,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["credential/models/account",{"_index":7,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credential/services/account",{"_index":75,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["credentialrepository",{"_index":85,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["credentialservice",{"_index":485,"title":{},"body":{"injectables/UsersService.html":{}}}],["database",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":42,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":49,"title":{"dependencies.html":{}},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":372,"title":{},"body":{"classes/PackageEntity.html":{},"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":599,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["dto/user.create.request.dto",{"_index":453,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/user.id.dto",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/user.response.dto",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":610,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":587,"title":{},"body":{"index.html":{}}}],["el",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["email",{"_index":114,"title":{},"body":{"classes/AccountEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{}}}],["entities",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":35,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/PackageEntity.html":{}}}],["env.${process.env.node_env",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["export",{"_index":40,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":63,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{}}}],["express",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":167,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":483,"title":{},"body":{"injectables/UsersService.html":{}}}],["find(userid",{"_index":489,"title":{},"body":{"injectables/UsersService.html":{}}}],["find(userid:string",{"_index":494,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":173,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{}}}],["findall(typeid",{"_index":177,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["findone",{"_index":79,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["findone(accountid",{"_index":91,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["findone(id",{"_index":180,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["findonetype",{"_index":223,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["findonetype(typeuser",{"_index":229,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["firstname",{"_index":115,"title":{},"body":{"classes/AccountEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{}}}],["framework",{"_index":585,"title":{},"body":{"index.html":{}}}],["function",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":579,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/find/:id",{"_index":466,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":581,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(@res",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(res",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{}}}],["grow",{"_index":617,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":354,"title":{},"body":{"injectables/CommonService.html":{}}}],["hashpassword(password",{"_index":356,"title":{},"body":{"injectables/CommonService.html":{}}}],["heigth",{"_index":373,"title":{},"body":{"classes/PackageEntity.html":{}}}],["here",{"_index":628,"title":{},"body":{"index.html":{}}}],["host",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":635,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpstatus.forbidden",{"_index":465,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpstatus.ok",{"_index":463,"title":{},"body":{"controllers/UsersController.html":{}}}],["id",{"_index":13,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateResDto.html":{},"classes/PackageEntity.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{}}}],["id'})@apiresponse({status",{"_index":443,"title":{},"body":{"controllers/UsersController.html":{}}}],["identifier",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":33,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":62,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index()@column({length",{"_index":128,"title":{},"body":{"classes/AccountEntity.html":{}}}],["index()@manytoone(undefined",{"_index":19,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["index([\"account",{"_index":38,"title":{},"body":{"classes/AccountCredentialEntity.html":{}}}],["index({unique",{"_index":209,"title":{},"body":{"classes/AccountTypeEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"injectables/ClientsService.html":{},"injectables/CommonService.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"injectables/ClientsService.html":{},"injectables/CommonService.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"injectables/ClientsService.html":{},"injectables/CommonService.html":{},"injectables/PackagesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":102,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["injectrepository(accountcredentialentity",{"_index":104,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["injectrepository(accountentity",{"_index":200,"title":{},"body":{"injectables/AccountService.html":{}}}],["injectrepository(accountprofilekeysentity",{"_index":186,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["injectrepository(accounttypeentity",{"_index":234,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["installation",{"_index":595,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":597,"title":{},"body":{"index.html":{}}}],["isactive",{"_index":14,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{}}}],["isemail",{"_index":130,"title":{},"body":{"classes/AccountEntity.html":{}}}],["isglobal",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":624,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":170,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["jsonb",{"_index":165,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["kamil",{"_index":632,"title":{},"body":{"index.html":{}}}],["keys",{"_index":158,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["keys.entity",{"_index":144,"title":{},"body":{"modules/AccountInfoKeysModule.html":{},"injectables/AccountProfileKeysService.html":{}}}],["keys.entity.ts",{"_index":157,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{},"coverage.html":{}}}],["keys.entity.ts:11",{"_index":168,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["keys.entity.ts:15",{"_index":160,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["keys.entity.ts:18",{"_index":162,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["keys.entity.ts:8",{"_index":161,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["keys.module",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["keys.module.ts",{"_index":141,"title":{},"body":{"modules/AccountInfoKeysModule.html":{}}}],["keys.service",{"_index":145,"title":{},"body":{"modules/AccountInfoKeysModule.html":{}}}],["keys.service.ts",{"_index":172,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"coverage.html":{}}}],["keys.service.ts:13",{"_index":178,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["keys.service.ts:17",{"_index":181,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["keys.service.ts:21",{"_index":184,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["keys.service.ts:26",{"_index":182,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["keys.service.ts:7",{"_index":175,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["keys/account",{"_index":140,"title":{},"body":{"modules/AccountInfoKeysModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["keys/models/account",{"_index":156,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{},"coverage.html":{}}}],["keys/services/account",{"_index":171,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"coverage.html":{}}}],["keysrepository",{"_index":176,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["large",{"_index":374,"title":{},"body":{"classes/PackageEntity.html":{}}}],["lastname",{"_index":116,"title":{},"body":{"classes/AccountEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{}}}],["lbsweigth",{"_index":375,"title":{},"body":{"classes/PackageEntity.html":{}}}],["length",{"_index":134,"title":{},"body":{"classes/AccountEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/PackageEntity.html":{}}}],["license",{"_index":638,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":614,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":36,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/PackageEntity.html":{}}}],["manytoone(undefined",{"_index":119,"title":{},"body":{"classes/AccountEntity.html":{}}}],["matching",{"_index":44,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":77,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"injectables/CommonService.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mikro",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":578,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":613,"title":{},"body":{"index.html":{}}}],["mode",{"_index":603,"title":{},"body":{"index.html":{}}}],["models/account",{"_index":68,"title":{},"body":{"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"modules/AccountInfoKeysModule.html":{},"injectables/AccountProfileKeysService.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{}}}],["models/account.entity",{"_index":153,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{}}}],["models/package.entity",{"_index":401,"title":{},"body":{"modules/PackagesModule.html":{}}}],["module",{"_index":46,"title":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":48,"title":{"modules.html":{}},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":627,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":633,"title":{},"body":{"index.html":{}}}],["name",{"_index":89,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name:\"id",{"_index":461,"title":{},"body":{"controllers/UsersController.html":{}}}],["nest",{"_index":592,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":637,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":64,"title":{},"body":{"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":253,"title":{},"body":{"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"controllers/PackagesController.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":66,"title":{},"body":{"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"modules/AppModule.html":{},"modules/PackagesModule.html":{},"dependencies.html":{}}}],["new",{"_index":496,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":584,"title":{},"body":{"index.html":{}}}],["npm",{"_index":596,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":166,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["number",{"_index":26,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{}}}],["number(process.env.port",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["object",{"_index":163,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{},"miscellaneous/variables.html":{}}}],["onetoone",{"_index":169,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":159,"title":{},"body":{"classes/AccountProfileKeysEntity.html":{}}}],["open",{"_index":615,"title":{},"body":{"index.html":{}}}],["openapi",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":90,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["orm/core",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["orm/postgresql",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":58,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":642,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":550,"title":{"dependencies.html":{}},"body":{}}],["packageentity",{"_index":370,"title":{"classes/PackageEntity.html":{}},"body":{"classes/PackageEntity.html":{},"modules/PackagesModule.html":{},"coverage.html":{}}}],["packages.controller",{"_index":402,"title":{},"body":{"modules/PackagesModule.html":{}}}],["packages/packages.module",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["packagescontroller",{"_index":392,"title":{"controllers/PackagesController.html":{}},"body":{"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"coverage.html":{}}}],["packagesmodule",{"_index":290,"title":{"modules/PackagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PackagesModule.html":{},"modules.html":{},"overview.html":{}}}],["packagesservice",{"_index":399,"title":{"injectables/PackagesService.html":{}},"body":{"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":88,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{}}}],["password",{"_index":242,"title":{},"body":{"classes/AgentCreateReqDto.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"injectables/CommonService.html":{},"classes/UserCreateDto.html":{}}}],["passwordconfirmation",{"_index":243,"title":{},"body":{"classes/AgentCreateReqDto.html":{},"classes/ClientCreateReqDto.html":{}}}],["pg",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":625,"title":{},"body":{"index.html":{}}}],["port",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/create",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["primarygeneratedcolumn",{"_index":27,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/PackageEntity.html":{}}}],["private",{"_index":103,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"injectables/UsersService.html":{}}}],["process.env.db",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.host",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.password",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.prefix}/${process.env.version",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.user",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":605,"title":{},"body":{"index.html":{}}}],["profile",{"_index":143,"title":{},"body":{"modules/AccountInfoKeysModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"coverage.html":{}}}],["progressive",{"_index":583,"title":{},"body":{"index.html":{}}}],["project",{"_index":616,"title":{},"body":{"index.html":{}}}],["promise",{"_index":95,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"injectables/CommonService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{}}}],["pudo",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":626,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":352,"title":{},"body":{"injectables/CommonService.html":{}}}],["reflect",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["registro",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove",{"_index":80,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["remove(id",{"_index":96,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["repository",{"_index":86,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"index.html":{}}}],["res",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.status(httpstatus.forbidden",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json(userdto",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":57,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":43,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":45,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":105,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"injectables/CommonService.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":94,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{},"controllers/AgentsController.html":{},"controllers/ClientsController.html":{},"injectables/CommonService.html":{},"controllers/PackagesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["router",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":600,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":367,"title":{},"body":{"injectables/CommonService.html":{}}}],["saltrounds",{"_index":353,"title":{},"body":{"injectables/CommonService.html":{}}}],["save",{"_index":81,"title":{},"body":{"injectables/AccountCredentialService.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["save(credential",{"_index":98,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["save(user",{"_index":183,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["scalable",{"_index":588,"title":{},"body":{"index.html":{}}}],["ser",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["server",{"_index":589,"title":{},"body":{"index.html":{}}}],["services",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/account",{"_index":70,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountTypeModule.html":{}}}],["services/account.service",{"_index":154,"title":{},"body":{"modules/AccountModule.html":{}}}],["services/clients.service",{"_index":344,"title":{},"body":{"modules/ClientsModule.html":{}}}],["services/common.service",{"_index":350,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/packages.service",{"_index":403,"title":{},"body":{"modules/PackagesModule.html":{}}}],["services/users.service",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["side",{"_index":590,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AgentsService-1.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"modules/ClientsModule.html":{},"injectables/ClientsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"modules/PackagesModule.html":{},"injectables/PackagesService.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":619,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/account",{"_index":6,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"modules/AccountCredentialModule.html":{},"injectables/AccountCredentialService.html":{},"modules/AccountInfoKeysModule.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"classes/AccountTypeEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["src/account/account.module",{"_index":480,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/account/account.module.ts",{"_index":152,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/account/models/account.entity",{"_index":34,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"controllers/UsersController.html":{}}}],["src/account/models/account.entity.ts",{"_index":112,"title":{},"body":{"classes/AccountEntity.html":{},"coverage.html":{}}}],["src/account/models/account.entity.ts:11",{"_index":125,"title":{},"body":{"classes/AccountEntity.html":{}}}],["src/account/models/account.entity.ts:14",{"_index":127,"title":{},"body":{"classes/AccountEntity.html":{}}}],["src/account/models/account.entity.ts:18",{"_index":129,"title":{},"body":{"classes/AccountEntity.html":{}}}],["src/account/models/account.entity.ts:22",{"_index":123,"title":{},"body":{"classes/AccountEntity.html":{}}}],["src/account/models/account.entity.ts:25",{"_index":120,"title":{},"body":{"classes/AccountEntity.html":{}}}],["src/account/models/account.entity.ts:8",{"_index":126,"title":{},"body":{"classes/AccountEntity.html":{}}}],["src/account/services/account.service",{"_index":493,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/account/services/account.service.ts",{"_index":192,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/account/services/account.service.ts:13",{"_index":196,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/services/account.service.ts:17",{"_index":197,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/services/account.service.ts:21",{"_index":199,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/services/account.service.ts:26",{"_index":198,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/account/services/account.service.ts:7",{"_index":194,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/agents/agents.controller.ts",{"_index":265,"title":{},"body":{"controllers/AgentsController.html":{},"coverage.html":{}}}],["src/agents/agents.controller.ts:9",{"_index":266,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/agents/agents.module.ts",{"_index":278,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/agents/agents.service.ts",{"_index":283,"title":{},"body":{"injectables/AgentsService.html":{},"coverage.html":{}}}],["src/agents/dto/agent.create.request.dto.ts",{"_index":241,"title":{},"body":{"classes/AgentCreateReqDto.html":{},"coverage.html":{}}}],["src/agents/dto/agent.create.request.dto.ts:12",{"_index":248,"title":{},"body":{"classes/AgentCreateReqDto.html":{}}}],["src/agents/dto/agent.create.request.dto.ts:15",{"_index":252,"title":{},"body":{"classes/AgentCreateReqDto.html":{}}}],["src/agents/dto/agent.create.request.dto.ts:18",{"_index":251,"title":{},"body":{"classes/AgentCreateReqDto.html":{}}}],["src/agents/dto/agent.create.request.dto.ts:21",{"_index":249,"title":{},"body":{"classes/AgentCreateReqDto.html":{}}}],["src/agents/dto/agent.create.request.dto.ts:24",{"_index":250,"title":{},"body":{"classes/AgentCreateReqDto.html":{}}}],["src/agents/dto/agent.create.request.dto.ts:6",{"_index":246,"title":{},"body":{"classes/AgentCreateReqDto.html":{}}}],["src/agents/dto/agent.create.request.dto.ts:9",{"_index":247,"title":{},"body":{"classes/AgentCreateReqDto.html":{}}}],["src/agents/dto/agent.create.response.dto.ts",{"_index":255,"title":{},"body":{"classes/AgentCreateResDto.html":{},"coverage.html":{}}}],["src/agents/dto/agent.create.response.dto.ts:11",{"_index":259,"title":{},"body":{"classes/AgentCreateResDto.html":{}}}],["src/agents/dto/agent.create.response.dto.ts:14",{"_index":261,"title":{},"body":{"classes/AgentCreateResDto.html":{}}}],["src/agents/dto/agent.create.response.dto.ts:17",{"_index":256,"title":{},"body":{"classes/AgentCreateResDto.html":{}}}],["src/agents/dto/agent.create.response.dto.ts:20",{"_index":260,"title":{},"body":{"classes/AgentCreateResDto.html":{}}}],["src/agents/dto/agent.create.response.dto.ts:5",{"_index":258,"title":{},"body":{"classes/AgentCreateResDto.html":{}}}],["src/agents/dto/agent.create.response.dto.ts:8",{"_index":257,"title":{},"body":{"classes/AgentCreateResDto.html":{}}}],["src/agents/services/agents.service.ts",{"_index":285,"title":{},"body":{"injectables/AgentsService-1.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["src/clients/clients.controller.ts",{"_index":335,"title":{},"body":{"controllers/ClientsController.html":{},"coverage.html":{}}}],["src/clients/clients.controller.ts:9",{"_index":336,"title":{},"body":{"controllers/ClientsController.html":{}}}],["src/clients/clients.module.ts",{"_index":342,"title":{},"body":{"modules/ClientsModule.html":{}}}],["src/clients/dto/client.create.request.dto.ts",{"_index":315,"title":{},"body":{"classes/ClientCreateReqDto.html":{},"coverage.html":{}}}],["src/clients/dto/client.create.request.dto.ts:11",{"_index":320,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.request.dto.ts:14",{"_index":324,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.request.dto.ts:17",{"_index":323,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.request.dto.ts:20",{"_index":317,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.request.dto.ts:23",{"_index":321,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.request.dto.ts:26",{"_index":322,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.request.dto.ts:5",{"_index":318,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.request.dto.ts:8",{"_index":319,"title":{},"body":{"classes/ClientCreateReqDto.html":{}}}],["src/clients/dto/client.create.response.dto.ts",{"_index":326,"title":{},"body":{"classes/ClientCreateResDto.html":{},"coverage.html":{}}}],["src/clients/dto/client.create.response.dto.ts:11",{"_index":331,"title":{},"body":{"classes/ClientCreateResDto.html":{}}}],["src/clients/dto/client.create.response.dto.ts:14",{"_index":333,"title":{},"body":{"classes/ClientCreateResDto.html":{}}}],["src/clients/dto/client.create.response.dto.ts:17",{"_index":332,"title":{},"body":{"classes/ClientCreateResDto.html":{}}}],["src/clients/dto/client.create.response.dto.ts:20",{"_index":327,"title":{},"body":{"classes/ClientCreateResDto.html":{}}}],["src/clients/dto/client.create.response.dto.ts:23",{"_index":328,"title":{},"body":{"classes/ClientCreateResDto.html":{}}}],["src/clients/dto/client.create.response.dto.ts:5",{"_index":330,"title":{},"body":{"classes/ClientCreateResDto.html":{}}}],["src/clients/dto/client.create.response.dto.ts:8",{"_index":329,"title":{},"body":{"classes/ClientCreateResDto.html":{}}}],["src/clients/services/clients.service.ts",{"_index":345,"title":{},"body":{"injectables/ClientsService.html":{},"coverage.html":{}}}],["src/common/common.module",{"_index":67,"title":{},"body":{"modules/AccountCredentialModule.html":{}}}],["src/common/common.module.ts",{"_index":349,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/services/common.service.ts",{"_index":351,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/common/services/common.service.ts:12",{"_index":357,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/common/services/common.service.ts:6",{"_index":363,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/common/services/common.service.ts:8",{"_index":360,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/main.ts",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/packages/models/package.entity.ts",{"_index":371,"title":{},"body":{"classes/PackageEntity.html":{},"coverage.html":{}}}],["src/packages/models/package.entity.ts:12",{"_index":389,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:15",{"_index":391,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:18",{"_index":385,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:21",{"_index":388,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:24",{"_index":387,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:27",{"_index":384,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:30",{"_index":382,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:33",{"_index":390,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:6",{"_index":383,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/models/package.entity.ts:9",{"_index":381,"title":{},"body":{"classes/PackageEntity.html":{}}}],["src/packages/packages.controller.ts",{"_index":393,"title":{},"body":{"controllers/PackagesController.html":{},"coverage.html":{}}}],["src/packages/packages.controller.ts:9",{"_index":394,"title":{},"body":{"controllers/PackagesController.html":{}}}],["src/packages/packages.module.ts",{"_index":400,"title":{},"body":{"modules/PackagesModule.html":{}}}],["src/packages/services/packages.service.ts",{"_index":405,"title":{},"body":{"injectables/PackagesService.html":{},"coverage.html":{}}}],["src/users/dto/user.create.request.dto.ts",{"_index":407,"title":{},"body":{"classes/UserCreateDto.html":{},"coverage.html":{}}}],["src/users/dto/user.create.request.dto.ts:12",{"_index":410,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/users/dto/user.create.request.dto.ts:15",{"_index":412,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/users/dto/user.create.request.dto.ts:18",{"_index":411,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/users/dto/user.create.request.dto.ts:6",{"_index":408,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/users/dto/user.create.request.dto.ts:9",{"_index":409,"title":{},"body":{"classes/UserCreateDto.html":{}}}],["src/users/dto/user.id.dto.ts",{"_index":421,"title":{},"body":{"classes/UserIdDto.html":{},"coverage.html":{}}}],["src/users/dto/user.id.dto.ts:5",{"_index":422,"title":{},"body":{"classes/UserIdDto.html":{}}}],["src/users/dto/user.response.dto.ts",{"_index":414,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.response.dto.ts:11",{"_index":418,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.response.dto.ts:14",{"_index":419,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.response.dto.ts:17",{"_index":415,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.response.dto.ts:5",{"_index":417,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.response.dto.ts:8",{"_index":416,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/services/users.service.ts",{"_index":482,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts:14",{"_index":486,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:22",{"_index":490,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:35",{"_index":488,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:27",{"_index":445,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":479,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":601,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":604,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":606,"title":{},"body":{"index.html":{}}}],["started",{"_index":582,"title":{"index.html":{}},"body":{}}],["starter",{"_index":594,"title":{},"body":{"index.html":{}}}],["statements",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":462,"title":{},"body":{"controllers/UsersController.html":{}}}],["stay",{"_index":629,"title":{},"body":{"index.html":{}}}],["string",{"_index":23,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"controllers/AgentsController.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"controllers/ClientsController.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"controllers/PackagesController.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["support",{"_index":620,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":640,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["telephone",{"_index":244,"title":{},"body":{"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{}}}],["test",{"_index":609,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":612,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":611,"title":{},"body":{"index.html":{}}}],["tests",{"_index":608,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":618,"title":{},"body":{"index.html":{}}}],["this.accountservice.findone(userid",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.accountservice.save(usernew",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.accounttypeservice.findonetype('user",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.commonservice.hashpassword",{"_index":109,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["this.credentialrepository.delete(id",{"_index":111,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["this.credentialrepository.findone",{"_index":106,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["this.credentialrepository.save(credential",{"_index":110,"title":{},"body":{"injectables/AccountCredentialService.html":{}}}],["this.credentialservice.save(credential",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.keysrepository.delete(id",{"_index":191,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["this.keysrepository.find",{"_index":187,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["this.keysrepository.findone(id",{"_index":189,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["this.keysrepository.save(user",{"_index":190,"title":{},"body":{"injectables/AccountProfileKeysService.html":{}}}],["this.typesrepository.delete(id",{"_index":239,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["this.typesrepository.find",{"_index":235,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["this.typesrepository.findone",{"_index":237,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["this.typesrepository.findone(id",{"_index":236,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["this.typesrepository.save(user",{"_index":238,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["this.usersrepository.delete(id",{"_index":204,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersrepository.find",{"_index":201,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersrepository.findone(id",{"_index":202,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersrepository.save(user",{"_index":203,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersservice.create(createuserreqdto",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.find(params.id",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["title",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":630,"title":{},"body":{"index.html":{}}}],["true",{"_index":31,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountProfileKeysEntity.html":{},"classes/AccountTypeEntity.html":{},"modules/AppModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["true})@column({length",{"_index":210,"title":{},"body":{"classes/AccountTypeEntity.html":{}}}],["try",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{}}}],["twitter",{"_index":636,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"injectables/CommonService.html":{},"classes/PackageEntity.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{},"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.entity",{"_index":133,"title":{},"body":{"classes/AccountEntity.html":{},"modules/AccountTypeModule.html":{},"injectables/AccountTypeService.html":{}}}],["type.entity.ts",{"_index":205,"title":{},"body":{"classes/AccountTypeEntity.html":{},"coverage.html":{}}}],["type.entity.ts:10",{"_index":211,"title":{},"body":{"classes/AccountTypeEntity.html":{}}}],["type.entity.ts:13",{"_index":208,"title":{},"body":{"classes/AccountTypeEntity.html":{}}}],["type.entity.ts:6",{"_index":207,"title":{},"body":{"classes/AccountTypeEntity.html":{}}}],["type.module",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["type.module.ts",{"_index":218,"title":{},"body":{"modules/AccountTypeModule.html":{}}}],["type.service",{"_index":219,"title":{},"body":{"modules/AccountTypeModule.html":{},"injectables/UsersService.html":{}}}],["type.service.ts",{"_index":222,"title":{},"body":{"injectables/AccountTypeService.html":{},"coverage.html":{}}}],["type.service.ts:13",{"_index":227,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["type.service.ts:17",{"_index":228,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["type.service.ts:21",{"_index":230,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["type.service.ts:25",{"_index":233,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["type.service.ts:30",{"_index":232,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["type.service.ts:7",{"_index":225,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["type/account",{"_index":217,"title":{},"body":{"modules/AccountTypeModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["type/models/account",{"_index":132,"title":{},"body":{"classes/AccountEntity.html":{},"classes/AccountTypeEntity.html":{},"coverage.html":{}}}],["type/services/account",{"_index":221,"title":{},"body":{"injectables/AccountTypeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeid",{"_index":179,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["typeorm",{"_index":37,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"injectables/AccountCredentialService.html":{},"classes/AccountEntity.html":{},"classes/AccountProfileKeysEntity.html":{},"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{},"classes/PackageEntity.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":65,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AppModule.html":{},"modules/PackagesModule.html":{}}}],["typeormmodule.forfeature([accountcredentialentity",{"_index":72,"title":{},"body":{"modules/AccountCredentialModule.html":{}}}],["typeormmodule.forfeature([accountentity",{"_index":155,"title":{},"body":{"modules/AccountModule.html":{}}}],["typeormmodule.forfeature([accountprofilekeysentity",{"_index":146,"title":{},"body":{"modules/AccountInfoKeysModule.html":{}}}],["typeormmodule.forfeature([accounttypeentity",{"_index":220,"title":{},"body":{"modules/AccountTypeModule.html":{}}}],["typeormmodule.forfeature([packageentity",{"_index":404,"title":{},"body":{"modules/PackagesModule.html":{}}}],["typeormmodule.forroot",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":593,"title":{},"body":{"index.html":{}}}],["typesrepository",{"_index":226,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["typeuser",{"_index":231,"title":{},"body":{"injectables/AccountTypeService.html":{}}}],["ui",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":20,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountEntity.html":{},"controllers/UsersController.html":{}}}],["unique",{"_index":39,"title":{},"body":{"classes/AccountCredentialEntity.html":{},"classes/AccountTypeEntity.html":{}}}],["unit",{"_index":607,"title":{},"body":{"index.html":{}}}],["units",{"_index":376,"title":{},"body":{"classes/PackageEntity.html":{}}}],["user",{"_index":185,"title":{},"body":{"injectables/AccountProfileKeysService.html":{},"injectables/AccountService.html":{},"injectables/AccountTypeService.html":{}}}],["usercreatedto",{"_index":406,"title":{"classes/UserCreateDto.html":{}},"body":{"classes/UserCreateDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usercreatedto})@apiresponse({status",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdto",{"_index":413,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userdto.email",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto.firstname",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto.lastname",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto.password",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto.username",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["userentity",{"_index":497,"title":{},"body":{"injectables/UsersService.html":{}}}],["userentity.email",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["userentity.firstname",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["userentity.id",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["userentity.lastname",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["userentity.username",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":491,"title":{},"body":{"injectables/UsersService.html":{}}}],["useriddto",{"_index":420,"title":{"classes/UserIdDto.html":{}},"body":{"classes/UserIdDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["username",{"_index":117,"title":{},"body":{"classes/AccountEntity.html":{},"classes/AgentCreateReqDto.html":{},"classes/AgentCreateResDto.html":{},"modules/AppModule.html":{},"classes/ClientCreateReqDto.html":{},"classes/ClientCreateResDto.html":{},"classes/UserCreateDto.html":{},"classes/UserDto.html":{}}}],["usernew",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernew.accounttype",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernew.email",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernew.firstname",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernew.lastname",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernew.username",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["userresdto",{"_index":495,"title":{},"body":{"injectables/UsersService.html":{}}}],["userresdto.email",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["userresdto.firstname",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["userresdto.id",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["userresdto.lastname",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["userresdto.username",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.controller",{"_index":481,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":423,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":291,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":195,"title":{},"body":{"injectables/AccountService.html":{}}}],["usersservice",{"_index":456,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertype",{"_index":206,"title":{},"body":{"classes/AccountTypeEntity.html":{},"injectables/AccountTypeService.html":{}}}],["validator",{"_index":131,"title":{},"body":{"classes/AccountEntity.html":{},"dependencies.html":{}}}],["value",{"_index":361,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":645,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifypassword",{"_index":355,"title":{},"body":{"injectables/CommonService.html":{}}}],["verifypassword(password",{"_index":358,"title":{},"body":{"injectables/CommonService.html":{}}}],["version",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["volumen",{"_index":377,"title":{},"body":{"classes/PackageEntity.html":{}}}],["watch",{"_index":602,"title":{},"body":{"index.html":{}}}],["website",{"_index":634,"title":{},"body":{"index.html":{}}}],["weigth",{"_index":378,"title":{},"body":{"classes/PackageEntity.html":{}}}],["width",{"_index":379,"title":{},"body":{"classes/PackageEntity.html":{}}}],["wightunits",{"_index":380,"title":{},"body":{"classes/PackageEntity.html":{}}}],["you'd",{"_index":623,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":56,"title":{},"body":{"modules/AccountCredentialModule.html":{},"modules/AccountInfoKeysModule.html":{},"modules/AccountModule.html":{},"modules/AccountTypeModule.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/ClientsModule.html":{},"modules/CommonModule.html":{},"modules/PackagesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccountCredentialEntity.html":{"url":"classes/AccountCredentialEntity.html","title":"class - AccountCredentialEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountCredentialEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account-credential/models/account-credential.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                credential\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-credential/models/account-credential.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credential\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-credential/models/account-credential.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-credential/models/account-credential.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-credential/models/account-credential.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountEntity } from 'src/account/models/account.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, ManyToOne, Index } from 'typeorm';\n\n\n@Entity()\n@Index([\"account\", \"credential\"], { unique: true })\nexport class AccountCredentialEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  credential: string;\n\n  @Index()\n  @ManyToOne(() => AccountEntity, (account) => account.id)\n  account: AccountEntity;\n\n  @Column({ default: true })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountCredentialModule.html":{"url":"modules/AccountCredentialModule.html","title":"module - AccountCredentialModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountCredentialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountCredentialModule\n\n\n\ncluster_AccountCredentialModule_imports\n\n\n\ncluster_AccountCredentialModule_exports\n\n\n\ncluster_AccountCredentialModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountCredentialModule\n\nAccountCredentialModule\n\nAccountCredentialModule -->\n\nCommonModule->AccountCredentialModule\n\n\n\n\n\nAccountCredentialService \n\nAccountCredentialService \n\nAccountCredentialService  -->\n\nAccountCredentialModule->AccountCredentialService \n\n\n\n\n\nAccountCredentialService\n\nAccountCredentialService\n\nAccountCredentialModule -->\n\nAccountCredentialService->AccountCredentialModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/account-credential/account-credential.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountCredentialService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountCredentialService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CommonModule } from 'src/common/common.module';\nimport { AccountCredentialEntity } from './models/account-credential.entity';\nimport { AccountCredentialService } from './services/account-credential.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountCredentialEntity]), CommonModule],\n  exports: [TypeOrmModule, AccountCredentialService],\n  providers: [AccountCredentialService],\n})\nexport class AccountCredentialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountCredentialService.html":{"url":"injectables/AccountCredentialService.html","title":"injectable - AccountCredentialService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountCredentialService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account-credential/services/account-credential.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService, credentialRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/account-credential/services/account-credential.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(accountId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/account-credential/services/account-credential.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account-credential/services/account-credential.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(credential: AccountCredentialEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/account-credential/services/account-credential.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credential\n                                    \n                                                AccountCredentialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommonService } from './../../common/services/common.service';\nimport { CommonModule } from './../../common/common.module';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AccountCredentialEntity } from '../models/account-credential.entity';\n\n@Injectable()\nexport class AccountCredentialService {\n  constructor(\n     private commonService: CommonService,\n    @InjectRepository(AccountCredentialEntity)\n    private credentialRepository: Repository\n  ) {}\n\n  async findOne(accountId: number): Promise {\n    return this.credentialRepository.findOne({\n      where: { accountId: accountId, isActive: true },\n    });\n  }\n\n  async save(\n    credential: AccountCredentialEntity,\n  ): Promise {\n\n    credential.credential = await this.commonService.hashPassword(\n      credential.credential,\n    );\n\n    await this.credentialRepository.save(credential);\n    return credential;\n  }\n\n  async remove(id: string): Promise {\n    await this.credentialRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountEntity.html":{"url":"classes/AccountEntity.html","title":"class - AccountEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/models/account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountType\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accountType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountTypeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/models/account.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/models/account.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/models/account.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/models/account.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/models/account.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account/models/account.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, Index } from 'typeorm';\nimport { AccountTypeEntity } from '../../account-type/models/account-type.entity';\n\n@Entity()\nexport class AccountEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 45 })\n  firstName: string;\n\n  @Column({ length: 45 })\n  lastName: string;\n\n  @Index()\n  @Column({ length: 45 })\n  userName: string;\n\n  @Column({ length: 45 })\n  @IsEmail()\n  email: string;\n\n  @ManyToOne(() => AccountTypeEntity, (accountType) => accountType.id)\n  accountType: AccountTypeEntity;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountInfoKeysModule.html":{"url":"modules/AccountInfoKeysModule.html","title":"module - AccountInfoKeysModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountInfoKeysModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountInfoKeysModule\n\n\n\ncluster_AccountInfoKeysModule_providers\n\n\n\n\nAccountProfileKeysService\n\nAccountProfileKeysService\n\n\n\nAccountInfoKeysModule\n\nAccountInfoKeysModule\n\nAccountInfoKeysModule -->\n\nAccountProfileKeysService->AccountInfoKeysModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/account-info-keys/account-info-keys.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountProfileKeysService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountProfileKeysEntity } from './models/account-profile-keys.entity';\nimport { AccountProfileKeysService } from './services/account-profile-keys.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountProfileKeysEntity])],\n  exports: [TypeOrmModule],\n  providers: [AccountProfileKeysService],\n})\nexport class AccountInfoKeysModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AccountModule_exports\n\n\n\n\nAccountService \n\nAccountService \n\n\n\nAccountModule\n\nAccountModule\n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/account/account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountEntity } from './models/account.entity';\nimport { AccountService } from './services/account.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountEntity])],\n  exports: [TypeOrmModule, AccountService],\n  providers: [AccountService],\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountProfileKeysEntity.html":{"url":"classes/AccountProfileKeysEntity.html","title":"class - AccountProfileKeysEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountProfileKeysEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account-info-keys/models/account-profile-keys.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                keys\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-info-keys/models/account-profile-keys.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-info-keys/models/account-profile-keys.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-info-keys/models/account-profile-keys.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-info-keys/models/account-profile-keys.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountEntity } from 'src/account/models/account.entity';\nimport { Entity, Column, PrimaryGeneratedColumn, ManyToOne, Index, OneToOne, JoinColumn } from 'typeorm';\n\n\n@Entity()\nexport class AccountProfileKeysEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'jsonb', nullable: false })\n  keys: object;\n\n  @OneToOne(() => AccountEntity)\n  @JoinColumn()\n  account: AccountEntity;\n\n  @Column({ default: true })\n  isActive: string;\n\n  \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountProfileKeysService.html":{"url":"injectables/AccountProfileKeysService.html","title":"injectable - AccountProfileKeysService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountProfileKeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account-info-keys/services/account-profile-keys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(keysRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/account-info-keys/services/account-profile-keys.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keysRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(typeId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/account-info-keys/services/account-profile-keys.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account-info-keys/services/account-profile-keys.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account-info-keys/services/account-profile-keys.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(user: AccountProfileKeysEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/account-info-keys/services/account-profile-keys.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AccountProfileKeysEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AccountProfileKeysEntity } from '../models/account-profile-keys.entity';\n\n@Injectable()\nexport class AccountProfileKeysService {\n  constructor(\n    @InjectRepository(AccountProfileKeysEntity)\n    private keysRepository: Repository,\n  ) {}\n\n  async findAll(typeId: number): Promise {\n    return this.keysRepository.find({ where: { accountTypeId: typeId } });\n  }\n\n  findOne(id: string): Promise {\n    return this.keysRepository.findOne(id);\n  }\n\n  async save(user: AccountProfileKeysEntity): Promise {\n    await this.keysRepository.save(user);\n    return user;\n  }\n\n  async remove(id: string): Promise {\n    await this.keysRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account/services/account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/account/services/account.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(typeId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/account/services/account.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account/services/account.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account/services/account.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(user: AccountEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/account/services/account.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AccountEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AccountEntity } from '../models/account.entity';\n\n@Injectable()\nexport class AccountService {\n  constructor(\n    @InjectRepository(AccountEntity)\n    private usersRepository: Repository,\n  ) {}\n\n  async findAll(typeId: number): Promise {\n    return this.usersRepository.find({ where: { accountTypeId: typeId } });\n  }\n\n  findOne(id: string): Promise {\n    return this.usersRepository.findOne(id);\n  }\n\n  async save(user: AccountEntity): Promise {\n    await this.usersRepository.save(user);\n    return user;\n  }\n\n  async remove(id: string): Promise {\n    await this.usersRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountTypeEntity.html":{"url":"classes/AccountTypeEntity.html","title":"class - AccountTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account-type/models/account-type.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-type/models/account-type.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-type/models/account-type.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/account-type/models/account-type.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, Index } from 'typeorm';\n\n@Entity()\nexport class AccountTypeEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Index({ unique: true })\n  @Column({ length: 45 })\n  userType: string;\n\n  @Column({ default: true })\n  isActive: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountTypeModule.html":{"url":"modules/AccountTypeModule.html","title":"module - AccountTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountTypeModule\n\n\n\ncluster_AccountTypeModule_exports\n\n\n\ncluster_AccountTypeModule_providers\n\n\n\n\nAccountTypeService \n\nAccountTypeService \n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\nAccountTypeService  -->\n\nAccountTypeModule->AccountTypeService \n\n\n\n\n\nAccountTypeService\n\nAccountTypeService\n\nAccountTypeModule -->\n\nAccountTypeService->AccountTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/account-type/account-type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountTypeService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountTypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountTypeEntity } from './models/account-type.entity';\nimport { AccountTypeService } from './services/account-type.service';\n\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountTypeEntity])],\n  exports: [TypeOrmModule, AccountTypeService],\n  providers: [AccountTypeService],\n})\nexport class AccountTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountTypeService.html":{"url":"injectables/AccountTypeService.html","title":"injectable - AccountTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/account-type/services/account-type.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneType\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/account-type/services/account-type.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(typeId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/account-type/services/account-type.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account-type/services/account-type.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneType\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneType(typeUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account-type/services/account-type.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/account-type/services/account-type.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(user: AccountTypeEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/account-type/services/account-type.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AccountTypeEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AccountTypeEntity } from '../models/account-type.entity';\n\n@Injectable()\nexport class AccountTypeService {\n  constructor(\n    @InjectRepository(AccountTypeEntity)\n    private typesRepository: Repository,\n  ) {}\n\n  async findAll(typeId: number): Promise {\n    return this.typesRepository.find({ where: { accountTypeId: typeId } });\n  }\n\n  findOne(id: string): Promise {\n    return this.typesRepository.findOne(id);\n  }\n\n  async findOneType(typeUser: string): Promise {\n    return this.typesRepository.findOne({ where: { userType: typeUser } });\n  }\n\n  async save(user: AccountTypeEntity): Promise {\n    await this.typesRepository.save(user);\n    return user;\n  }\n\n  async remove(id: string): Promise {\n    await this.typesRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateReqDto.html":{"url":"classes/AgentCreateReqDto.html","title":"class - AgentCreateReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/dto/agent.create.request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirmation\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.request.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.request.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.request.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.request.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.request.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.request.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.request.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AgentCreateReqDto {\n\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  telephone: string;\n\n  @ApiProperty()\n  password: string;\n\n  @ApiProperty()\n  passwordConfirmation: string;\n  \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateResDto.html":{"url":"classes/AgentCreateResDto.html","title":"class - AgentCreateResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/dto/agent.create.response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/agents/dto/agent.create.response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AgentCreateResDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  telephone: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/agents.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/agents/agents.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApplicationConfigs } from 'config/application.properties.settings';\n\n@ApiTags('Agents')\n@Controller(`agents`)\nexport class AgentsController {\n  @Get()\n  findAll(): string {\n    return 'This action returns all cats';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_providers\n\n\n\n\nAgentsService\n\nAgentsService\n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AgentsController } from './agents.controller';\nimport { AgentsService } from './agents.service';\n\n@Module({\n  imports: [ConfigDefaultModule],\n  controllers: [AgentsController],\n  providers: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/agents.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AgentsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService-1.html":{"url":"injectables/AgentsService-1.html","title":"injectable - AgentsService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/agents/services/agents.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AgentsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccountCredentialModule\n\nAccountCredentialModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountCredentialModule->AppModule\n\n\n\n\n\nAccountInfoKeysModule\n\nAccountInfoKeysModule\n\nAppModule -->\n\nAccountInfoKeysModule->AppModule\n\n\n\n\n\nAccountModule\n\nAccountModule\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\nAppModule -->\n\nAccountTypeModule->AppModule\n\n\n\n\n\nAgentsModule\n\nAgentsModule\n\nAppModule -->\n\nAgentsModule->AppModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nAppModule -->\n\nClientsModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nPackagesModule\n\nPackagesModule\n\nAppModule -->\n\nPackagesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountCredentialModule\n                        \n                        \n                            AccountInfoKeysModule\n                        \n                        \n                            AccountModule\n                        \n                        \n                            AccountTypeModule\n                        \n                        \n                            AgentsModule\n                        \n                        \n                            ClientsModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            PackagesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule } from './clients/clients.module';\nimport { AgentsModule } from './agents/agents.module';\nimport { PackagesModule } from './packages/packages.module';\nimport { UsersModule } from './users/users.module';\nimport { AccountModule } from './account/account.module';\nimport { AccountTypeModule } from './account-type/account-type.module';\nimport { AccountCredentialModule } from './account-credential/account-credential.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountInfoKeysModule } from './account-info-keys/account-info-keys.module';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { CommonModule } from './common/common.module';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.HOST,\n      port: Number(process.env.PORT),\n      username: process.env.USER,\n      password: process.env.PASSWORD,\n      database: process.env.DB,\n      entities: [],\n      synchronize: true,\n      autoLoadEntities: true,\n    }),\n    ClientsModule,\n    AgentsModule,\n    PackagesModule,\n    UsersModule,\n    AccountModule,\n    AccountTypeModule,\n    AccountCredentialModule,\n    AccountInfoKeysModule,\n    CommonModule,\n  ],\n  exports: [],\n  controllers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientCreateReqDto.html":{"url":"classes/ClientCreateReqDto.html","title":"class - ClientCreateReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientCreateReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/dto/client.create.request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyName\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                passwordConfirmation\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.request.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class ClientCreateReqDto {\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  telephone: string;\n\n  @ApiProperty()\n  companyName: string;\n\n  @ApiProperty()\n  password: string;\n\n  @ApiProperty()\n  passwordConfirmation: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientCreateResDto.html":{"url":"classes/ClientCreateResDto.html","title":"class - ClientCreateResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientCreateResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/dto/client.create.response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyName\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                telephone\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.response.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clients/dto/client.create.response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class ClientCreateResDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  telephone: string;\n\n  @ApiProperty()\n  companyName: string;\n\n  @ApiProperty()\n  email: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientsController.html":{"url":"controllers/ClientsController.html","title":"controller - ClientsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/clients.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/clients/clients.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApplicationConfigs } from 'config/application.properties.settings';\n\n@ApiTags('Clients')\n@Controller(`clients`)\nexport class ClientsController {\n  @Get()\n  findAll(): string {\n    return 'This action returns all cats';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientsModule.html":{"url":"modules/ClientsModule.html","title":"module - ClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ClientsModule\n\n\n\ncluster_ClientsModule_providers\n\n\n\n\nClientsService\n\nClientsService\n\n\n\nClientsModule\n\nClientsModule\n\nClientsModule -->\n\nClientsService->ClientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/clients/clients.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { ClientsController } from './clients.controller';\nimport { ClientsService } from './services/clients.service';\n\n@Module({\n  imports: [ConfigDefaultModule],\n  controllers: [ClientsController],\n  providers: [ClientsService],\n})\nexport class ClientsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientsService.html":{"url":"injectables/ClientsService.html","title":"injectable - ClientsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clients/services/clients.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ClientsService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nCommonService \n\nCommonService \n\n\n\nCommonModule\n\nCommonModule\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './services/common.service';\n\n@Module({\n  exports: [CommonService],\n  providers: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                saltRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                VerifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/common.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        VerifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    VerifyPassword(password: string, compare: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/common.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    compare\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        saltRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/common/services/common.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class CommonService {\n  private readonly saltRounds = 10;\n\n  async VerifyPassword(password: string, compare: string): Promise {\n    return await bcrypt.compare(password, compare);\n  }\n\n async hashPassword(password: string): Promise {\n    const salt = await bcrypt.genSalt(this.saltRounds);\n    return await bcrypt.hash(password, salt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PackageEntity.html":{"url":"classes/PackageEntity.html","title":"class - PackageEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PackageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/models/package.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                heigth\n                            \n                            \n                                id\n                            \n                            \n                                large\n                            \n                            \n                                lbsWeigth\n                            \n                            \n                                units\n                            \n                            \n                                volumen\n                            \n                            \n                                weigth\n                            \n                            \n                                width\n                            \n                            \n                                WightUnits\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 45})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lbsWeigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        units\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        volumen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weigth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WightUnits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/packages/models/package.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class PackageEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 45 })\n  description: string;\n\n  @Column()\n  weigth: number;\n\n  @Column()\n  WightUnits: string;\n\n  @Column()\n  lbsWeigth: number;\n\n  @Column()\n  volumen: number;\n\n  @Column({ length: 25 })\n  units: string;\n\n  @Column()\n  large: number;\n\n  @Column()\n  heigth: number;\n\n  @Column()\n  width: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PackagesController.html":{"url":"controllers/PackagesController.html","title":"controller - PackagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PackagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/packages.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/packages/packages.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ApplicationConfigs } from 'config/application.properties.settings';\n\n@ApiTags('Packages')\n@Controller(`packages`)\nexport class PackagesController {\n  @Get()\n  findAll(): string {\n    return 'This action returns all cats';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PackagesModule.html":{"url":"modules/PackagesModule.html","title":"module - PackagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PackagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PackagesModule\n\n\n\ncluster_PackagesModule_providers\n\n\n\n\nPackagesService\n\nPackagesService\n\n\n\nPackagesModule\n\nPackagesModule\n\nPackagesModule -->\n\nPackagesService->PackagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/packages/packages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PackagesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PackagesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { PackageEntity } from './models/package.entity';\nimport { PackagesController } from './packages.controller';\nimport { PackagesService } from './services/packages.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([PackageEntity]), ConfigDefaultModule],\n  exports: [TypeOrmModule],\n  controllers: [PackagesController],\n  providers: [PackagesService],\n})\nexport class PackagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PackagesService.html":{"url":"injectables/PackagesService.html","title":"injectable - PackagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PackagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/packages/services/packages.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class PackagesService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCreateDto.html":{"url":"classes/UserCreateDto.html","title":"class - UserCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.create.request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.create.request.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.create.request.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.create.request.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.create.request.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.create.request.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UserCreateDto {\n\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  password: string;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.response.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class UserDto {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  firstName: string;\n\n  @ApiProperty()\n  lastName: string;\n\n  @ApiProperty()\n  userName: string;\n\n  @ApiProperty()\n  email: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserIdDto.html":{"url":"classes/UserIdDto.html","title":"class - UserIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.id.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserIdDto {\n  @ApiProperty()\n  id: number;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(res, createUserReqDto: UserCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UserCreateDto})@ApiResponse({status: undefined, type: UserDto, description: 'Registro creado correctamente'})@ApiResponse({status: undefined, description: 'El registro no pudo ser creado'})@Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserReqDto\n                                    \n                                                UserCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(res, params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiParam({name: 'id'})@ApiResponse({status: undefined, type: UserDto, description: 'Registro creado correctamente'})@ApiResponse({status: undefined, description: 'El registro no pudo ser creado'})@Get('/find/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { ApiBody, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ApplicationConfigs } from 'config/application.properties.settings';\nimport { AccountCredentialEntity } from 'src/account-credential/models/account-credential.entity';\nimport { AccountEntity } from 'src/account/models/account.entity';\nimport { UserCreateDto } from './dto/user.create.request.dto';\nimport { UserIdDto } from './dto/user.id.dto';\nimport { UserDto } from './dto/user.response.dto';\nimport { UsersService } from './services/users.service';\n\n@ApiTags('Users')\n@Controller(`users`)\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @ApiParam({ name:\"id\" })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: UserDto,\n    description: 'Registro creado correctamente',\n  })\n  @ApiResponse({\n    status: HttpStatus.FORBIDDEN,\n    description: 'El registro no pudo ser creado',\n  })\n  @Get('/find/:id')\n  async getUser(@Res() res, @Param() params): Promise {\n    try {\n      let userDto = await this.usersService.find(params.id);\n\n      return res.status(HttpStatus.OK).json(userDto);\n    } catch (error) {\n      return res.status(HttpStatus.FORBIDDEN);\n    }\n  }\n\n  @ApiBody({ type: UserCreateDto })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: UserDto,\n    description: 'Registro creado correctamente',\n  })\n  @ApiResponse({\n    status: HttpStatus.FORBIDDEN,\n    description: 'El registro no pudo ser creado',\n  })\n  @Post('/create')\n  async create(\n    @Res() res,\n    @Body() createUserReqDto: UserCreateDto,\n  ): Promise {\n    try {\n      let userDto = await this.usersService.create(createUserReqDto);\n\n      return res.status(HttpStatus.OK).json(userDto);\n    } catch (error) {\n      return res.status(HttpStatus.FORBIDDEN);\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccountCredentialModule\n\nAccountCredentialModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAccountCredentialModule->UsersModule\n\n\n\n\n\nAccountInfoKeysModule\n\nAccountInfoKeysModule\n\nUsersModule -->\n\nAccountInfoKeysModule->UsersModule\n\n\n\n\n\nAccountModule\n\nAccountModule\n\nUsersModule -->\n\nAccountModule->UsersModule\n\n\n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\nUsersModule -->\n\nAccountTypeModule->UsersModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountCredentialModule\n                        \n                        \n                            AccountInfoKeysModule\n                        \n                        \n                            AccountModule\n                        \n                        \n                            AccountTypeModule\n                        \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AccountTypeModule } from './../account-type/account-type.module';\nimport { CommonModule } from './../common/common.module';\nimport { AccountCredentialModule } from './../account-credential/account-credential.module';\nimport { Module } from '@nestjs/common';\nimport { ConfigDefaultModule } from 'config/enviroment.properties.setting';\nimport { AccountModule } from 'src/account/account.module';\nimport { UsersService } from './services/users.service';\nimport { UsersController } from './users.controller';\nimport { AccountInfoKeysModule } from 'src/account-info-keys/account-info-keys.module';\n\n@Module({\n  imports: [\n    ConfigDefaultModule,\n    AccountModule,\n    AccountCredentialModule,\n    AccountInfoKeysModule,\n    AccountTypeModule,\n    CommonModule\n  ],\n  providers: [UsersService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, credentialService: AccountCredentialService, accountTypeService: AccountTypeService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        credentialService\n                                                  \n                                                        \n                                                                        AccountCredentialService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountTypeService\n                                                  \n                                                        \n                                                                        AccountTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userDto: UserCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/services/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AccountTypeService } from './../../account-type/services/account-type.service';\nimport { CommonService } from './../../common/services/common.service';\nimport { UserCreateDto } from './../dto/user.create.request.dto';\nimport { AccountCredentialService } from './../../account-credential/services/account-credential.service';\nimport { AccountCredentialEntity } from './../../account-credential/models/account-credential.entity';\nimport { AccountEntity } from './../../account/models/account.entity';\nimport { Injectable } from '@nestjs/common';\nimport { AccountService } from 'src/account/services/account.service';\n\nimport { UserDto } from '../dto/user.response.dto';\nimport { UserIdDto } from '../dto/user.id.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private accountService: AccountService,\n    private credentialService: AccountCredentialService,\n    private accountTypeService: AccountTypeService,\n    private commonService: CommonService,\n  ) {}\n\n  async find(userId:string): Promise {\n    let userResDto: UserDto = new UserDto();\n    let userEntity = await this.accountService.findOne(userId);\n\n    userResDto.id = userEntity.id;\n    userResDto.email = userEntity.email;\n    userResDto.firstName = userEntity.firstName;\n    userResDto.lastName = userEntity.lastName;\n    userResDto.userName = userEntity.userName;\n\n    return userResDto;\n  }\n\n  async create(userDto: UserCreateDto): Promise {\n    let userNew = new AccountEntity();\n    let credential = new AccountCredentialEntity();\n    let userResDto: UserDto = new UserDto();\n\n    userNew.firstName = userDto.firstName;\n    userNew.lastName = userDto.lastName;\n    userNew.userName = userDto.userName;\n    userNew.email = userDto.email;\n\n    userNew.accountType = await this.accountTypeService.findOneType('User');\n\n    let userEntity = await this.accountService.save(userNew);\n\n    credential.account = userEntity;\n    credential.credential = userDto.password;\n    credential.isActive = true;\n\n    await this.credentialService.save(credential);\n\n    userResDto.id = userEntity.id;\n    userResDto.email = userEntity.email;\n    userResDto.firstName = userEntity.firstName;\n    userResDto.lastName = userEntity.lastName;\n    userResDto.userName = userEntity.userName;\n\n    return userResDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config/application.properties.settings.ts\n            \n            variable\n            ApplicationConfigs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/enviroment.properties.setting.ts\n            \n            variable\n            ConfigDefaultModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/openapi.properties.setting.ts\n            \n            variable\n            OPENAPI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/account-credential/models/account-credential.entity.ts\n            \n            class\n            AccountCredentialEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/account-credential/services/account-credential.service.ts\n            \n            injectable\n            AccountCredentialService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/account-info-keys/models/account-profile-keys.entity.ts\n            \n            class\n            AccountProfileKeysEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/account-info-keys/services/account-profile-keys.service.ts\n            \n            injectable\n            AccountProfileKeysService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/account-type/models/account-type.entity.ts\n            \n            class\n            AccountTypeEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/account-type/services/account-type.service.ts\n            \n            injectable\n            AccountTypeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/account/models/account.entity.ts\n            \n            class\n            AccountEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/account/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/agents/agents.controller.ts\n            \n            controller\n            AgentsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/agents/agents.service.ts\n            \n            injectable\n            AgentsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/agents/dto/agent.create.request.dto.ts\n            \n            class\n            AgentCreateReqDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/agents/dto/agent.create.response.dto.ts\n            \n            class\n            AgentCreateResDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/agents/services/agents.service.ts\n            \n            injectable\n            AgentsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/clients/clients.controller.ts\n            \n            controller\n            ClientsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/clients/dto/client.create.request.dto.ts\n            \n            class\n            ClientCreateReqDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/clients/dto/client.create.response.dto.ts\n            \n            class\n            ClientCreateResDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/clients/services/clients.service.ts\n            \n            injectable\n            ClientsService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/packages/models/package.entity.ts\n            \n            class\n            PackageEntity\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/packages/packages.controller.ts\n            \n            controller\n            PackagesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/packages/services/packages.service.ts\n            \n            injectable\n            PackagesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/user.create.request.dto.ts\n            \n            class\n            UserCreateDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/user.id.dto.ts\n            \n            class\n            UserIdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/user.response.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mikro-orm/core : ^4.5.6\n        \n            @mikro-orm/postgresql : ^4.5.6\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-validator : ^0.13.1\n        \n            pg : ^8.6.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountCredentialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountInfoKeysModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PackagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AccountCredentialModule\n\n\n\ncluster_AccountCredentialModule_imports\n\n\n\ncluster_AccountCredentialModule_exports\n\n\n\ncluster_AccountCredentialModule_providers\n\n\n\ncluster_AccountInfoKeysModule\n\n\n\ncluster_AccountInfoKeysModule_providers\n\n\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AccountTypeModule\n\n\n\ncluster_AccountTypeModule_exports\n\n\n\ncluster_AccountTypeModule_providers\n\n\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ClientsModule\n\n\n\ncluster_ClientsModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_PackagesModule\n\n\n\ncluster_PackagesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAccountCredentialModule\n\nAccountCredentialModule\n\nAccountCredentialModule -->\n\nCommonModule->AccountCredentialModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nAccountCredentialService \n\nAccountCredentialService \n\nAccountCredentialService  -->\n\nAccountCredentialModule->AccountCredentialService \n\n\n\nUsersModule -->\n\nAccountCredentialModule->UsersModule\n\n\n\nAppModule -->\n\nAccountCredentialModule->AppModule\n\n\n\n\n\nAccountCredentialService\n\nAccountCredentialService\n\nAccountCredentialModule -->\n\nAccountCredentialService->AccountCredentialModule\n\n\n\n\n\nAccountProfileKeysService\n\nAccountProfileKeysService\n\n\n\nAccountInfoKeysModule\n\nAccountInfoKeysModule\n\nAccountInfoKeysModule -->\n\nAccountProfileKeysService->AccountInfoKeysModule\n\n\n\nUsersModule -->\n\nAccountInfoKeysModule->UsersModule\n\n\n\nAppModule -->\n\nAccountInfoKeysModule->AppModule\n\n\n\n\n\nAccountService \n\nAccountService \n\n\n\nAccountModule\n\nAccountModule\n\nAccountService  -->\n\nAccountModule->AccountService \n\n\n\nUsersModule -->\n\nAccountModule->UsersModule\n\n\n\nAppModule -->\n\nAccountModule->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAccountModule -->\n\nAccountService->AccountModule\n\n\n\n\n\nAccountTypeService \n\nAccountTypeService \n\n\n\nAccountTypeModule\n\nAccountTypeModule\n\nAccountTypeService  -->\n\nAccountTypeModule->AccountTypeService \n\n\n\nUsersModule -->\n\nAccountTypeModule->UsersModule\n\n\n\nAppModule -->\n\nAccountTypeModule->AppModule\n\n\n\n\n\nAccountTypeService\n\nAccountTypeService\n\nAccountTypeModule -->\n\nAccountTypeService->AccountTypeModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\nAppModule -->\n\nAgentsModule->AppModule\n\n\n\n\n\nClientsModule\n\nClientsModule\n\nAppModule -->\n\nClientsModule->AppModule\n\n\n\n\n\nPackagesModule\n\nPackagesModule\n\nAppModule -->\n\nPackagesModule->AppModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nClientsService\n\nClientsService\n\nClientsModule -->\n\nClientsService->ClientsModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nPackagesService\n\nPackagesService\n\nPackagesModule -->\n\nPackagesService->PackagesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationConfigs   (config/.../application.properties.settings.ts)\n                        \n                        \n                            ConfigDefaultModule   (config/.../enviroment.properties.setting.ts)\n                        \n                        \n                            OPENAPI   (config/.../openapi.properties.setting.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/application.properties.settings.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApplicationConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  router: `${process.env.PREFIX}/${process.env.VERSION}`,\n}\n                    \n                \n\n\n        \n    \n\n    config/enviroment.properties.setting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaultModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ConfigModule.forRoot({\n  envFilePath: `.env.${process.env.NODE_ENV || 'development'}`,\n  isGlobal: true,\n})\n                    \n                \n\n\n        \n    \n\n    config/openapi.properties.setting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OPENAPI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: \"Api.Backend.Services\",\n  description: \"Catalog services\" ,\n  version: \"1.0.0\"\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
